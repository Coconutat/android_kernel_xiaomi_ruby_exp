/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2019 MediaTek Inc.
 */

/*****************************************************************************
 *
 * Filename:
 * ---------
 *     IMX766OFILMmipi_Sensor.h
 *
 * Project:
 * --------
 *     ALPS
 *
 * Description:
 * ------------
 *     CMOS sensor header file
 *
 ****************************************************************************/
#ifndef _IMX766OFILMMIPI_SENSOR_H
#define _IMX766OFILMMIPI_SENSOR_H

enum {
	OTP_QSC_NONE = 0x0,
	OTP_QSC_INTERNAL,
	OTP_QSC_CUSTOM,
};

struct imgsensor_mode_struct {
	kal_uint32 pclk; /* record different mode's pclk */
	kal_uint32 linelength; /* record different mode's linelength */
	kal_uint32 framelength; /* record different mode's framelength */

	kal_uint8 startx; /* record different mode's startx of grabwindow */
	kal_uint8 starty; /* record different mode's startx of grabwindow */

	kal_uint16 grabwindow_width;
	kal_uint16 grabwindow_height;

/* for MIPIDataLowPwr2HighSpeedSettleDelayCount by different scenario*/
	kal_uint8 mipi_data_lp2hs_settle_dc;

 /*     following for GetDefaultFramerateByScenario()    */
	kal_uint16 max_framerate;
	kal_uint32 mipi_pixel_rate;
};

/* SENSOR PRIVATE STRUCT FOR VARIABLES*/
struct imgsensor_struct {
	kal_uint8 mirror; /* mirrorflip information */


	kal_uint32 shutter; /* current shutter */
	kal_uint16 gain; /* current gain */

	kal_uint32 pclk; /* current pclk */

	kal_uint32 frame_length; /* current framelength */
	kal_uint32 line_length; /* current linelength */

	kal_uint32 min_frame_length;
	kal_uint16 dummy_pixel; /* current dummypixel */
	kal_uint32 dummy_line; /* current dummline */

	kal_uint16 current_fps; /* current max fps */
	kal_bool autoflicker_en; /* record autoflicker enable or disable */
	kal_bool test_pattern; /* record test pattern mode or not */
	enum MSDK_SCENARIO_ID_ENUM current_scenario_id;
	kal_bool ihdr_en; /* ihdr enable or disable */
	kal_uint8 ihdr_mode; /* ihdr enable or disable */
	kal_uint8 pdaf_mode; /* ihdr enable or disable */
	kal_uint8 i2c_write_id; /* record current sensor's i2c write id */
	kal_uint8 vendor_id;
	struct IMGSENSOR_AE_FRM_MODE ae_frm_mode;
	kal_uint8 current_ae_effective_frame;

	kal_bool extend_frame_length_en;
	kal_bool fast_mode_on;
};

/* SENSOR PRIVATE STRUCT FOR CONSTANT*/
struct imgsensor_info_struct {
	kal_uint32 sensor_id; /* record sensor id defined in Kd_imgsensor.h */
	kal_uint32 checksum_value; /* checksum value for Camera Auto Test */
	struct imgsensor_mode_struct pre;
	struct imgsensor_mode_struct cap;
	struct imgsensor_mode_struct normal_video;
	struct imgsensor_mode_struct hs_video;
	struct imgsensor_mode_struct slim_video;
	struct imgsensor_mode_struct custom1;
	struct imgsensor_mode_struct custom2;
	struct imgsensor_mode_struct custom3;
	struct imgsensor_mode_struct custom4;
	struct imgsensor_mode_struct custom5;


	kal_uint8 ae_shut_delay_frame; /* shutter delay frame for AE cycle */
	kal_uint8 ae_sensor_gain_delay_frame;
	kal_uint8 ae_ispGain_delay_frame;
	kal_uint8 ihdr_support; /* 1, support; 0,not support */
	kal_uint8 ihdr_le_firstline; /* 1,le first ; 0, se first */
	kal_uint8 temperature_support;
	kal_uint8 sensor_mode_num; /* support sensor mode num */

	kal_uint8 cap_delay_frame; /* enter capture delay frame num */
	kal_uint8 pre_delay_frame; /* enter preview delay frame num */
	kal_uint8 video_delay_frame; /* enter video delay frame num */
	kal_uint8 hs_video_delay_frame;
	kal_uint8 slim_video_delay_frame; /* enter slim video delay frame num */
	kal_uint8 custom1_delay_frame; /* enter custom1 delay frame num */
	kal_uint8 custom2_delay_frame; /* enter custom2 delay frame num */
	kal_uint8 custom3_delay_frame; /* enter custom3 delay frame num */
	kal_uint8 custom4_delay_frame; /* enter custom2 delay frame num */
	kal_uint8 custom5_delay_frame; /* enter custom3 delay frame num */
	kal_uint8  frame_time_delay_frame;
	kal_uint8 margin; /* sensor framelength & shutter margin */
	kal_uint32 min_shutter; /* min shutter */
	kal_uint32 min_gain;
	kal_uint32 max_gain;
	kal_uint32 min_gain_iso;
	kal_uint32 gain_step;
	kal_uint32 gain_type;
	kal_uint32 max_frame_length;
	kal_uint8 isp_driving_current; /* mclk driving current */
	kal_uint8 sensor_interface_type; /* sensor_interface_type */
	kal_uint8 mipi_sensor_type;
	/* 0,MIPI_OPHY_NCSI2; 1,MIPI_OPHY_CSI2, default is NCSI2,
	 * don't modify this para
	 */
	kal_uint8 mipi_settle_delay_mode;
	/* 0, high speed signal auto detect;
	 * 1, use settle delay,unit is ns,
	 * default is auto detect, don't modify this para
	 */
	kal_uint8 sensor_output_dataformat;
	kal_uint8 mclk;	 /* mclk value, suggest 24 or 26 for 24Mhz or 26Mhz */
	kal_uint32 i2c_speed; /* i2c speed */
	kal_uint8 mipi_lane_num; /* mipi lane num */
	kal_uint8 i2c_addr_table[5];
};

/* SENSOR READ/WRITE ID */
/* #define IMGSENSOR_WRITE_ID_1 (0x6c) */
/* #define IMGSENSOR_READ_ID_1  (0x6d) */
/* #define IMGSENSOR_WRITE_ID_2 (0x20) */
/* #define IMGSENSOR_READ_ID_2  (0x21) */

extern int iReadRegI2C(u8 *a_pSendData, u16 a_sizeSendData,
	u8 *a_pRecvData, u16 a_sizeRecvData,
		       u16 i2cId);
extern int iWriteRegI2C(u8 *a_pSendData, u16 a_sizeSendData, u16 i2cId);

//extern void read_imx230_eeprom(void);
int iBurstWriteReg_multi(u8 *pData, u32 bytes, u16 i2cId,
	u16 transfer_length, u16 timing);

extern int iReadReg(u16 a_u2Addr, u8 *a_puBuff, u16 i2cId);
extern int iWriteReg(u16 a_u2Addr, u32 a_u4Data, u32 a_u4Bytes, u16 i2cId);
extern void kdSetI2CSpeed(u16 i2cSpeed);
extern int iBurstWriteReg_multi(u8 *pData, u32 bytes, u16 i2cId,
				u16 transfer_length, u16 timing);


//init
static kal_uint16 imx766ofilm_init_setting[] = {
0x0136, 0x18,
0x0137, 0x00,
0x33F0, 0x02,
0x33F1, 0x08,
0x0111, 0x03,
0x33D3, 0x01,
0x3892, 0x01,
0x4C14, 0x00,
0x4C15, 0x07,
0x4C16, 0x00,
0x4C17, 0x1B,
0x4C1A, 0x00,
0x4C1B, 0x03,
0x4C1C, 0x00,
0x4C1D, 0x00,
0x4C1E, 0x00,
0x4C1F, 0x02,
0x4C20, 0x00,
0x4C21, 0x5F,
0x4C26, 0x00,
0x4C27, 0x43,
0x4C28, 0x00,
0x4C29, 0x09,
0x4C2A, 0x00,
0x4C2B, 0x4A,
0x4C2C, 0x00,
0x4C2D, 0x00,
0x4C2E, 0x00,
0x4C2F, 0x02,
0x4C30, 0x00,
0x4C31, 0xC6,
0x4C3E, 0x00,
0x4C3F, 0x55,
0x4C52, 0x00,
0x4C53, 0x97,
0x4CB4, 0x00,
0x4CB5, 0x55,
0x4CC8, 0x00,
0x4CC9, 0x97,
0x4D04, 0x00,
0x4D05, 0x4F,
0x4D74, 0x00,
0x4D75, 0x55,
0x4F06, 0x00,
0x4F07, 0x5F,
0x4F48, 0x00,
0x4F49, 0xC6,
0x544A, 0xFF,
0x544B, 0xFF,
0x544E, 0x01,
0x544F, 0xBD,
0x5452, 0xFF,
0x5453, 0xFF,
0x5456, 0x00,
0x5457, 0xA5,
0x545A, 0xFF,
0x545B, 0xFF,
0x545E, 0x00,
0x545F, 0xA5,
0x5496, 0x00,
0x5497, 0xA2,
0x54F6, 0x01,
0x54F7, 0x55,
0x54F8, 0x01,
0x54F9, 0x61,
0x5670, 0x00,
0x5671, 0x85,
0x5672, 0x01,
0x5673, 0x77,
0x5674, 0x01,
0x5675, 0x2F,
0x5676, 0x02,
0x5677, 0x55,
0x5678, 0x00,
0x5679, 0x85,
0x567A, 0x01,
0x567B, 0x77,
0x567C, 0x01,
0x567D, 0x2F,
0x567E, 0x02,
0x567F, 0x55,
0x5680, 0x00,
0x5681, 0x85,
0x5682, 0x01,
0x5683, 0x77,
0x5684, 0x01,
0x5685, 0x2F,
0x5686, 0x02,
0x5687, 0x55,
0x5688, 0x00,
0x5689, 0x85,
0x568A, 0x01,
0x568B, 0x77,
0x568C, 0x01,
0x568D, 0x2F,
0x568E, 0x02,
0x568F, 0x55,
0x5690, 0x01,
0x5691, 0x7A,
0x5692, 0x02,
0x5693, 0x6C,
0x5694, 0x01,
0x5695, 0x35,
0x5696, 0x02,
0x5697, 0x5B,
0x5698, 0x01,
0x5699, 0x7A,
0x569A, 0x02,
0x569B, 0x6C,
0x569C, 0x01,
0x569D, 0x35,
0x569E, 0x02,
0x569F, 0x5B,
0x56A0, 0x01,
0x56A1, 0x7A,
0x56A2, 0x02,
0x56A3, 0x6C,
0x56A4, 0x01,
0x56A5, 0x35,
0x56A6, 0x02,
0x56A7, 0x5B,
0x56A8, 0x01,
0x56A9, 0x80,
0x56AA, 0x02,
0x56AB, 0x72,
0x56AC, 0x01,
0x56AD, 0x2F,
0x56AE, 0x02,
0x56AF, 0x55,
0x5902, 0x0E,
0x5A50, 0x04,
0x5A51, 0x04,
0x5A69, 0x01,
0x5C49, 0x0D,
0x5D60, 0x08,
0x5D61, 0x08,
0x5D62, 0x08,
0x5D63, 0x08,
0x5D64, 0x08,
0x5D67, 0x08,
0x5D6C, 0x08,
0x5D6E, 0x08,
0x5D71, 0x08,
0x5D8E, 0x14,
0x5D90, 0x03,
0x5D91, 0x0A,
0x5D92, 0x1F,
0x5D93, 0x05,
0x5D97, 0x1F,
0x5D9A, 0x06,
0x5D9C, 0x1F,
0x5DA1, 0x1F,
0x5DA6, 0x1F,
0x5DA8, 0x1F,
0x5DAB, 0x1F,
0x5DC0, 0x06,
0x5DC1, 0x06,
0x5DC2, 0x07,
0x5DC3, 0x06,
0x5DC4, 0x07,
0x5DC7, 0x07,
0x5DCC, 0x07,
0x5DCE, 0x07,
0x5DD1, 0x07,
0x5E3E, 0x00,
0x5E3F, 0x00,
0x5E41, 0x00,
0x5E48, 0x00,
0x5E49, 0x00,
0x5E4A, 0x00,
0x5E4C, 0x00,
0x5E4D, 0x00,
0x5E4E, 0x00,
0x6026, 0x03,
0x6028, 0x03,
0x602A, 0x03,
0x602C, 0x03,
0x602F, 0x03,
0x6036, 0x03,
0x6038, 0x03,
0x603A, 0x03,
0x603C, 0x03,
0x603F, 0x03,
0x6074, 0x19,
0x6076, 0x19,
0x6078, 0x19,
0x607A, 0x19,
0x607D, 0x19,
0x6084, 0x32,
0x6086, 0x32,
0x6088, 0x32,
0x608A, 0x32,
0x608D, 0x32,
0x60C2, 0x4A,
0x60C4, 0x4A,
0x60CB, 0x4A,
0x60D2, 0x4A,
0x60D4, 0x4A,
0x60DB, 0x4A,
0x62F9, 0x14,
0x6305, 0x13,
0x6307, 0x13,
0x630A, 0x13,
0x630D, 0x0D,
0x6317, 0x0D,
0x632F, 0x2E,
0x6333, 0x2E,
0x6339, 0x2E,
0x6343, 0x2E,
0x6347, 0x2E,
0x634D, 0x2E,
0x6352, 0x00,
0x6353, 0x5F,
0x6366, 0x00,
0x6367, 0x5F,
0x638F, 0x95,
0x6393, 0x95,
0x6399, 0x95,
0x63A3, 0x95,
0x63A7, 0x95,
0x63AD, 0x95,
0x63B2, 0x00,
0x63B3, 0xC6,
0x63C6, 0x00,
0x63C7, 0xC6,
0x8BDB, 0x02,
0x8BDE, 0x02,
0x8BE1, 0x2D,
0x8BE4, 0x00,
0x8BE5, 0x00,
0x8BE6, 0x01,
0x9002, 0x14,
0x9200, 0xB5,
0x9201, 0x9E,
0x9202, 0xB5,
0x9203, 0x42,
0x9204, 0xB5,
0x9205, 0x43,
0x9206, 0xBD,
0x9207, 0x20,
0x9208, 0xBD,
0x9209, 0x22,
0x920A, 0xBD,
0x920B, 0x23,
0xB5D7, 0x10,
0xBD24, 0x00,
0xBD25, 0x00,
0xBD26, 0x00,
0xBD27, 0x00,
0xBD28, 0x00,
0xBD29, 0x00,
0xBD2A, 0x00,
0xBD2B, 0x00,
0xBD2C, 0x32,
0xBD2D, 0x70,
0xBD2E, 0x25,
0xBD2F, 0x30,
0xBD30, 0x3B,
0xBD31, 0xE0,
0xBD32, 0x69,
0xBD33, 0x40,
0xBD34, 0x25,
0xBD35, 0x90,
0xBD36, 0x58,
0xBD37, 0x00,
0xBD38, 0x00,
0xBD39, 0x00,
0xBD3A, 0x00,
0xBD3B, 0x00,
0xBD3C, 0x32,
0xBD3D, 0x70,
0xBD3E, 0x25,
0xBD3F, 0x90,
0xBD40, 0x58,
0xBD41, 0x00,
0x793B, 0x01,
0xACC6, 0x00,
0xACF5, 0x00,
0x793B, 0x00,
0x1F04, 0xB3,
0x1F05, 0x01,
0x1F06, 0x07,
0x1F07, 0x66,
0x1F08, 0x01,
0x4D18, 0x00,
0x4D19, 0x9D,
0x4D88, 0x00,
0x4D89, 0x97,
0x5C57, 0x0A,
0x5D94, 0x1F,
0x5D9E, 0x1F,
0x5E50, 0x23,
0x5E51, 0x20,
0x5E52, 0x07,
0x5E53, 0x20,
0x5E54, 0x07,
0x5E55, 0x27,
0x5E56, 0x0B,
0x5E57, 0x24,
0x5E58, 0x0B,
0x5E60, 0x24,
0x5E61, 0x24,
0x5E62, 0x1B,
0x5E63, 0x23,
0x5E64, 0x1B,
0x5E65, 0x28,
0x5E66, 0x22,
0x5E67, 0x28,
0x5E68, 0x23,
0x5E70, 0x25,
0x5E71, 0x24,
0x5E72, 0x20,
0x5E73, 0x24,
0x5E74, 0x20,
0x5E75, 0x28,
0x5E76, 0x27,
0x5E77, 0x29,
0x5E78, 0x24,
0x5E80, 0x25,
0x5E81, 0x25,
0x5E82, 0x24,
0x5E83, 0x25,
0x5E84, 0x23,
0x5E85, 0x2A,
0x5E86, 0x28,
0x5E87, 0x2A,
0x5E88, 0x28,
0x5E90, 0x24,
0x5E91, 0x24,
0x5E92, 0x28,
0x5E93, 0x29,
0x5E97, 0x25,
0x5E98, 0x25,
0x5E99, 0x2A,
0x5E9A, 0x2A,
0x5E9E, 0x3A,
0x5E9F, 0x3F,
0x5EA0, 0x17,
0x5EA1, 0x3F,
0x5EA2, 0x17,
0x5EA3, 0x32,
0x5EA4, 0x10,
0x5EA5, 0x33,
0x5EA6, 0x10,
0x5EAE, 0x3D,
0x5EAF, 0x48,
0x5EB0, 0x3B,
0x5EB1, 0x45,
0x5EB2, 0x37,
0x5EB3, 0x3A,
0x5EB4, 0x31,
0x5EB5, 0x3A,
0x5EB6, 0x31,
0x5EBE, 0x40,
0x5EBF, 0x48,
0x5EC0, 0x3F,
0x5EC1, 0x45,
0x5EC2, 0x3F,
0x5EC3, 0x3A,
0x5EC4, 0x32,
0x5EC5, 0x3A,
0x5EC6, 0x33,
0x5ECE, 0x4B,
0x5ECF, 0x4A,
0x5ED0, 0x48,
0x5ED1, 0x4C,
0x5ED2, 0x45,
0x5ED3, 0x3F,
0x5ED4, 0x3A,
0x5ED5, 0x3F,
0x5ED6, 0x3A,
0x5EDE, 0x48,
0x5EDF, 0x45,
0x5EE0, 0x3A,
0x5EE1, 0x3A,
0x5EE5, 0x4A,
0x5EE6, 0x4C,
0x5EE7, 0x3F,
0x5EE8, 0x3F,
0x5EEC, 0x06,
0x5EED, 0x06,
0x5EEE, 0x02,
0x5EEF, 0x06,
0x5EF0, 0x01,
0x5EF1, 0x09,
0x5EF2, 0x05,
0x5EF3, 0x06,
0x5EF4, 0x04,
0x5EFC, 0x07,
0x5EFD, 0x09,
0x5EFE, 0x05,
0x5EFF, 0x08,
0x5F00, 0x04,
0x5F01, 0x09,
0x5F02, 0x05,
0x5F03, 0x09,
0x5F04, 0x04,
0x5F0C, 0x08,
0x5F0D, 0x09,
0x5F0E, 0x06,
0x5F0F, 0x09,
0x5F10, 0x06,
0x5F11, 0x09,
0x5F12, 0x09,
0x5F13, 0x09,
0x5F14, 0x06,
0x5F1C, 0x09,
0x5F1D, 0x09,
0x5F1E, 0x09,
0x5F1F, 0x09,
0x5F20, 0x08,
0x5F21, 0x09,
0x5F22, 0x09,
0x5F23, 0x09,
0x5F24, 0x09,
0x5F2C, 0x09,
0x5F2D, 0x09,
0x5F2E, 0x09,
0x5F2F, 0x09,
0x5F33, 0x09,
0x5F34, 0x09,
0x5F35, 0x09,
0x5F36, 0x09,
0x5F3A, 0x01,
0x5F3D, 0x07,
0x5F3F, 0x01,
0x5F4B, 0x01,
0x5F4D, 0x04,
0x5F4F, 0x02,
0x5F51, 0x02,
0x5F5A, 0x02,
0x5F5B, 0x01,
0x5F5D, 0x03,
0x5F5E, 0x07,
0x5F5F, 0x01,
0x5F60, 0x01,
0x5F61, 0x01,
0x5F6A, 0x01,
0x5F6C, 0x01,
0x5F6D, 0x01,
0x5F6E, 0x04,
0x5F70, 0x02,
0x5F72, 0x02,
0x5F7A, 0x01,
0x5F7B, 0x03,
0x5F7C, 0x01,
0x5F7D, 0x01,
0x5F82, 0x01,
0x60C6, 0x4A,
0x60C8, 0x4A,
0x60D6, 0x4A,
0x60D8, 0x4A,
0x62E4, 0x33,
0x62E9, 0x33,
0x62EE, 0x1C,
0x62EF, 0x33,
0x62F3, 0x33,
0x62F6, 0x1C,
0x33F2, 0x01,
0x1F04, 0xA3,
0x1F05, 0x01,
0x406E, 0x00,
0x406F, 0x08,
0x4D08, 0x00,
0x4D09, 0x2C,
0x4D0E, 0x00,
0x4D0F, 0x64,
0x4D18, 0x00,
0x4D19, 0xB1,
0x4D1E, 0x00,
0x4D1F, 0xCB,
0x4D3A, 0x00,
0x4D3B, 0x91,
0x4D40, 0x00,
0x4D41, 0x64,
0x4D4C, 0x00,
0x4D4D, 0xE8,
0x4D52, 0x00,
0x4D53, 0xCB,
0x4D78, 0x00,
0x4D79, 0x2C,
0x4D7E, 0x00,
0x4D7F, 0x64,
0x4D88, 0x00,
0x4D89, 0xAB,
0x4D8E, 0x00,
0x4D8F, 0xCB,
0x4DA6, 0x00,
0x4DA7, 0xE7,
0x4DAC, 0x00,
0x4DAD, 0xCB,
0x5B98, 0x00,
0x5C52, 0x05,
0x5C57, 0x09,
0x5D94, 0x0A,
0x5D9E, 0x0A,
0x5E50, 0x22,
0x5E51, 0x22,
0x5E52, 0x07,
0x5E53, 0x20,
0x5E54, 0x06,
0x5E55, 0x23,
0x5E56, 0x0A,
0x5E57, 0x23,
0x5E58, 0x0A,
0x5E60, 0x25,
0x5E61, 0x29,
0x5E62, 0x1C,
0x5E63, 0x26,
0x5E64, 0x1C,
0x5E65, 0x2D,
0x5E66, 0x1E,
0x5E67, 0x2A,
0x5E68, 0x1E,
0x5E70, 0x26,
0x5E71, 0x26,
0x5E72, 0x22,
0x5E73, 0x23,
0x5E74, 0x20,
0x5E75, 0x28,
0x5E76, 0x23,
0x5E77, 0x28,
0x5E78, 0x23,
0x5E80, 0x28,
0x5E81, 0x28,
0x5E82, 0x29,
0x5E83, 0x27,
0x5E84, 0x26,
0x5E85, 0x2A,
0x5E86, 0x2D,
0x5E87, 0x2A,
0x5E88, 0x2A,
0x5E90, 0x26,
0x5E91, 0x23,
0x5E92, 0x28,
0x5E93, 0x28,
0x5E97, 0x2F,
0x5E98, 0x2E,
0x5E99, 0x32,
0x5E9A, 0x32,
0x5E9E, 0x50,
0x5E9F, 0x50,
0x5EA0, 0x1E,
0x5EA1, 0x50,
0x5EA2, 0x1D,
0x5EA3, 0x3E,
0x5EA4, 0x14,
0x5EA5, 0x3E,
0x5EA6, 0x14,
0x5EAE, 0x58,
0x5EAF, 0x5E,
0x5EB0, 0x4B,
0x5EB1, 0x5A,
0x5EB2, 0x4B,
0x5EB3, 0x4C,
0x5EB4, 0x3A,
0x5EB5, 0x4C,
0x5EB6, 0x38,
0x5EBE, 0x56,
0x5EBF, 0x57,
0x5EC0, 0x50,
0x5EC1, 0x55,
0x5EC2, 0x50,
0x5EC3, 0x46,
0x5EC4, 0x3E,
0x5EC5, 0x46,
0x5EC6, 0x3E,
0x5ECE, 0x5A,
0x5ECF, 0x5F,
0x5ED0, 0x5E,
0x5ED1, 0x5A,
0x5ED2, 0x5A,
0x5ED3, 0x50,
0x5ED4, 0x4C,
0x5ED5, 0x50,
0x5ED6, 0x4C,
0x5EDE, 0x57,
0x5EDF, 0x55,
0x5EE0, 0x46,
0x5EE1, 0x46,
0x5EE5, 0x73,
0x5EE6, 0x6E,
0x5EE7, 0x5F,
0x5EE8, 0x5A,
0x5EEC, 0x0A,
0x5EED, 0x0A,
0x5EEE, 0x0F,
0x5EEF, 0x0A,
0x5EF0, 0x0E,
0x5EF1, 0x08,
0x5EF2, 0x0C,
0x5EF3, 0x0C,
0x5EF4, 0x0F,
0x5EFC, 0x0A,
0x5EFD, 0x0A,
0x5EFE, 0x14,
0x5EFF, 0x0A,
0x5F00, 0x14,
0x5F01, 0x0A,
0x5F02, 0x14,
0x5F03, 0x0A,
0x5F04, 0x19,
0x5F0C, 0x0A,
0x5F0D, 0x0A,
0x5F0E, 0x0A,
0x5F0F, 0x05,
0x5F10, 0x0A,
0x5F11, 0x06,
0x5F12, 0x08,
0x5F13, 0x0A,
0x5F14, 0x0C,
0x5F1C, 0x0A,
0x5F1D, 0x0A,
0x5F1E, 0x0A,
0x5F1F, 0x0A,
0x5F20, 0x0A,
0x5F21, 0x0A,
0x5F22, 0x0A,
0x5F23, 0x0A,
0x5F24, 0x0A,
0x5F2C, 0x0A,
0x5F2D, 0x05,
0x5F2E, 0x06,
0x5F2F, 0x0A,
0x5F33, 0x0A,
0x5F34, 0x0A,
0x5F35, 0x0A,
0x5F36, 0x0A,
0x5F3A, 0x00,
0x5F3D, 0x02,
0x5F3F, 0x0A,
0x5F4A, 0x0A,
0x5F4B, 0x0A,
0x5F4D, 0x0F,
0x5F4F, 0x00,
0x5F51, 0x00,
0x5F5A, 0x00,
0x5F5B, 0x00,
0x5F5D, 0x0A,
0x5F5E, 0x02,
0x5F5F, 0x0A,
0x5F60, 0x0A,
0x5F61, 0x00,
0x5F6A, 0x00,
0x5F6C, 0x0A,
0x5F6D, 0x06,
0x5F6E, 0x0F,
0x5F70, 0x00,
0x5F72, 0x00,
0x5F7A, 0x00,
0x5F7B, 0x0A,
0x5F7C, 0x0A,
0x5F7D, 0x00,
0x5F82, 0x06,
0x60C6, 0x36,
0x60C8, 0x36,
0x60D6, 0x36,
0x60D8, 0x36,
0x62DF, 0x56,
0x62E0, 0x52,
0x62E4, 0x38,
0x62E5, 0x51,
0x62E9, 0x35,
0x62EA, 0x54,
0x62EE, 0x1D,
0x62EF, 0x38,
0x62F3, 0x33,
0x62F6, 0x26,
0x6412, 0x1E,
0x6413, 0x1E,
0x6414, 0x1E,
0x6415, 0x1E,
0x6416, 0x1E,
0x6417, 0x1E,
0x6418, 0x1E,
0x641A, 0x1E,
0x641B, 0x1E,
0x641C, 0x1E,
0x641D, 0x1E,
0x641E, 0x1E,
0x641F, 0x1E,
0x6420, 0x1E,
0x6421, 0x1E,
0x6422, 0x1E,
0x6424, 0x1E,
0x6425, 0x1E,
0x6426, 0x1E,
0x6427, 0x1E,
0x6428, 0x1E,
0x6429, 0x1E,
0x642A, 0x1E,
0x642B, 0x1E,
0x642C, 0x1E,
0x642E, 0x1E,
0x642F, 0x1E,
0x6430, 0x1E,
0x6431, 0x1E,
0x6432, 0x1E,
0x6433, 0x1E,
0x6434, 0x1E,
0x6435, 0x1E,
0x6436, 0x1E,
0x6438, 0x1E,
0x6439, 0x1E,
0x643A, 0x1E,
0x643B, 0x1E,
0x643D, 0x1E,
0x643E, 0x1E,
0x643F, 0x1E,
0x6441, 0x1E,
0x33F2, 0x02,
0x1F08, 0x00,
0x86A9, 0x4E,
0x32D2, 0x01,
0xA307, 0x30,
0xA309, 0x30,
0xA30B, 0x30,
0xA406, 0x03,
0xA407, 0x48,
0xA408, 0x03,
0xA409, 0x48,
0xA40A, 0x03,
0xA40B, 0x48,
};

//4096x3072 @30fps-Vbin
static kal_uint16 imx766ofilm_preview_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x7A,
0x0343, 0x00,
0x0340, 0x0E,
0x0341, 0xA6,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x00,
0x0347, 0x00,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x17,
0x034B, 0xFF,
0x0900, 0x01,
0x0901, 0x22,
0x0902, 0x08,
0x3005, 0x02,
0x3120, 0x04,
0x3121, 0x01,
0x3200, 0x41,
0x3201, 0x41,
0x32D6, 0x00,
0x0408, 0x00,
0x0409, 0x00,
0x040A, 0x00,
0x040B, 0x00,
0x040C, 0x10,
0x040D, 0x00,
0x040E, 0x0C,
0x040F, 0x00,
0x034C, 0x10,
0x034D, 0x00,
0x034E, 0x0C,
0x034F, 0x00,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x01,
0x0307, 0x6E,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x01,
0x3800, 0x01,
0x3801, 0x01,
0x3802, 0x02,
0x3847, 0x03,
0x38B0, 0x00,
0x38B1, 0x64,
0x38B2, 0x00,
0x38B3, 0x64,
0x38C4, 0x00,
0x38C5, 0x64,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x0F,
0x4CF9, 0x40,
0x4DB8, 0x08,
0x4DB9, 0x98,
0x0202, 0x0E,
0x0203, 0x76,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x00,
0x3804, 0x17,
0x3805, 0xC0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x01,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};

//4096x3072 @30fps-Vbin
static kal_uint16 imx766ofilm_capture_30_setting[] = {

};

//4096x2304 @30fps-Vbin
static kal_uint16 imx766ofilm_normal_video_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x7A,
0x0343, 0x00,
0x0340, 0x0E,
0x0341, 0xA6,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x03,
0x0347, 0x00,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x14,
0x034B, 0xFF,
0x0900, 0x01,
0x0901, 0x22,
0x0902, 0x08,
0x3005, 0x02,
0x3120, 0x04,
0x3121, 0x01,
0x3200, 0x41,
0x3201, 0x41,
0x32D6, 0x00,
0x0408, 0x00,
0x0409, 0x00,
0x040A, 0x00,
0x040B, 0x00,
0x040C, 0x10,
0x040D, 0x00,
0x040E, 0x09,
0x040F, 0x00,
0x034C, 0x10,
0x034D, 0x00,
0x034E, 0x09,
0x034F, 0x00,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x01,
0x0307, 0x6E,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x01,
0x3800, 0x01,
0x3801, 0x01,
0x3802, 0x02,
0x3847, 0x03,
0x38B0, 0x00,
0x38B1, 0x64,
0x38B2, 0x00,
0x38B3, 0x64,
0x38C4, 0x00,
0x38C5, 0x64,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x0F,
0x4CF9, 0x40,
0x4DB8, 0x08,
0x4DB9, 0x98,
0x0202, 0x0E,
0x0203, 0x76,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x00,
0x3804, 0x17,
0x3805, 0xC0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x01,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};

//1920x1080 @240fps-PD
static kal_uint16 imx766ofilm_hs_video_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x22,
0x0343, 0x70,
0x0340, 0x06,
0x0341, 0x7C,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x03,
0x0347, 0x80,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x14,
0x034B, 0x7F,
0x0900, 0x01,
0x0901, 0x44,
0x0902, 0x08,
0x3005, 0x02,
0x3120, 0x04,
0x3121, 0x00,
0x3200, 0x43,
0x3201, 0x43,
0x32D6, 0x00,
0x0408, 0x00,
0x0409, 0x40,
0x040A, 0x00,
0x040B, 0x04,
0x040C, 0x07,
0x040D, 0x80,
0x040E, 0x04,
0x040F, 0x38,
0x034C, 0x07,
0x034D, 0x80,
0x034E, 0x04,
0x034F, 0x38,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x01,
0x0307, 0x6E,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x01,
0x3800, 0x01,
0x3801, 0x01,
0x3802, 0x02,
0x3847, 0x03,
0x38B0, 0x00,
0x38B1, 0x64,
0x38B2, 0x00,
0x38B3, 0x64,
0x38C4, 0x00,
0x38C5, 0x64,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x07,
0x4CF9, 0x9E,
0x4DB8, 0x08,
0x4DB9, 0x98,
0x0202, 0x06,
0x0203, 0x4C,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x00,
0x3804, 0x17,
0x3805, 0xC0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x01,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};


static kal_uint16 imx766ofilm_custom1_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x7A,
0x0343, 0x00,
0x0340, 0x0E,
0x0341, 0xA6,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x00,
0x0347, 0x00,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x17,
0x034B, 0xFF,
0x0900, 0x01,
0x0901, 0x22,
0x0902, 0x08,
0x3005, 0x02,
0x3120, 0x04,
0x3121, 0x01,
0x3200, 0x41,
0x3201, 0x41,
0x32D6, 0x00,
0x0408, 0x00,
0x0409, 0x00,
0x040A, 0x00,
0x040B, 0x00,
0x040C, 0x10,
0x040D, 0x00,
0x040E, 0x0C,
0x040F, 0x00,
0x034C, 0x10,
0x034D, 0x00,
0x034E, 0x0C,
0x034F, 0x00,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x01,
0x0307, 0x6E,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x01,
0x3800, 0x01,
0x3801, 0x01,
0x3802, 0x02,
0x3847, 0x03,
0x38B0, 0x00,
0x38B1, 0x64,
0x38B2, 0x00,
0x38B3, 0x64,
0x38C4, 0x00,
0x38C5, 0x64,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x0F,
0x4CF9, 0x40,
0x4DB8, 0x08,
0x4DB9, 0x98,
0x0202, 0x0E,
0x0203, 0x76,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x00,
0x3804, 0x17,
0x3805, 0xC0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x01,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};

//1920x1080 @120fps-PD
static kal_uint16 imx766ofilm_custom2_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x22,
0x0343, 0x70,
0x0340, 0x0C,
0x0341, 0xF8,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x03,
0x0347, 0x80,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x14,
0x034B, 0x7F,
0x0900, 0x01,
0x0901, 0x44,
0x0902, 0x08,
0x3005, 0x02,
0x3120, 0x04,
0x3121, 0x00,
0x3200, 0x43,
0x3201, 0x43,
0x32D6, 0x00,
0x0408, 0x00,
0x0409, 0x40,
0x040A, 0x00,
0x040B, 0x04,
0x040C, 0x07,
0x040D, 0x80,
0x040E, 0x04,
0x040F, 0x38,
0x034C, 0x07,
0x034D, 0x80,
0x034E, 0x04,
0x034F, 0x38,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x01,
0x0307, 0x6E,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x01,
0x3800, 0x01,
0x3801, 0x01,
0x3802, 0x02,
0x3847, 0x03,
0x38B0, 0x00,
0x38B1, 0x64,
0x38B2, 0x00,
0x38B3, 0x64,
0x38C4, 0x00,
0x38C5, 0x64,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x07,
0x4CF9, 0x9E,
0x4DB8, 0x08,
0x4DB9, 0x98,
0x0202, 0x0C,
0x0203, 0xC8,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x00,
0x3804, 0x17,
0x3805, 0xC0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x01,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};

//4096x2304 @60fps-Vbin
static kal_uint16 imx766ofilm_custom3_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x3D,
0x0343, 0x00,
0x0340, 0x09,
0x0341, 0xF6,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x03,
0x0347, 0x00,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x14,
0x034B, 0xFF,
0x0900, 0x01,
0x0901, 0x22,
0x0902, 0x08,
0x3005, 0x02,
0x3120, 0x04,
0x3121, 0x01,
0x3200, 0x41,
0x3201, 0x41,
0x32D6, 0x00,
0x0408, 0x00,
0x0409, 0x00,
0x040A, 0x00,
0x040B, 0x00,
0x040C, 0x10,
0x040D, 0x00,
0x040E, 0x09,
0x040F, 0x00,
0x034C, 0x10,
0x034D, 0x00,
0x034E, 0x09,
0x034F, 0x00,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x00,
0x0307, 0xF9,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x01,
0x3800, 0x01,
0x3801, 0x01,
0x3802, 0x02,
0x3847, 0x03,
0x38B0, 0x00,
0x38B1, 0x00,
0x38B2, 0x00,
0x38B3, 0x00,
0x38C4, 0x01,
0x38C5, 0x2C,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x07,
0x4CF9, 0x9E,
0x4DB8, 0x08,
0x4DB9, 0x98,
0x0202, 0x09,
0x0203, 0xC6,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x00,
0x3804, 0x17,
0x3805, 0xC0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x01,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};

//8192x6144 @24fps-noPD
static kal_uint16 imx766ofilm_custom4_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x2D,
0x0343, 0x20,
0x0340, 0x19,
0x0341, 0x28,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x00,
0x0347, 0x00,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x17,
0x034B, 0xFF,
0x0900, 0x00,
0x0901, 0x11,
0x0902, 0x0A,
0x3005, 0x00,
0x3120, 0x00,
0x3121, 0x01,
0x3200, 0x00,
0x3201, 0x00,
0x32D6, 0x01,
0x0408, 0x00,
0x0409, 0x00,
0x040A, 0x00,
0x040B, 0x00,
0x040C, 0x20,
0x040D, 0x00,
0x040E, 0x18,
0x040F, 0x00,
0x034C, 0x20,
0x034D, 0x00,
0x034E, 0x18,
0x034F, 0x00,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x00,
0x0307, 0xBA,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x00,
0x3800, 0x00,
0x3801, 0x00,
0x3802, 0x04,
0x3847, 0x00,
0x38B0, 0x00,
0x38B1, 0x00,
0x38B2, 0x00,
0x38B3, 0x00,
0x38C4, 0x02,
0x38C5, 0x26,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x07,
0x4CF9, 0x9E,
0x4DB8, 0x08,
0x4DB9, 0x98,
0x0202, 0x18,
0x0203, 0xF8,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x01,
0x3804, 0x16,
0x3805, 0xB0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x00,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};

//2048x1536 @30fps-Vbin
static kal_uint16 imx766ofilm_custom5_setting[] = {
0x0112, 0x0A,
0x0113, 0x0A,
0x0114, 0x02,
0x0342, 0x44,
0x0343, 0xE0,
0x0340, 0x0C,
0x0341, 0x68,
0x0344, 0x00,
0x0345, 0x00,
0x0346, 0x00,
0x0347, 0x00,
0x0348, 0x1F,
0x0349, 0xFF,
0x034A, 0x17,
0x034B, 0xFF,
0x0900, 0x01,
0x0901, 0x44,
0x0902, 0x08,
0x3005, 0x02,
0x3120, 0x04,
0x3121, 0x00,
0x3200, 0x43,
0x3201, 0x43,
0x32D6, 0x00,
0x0408, 0x00,
0x0409, 0x00,
0x040A, 0x00,
0x040B, 0x00,
0x040C, 0x08,
0x040D, 0x00,
0x040E, 0x06,
0x040F, 0x00,
0x034C, 0x08,
0x034D, 0x00,
0x034E, 0x06,
0x034F, 0x00,
0x0301, 0x05,
0x0303, 0x02,
0x0305, 0x04,
0x0306, 0x00,
0x0307, 0xAF,
0x030B, 0x02,
0x030D, 0x03,
0x030E, 0x01,
0x030F, 0xFC,
0x30CB, 0x00,
0x30CC, 0x10,
0x30CD, 0x00,
0x30CE, 0x03,
0x30CF, 0x00,
0x319C, 0x01,
0x3800, 0x01,
0x3801, 0x01,
0x3802, 0x02,
0x3847, 0x03,
0x38B0, 0x01,
0x38B1, 0x2C,
0x38B2, 0x01,
0x38B3, 0x2C,
0x38C4, 0x01,
0x38C5, 0x90,
0x4C3A, 0x02,
0x4C3B, 0xD2,
0x4C68, 0x04,
0x4C69, 0x7E,
0x4CF8, 0x07,
0x4CF9, 0x9E,
0x4DB8, 0x11,
0x4DB9, 0x38,
0x0202, 0x0C,
0x0203, 0x38,
0x0224, 0x01,
0x0225, 0xF4,
0x313A, 0x01,
0x313B, 0xF4,
0x3803, 0x00,
0x3804, 0x17,
0x3805, 0xC0,
0x0204, 0x00,
0x0205, 0x00,
0x020E, 0x01,
0x020F, 0x00,
0x0216, 0x00,
0x0217, 0x00,
0x0218, 0x01,
0x0219, 0x00,
0x313C, 0x00,
0x313D, 0x00,
0x313E, 0x01,
0x313F, 0x00,
0x0860, 0x01,
0x0861, 0x2D,
0x0862, 0x01,
0x0863, 0x2D,
0x30B4, 0x01,
0x3066, 0x00,
0x3067, 0x30,
0x3068, 0x00,
0x3069, 0x30,
};


#endif
