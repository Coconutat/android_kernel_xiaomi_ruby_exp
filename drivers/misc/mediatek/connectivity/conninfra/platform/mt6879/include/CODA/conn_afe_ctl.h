/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2021 MediaTek Inc.
 */

//[File]            : conn_afe_ctl.h
//[Revision time]   : Fri Jun 18 16:45:19 2021
//[Description]     : This file is auto generated by CODA
//[Copyright]       : Copyright (C) 2021 Mediatek Incorportion. All rights reserved.

#ifndef __CONN_AFE_CTL_REGS_H__
#define __CONN_AFE_CTL_REGS_H__


//****************************************************************************
//
//                     CONN_AFE_CTL CR Definitions                     
//
//****************************************************************************

#define CONN_AFE_CTL_BASE                                      (CONN_REG_CONN_AFE_CTL_ADDR) // 0x18041000

#define CONN_AFE_CTL_RG_DIG_EN_01_ADDR                         (CONN_AFE_CTL_BASE + 0x000) // 1000
#define CONN_AFE_CTL_RG_DIG_EN_02_ADDR                         (CONN_AFE_CTL_BASE + 0x004) // 1004
#define CONN_AFE_CTL_RG_DIG_EN_03_ADDR                         (CONN_AFE_CTL_BASE + 0x008) // 1008
#define CONN_AFE_CTL_RG_DIG_TOP_01_ADDR                        (CONN_AFE_CTL_BASE + 0x00C) // 100C
#define CONN_AFE_CTL_RG_WBG_AFE_01_ADDR                        (CONN_AFE_CTL_BASE + 0x010) // 1010
#define CONN_AFE_CTL_RG_WBG_AFE_02_ADDR                        (CONN_AFE_CTL_BASE + 0x014) // 1014
#define CONN_AFE_CTL_RG_WBG_RCK_01_ADDR                        (CONN_AFE_CTL_BASE + 0x018) // 1018
#define CONN_AFE_CTL_RG_WBG_RCK_02_ADDR                        (CONN_AFE_CTL_BASE + 0x01C) // 101C
#define CONN_AFE_CTL_RGS_WBG_RO_ADDR                           (CONN_AFE_CTL_BASE + 0x020) // 1020
#define CONN_AFE_CTL_RG_WBG_PLL_01_ADDR                        (CONN_AFE_CTL_BASE + 0x024) // 1024
#define CONN_AFE_CTL_RG_WBG_PLL_02_ADDR                        (CONN_AFE_CTL_BASE + 0x028) // 1028
#define CONN_AFE_CTL_RG_WBG_PLL_03_ADDR                        (CONN_AFE_CTL_BASE + 0x02C) // 102C
#define CONN_AFE_CTL_RG_WBG_PLL_04_ADDR                        (CONN_AFE_CTL_BASE + 0x030) // 1030
#define CONN_AFE_CTL_RG_WBG_PLL_05_ADDR                        (CONN_AFE_CTL_BASE + 0x034) // 1034
#define CONN_AFE_CTL_RG_WBG_PLL_06_ADDR                        (CONN_AFE_CTL_BASE + 0x038) // 1038
#define CONN_AFE_CTL_RG_WBG_PLL_07_ADDR                        (CONN_AFE_CTL_BASE + 0x03C) // 103C
#define CONN_AFE_CTL_RG_WBG_GL1_01_ADDR                        (CONN_AFE_CTL_BASE + 0x040) // 1040
#define CONN_AFE_CTL_RG_WBG_GL1_02_ADDR                        (CONN_AFE_CTL_BASE + 0x044) // 1044
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x048) // 1048
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x04C) // 104C
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x050) // 1050
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x054) // 1054
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR                     (CONN_AFE_CTL_BASE + 0x058) // 1058
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR                     (CONN_AFE_CTL_BASE + 0x05C) // 105C
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR                    (CONN_AFE_CTL_BASE + 0x060) // 1060
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x068) // 1068
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x06C) // 106C
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x070) // 1070
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x074) // 1074
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR                     (CONN_AFE_CTL_BASE + 0x078) // 1078
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR                     (CONN_AFE_CTL_BASE + 0x07C) // 107C
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR                    (CONN_AFE_CTL_BASE + 0x080) // 1080
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x084) // 1084
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x088) // 1088
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x08C) // 108C
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x090) // 1090
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR                     (CONN_AFE_CTL_BASE + 0x094) // 1094
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR                     (CONN_AFE_CTL_BASE + 0x098) // 1098
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR                    (CONN_AFE_CTL_BASE + 0x09C) // 109C
#define CONN_AFE_CTL_RG_WBG_WF2_RX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x0A0) // 10A0
#define CONN_AFE_CTL_RG_WBG_WF2_RX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x0A4) // 10A4
#define CONN_AFE_CTL_RG_WBG_WF2_TX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x0A8) // 10A8
#define CONN_AFE_CTL_RG_WBG_WF2_TX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x0AC) // 10AC
#define CONN_AFE_CTL_RG_WBG_WF2_TX_03_ADDR                     (CONN_AFE_CTL_BASE + 0x0B0) // 10B0
#define CONN_AFE_CTL_RG_WBG_WF2_TX_04_ADDR                     (CONN_AFE_CTL_BASE + 0x0B4) // 10B4
#define CONN_AFE_CTL_RGS_WBG_WF2_TXCAL_ADDR                    (CONN_AFE_CTL_BASE + 0x0B8) // 10B8
#define CONN_AFE_CTL_RG_WBG_WF3_RX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x0BC) // 10BC
#define CONN_AFE_CTL_RG_WBG_WF3_RX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x0C0) // 10C0
#define CONN_AFE_CTL_RG_WBG_WF3_TX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x0C4) // 10C4
#define CONN_AFE_CTL_RG_WBG_WF3_TX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x0C8) // 10C8
#define CONN_AFE_CTL_RG_WBG_WF3_TX_03_ADDR                     (CONN_AFE_CTL_BASE + 0x0CC) // 10CC
#define CONN_AFE_CTL_RG_WBG_WF3_TX_04_ADDR                     (CONN_AFE_CTL_BASE + 0x0D0) // 10D0
#define CONN_AFE_CTL_RGS_WBG_WF3_TXCAL_ADDR                    (CONN_AFE_CTL_BASE + 0x0D4) // 10D4
#define CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR                       (CONN_AFE_CTL_BASE + 0x0D8) // 10D8
#define CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR                       (CONN_AFE_CTL_BASE + 0x0DC) // 10DC
#define CONN_AFE_CTL_RG_SIN_GEN_01_ADDR                        (CONN_AFE_CTL_BASE + 0x0E0) // 10E0
#define CONN_AFE_CTL_RG_SIN_GEN_02_ADDR                        (CONN_AFE_CTL_BASE + 0x0E4) // 10E4
#define CONN_AFE_CTL_RG_SIN_GEN_03_ADDR                        (CONN_AFE_CTL_BASE + 0x0E8) // 10E8
#define CONN_AFE_CTL_RG_SIN_GEN_04_ADDR                        (CONN_AFE_CTL_BASE + 0x0EC) // 10EC
#define CONN_AFE_CTL_RG_SIN_GEN_05_ADDR                        (CONN_AFE_CTL_BASE + 0x0F0) // 10F0
#define CONN_AFE_CTL_RG_PLL_STB_TIME_ADDR                      (CONN_AFE_CTL_BASE + 0x0F4) // 10F4
#define CONN_AFE_CTL_RG_WBG_DFS_RX_01_ADDR                     (CONN_AFE_CTL_BASE + 0x0F8) // 10F8
#define CONN_AFE_CTL_RG_WBG_DFS_RX_02_ADDR                     (CONN_AFE_CTL_BASE + 0x0FC) // 10FC
#define CONN_AFE_CTL_RG_WBG_GL5_01_ADDR                        (CONN_AFE_CTL_BASE + 0x100) // 1100
#define CONN_AFE_CTL_RG_WBG_GL5_02_ADDR                        (CONN_AFE_CTL_BASE + 0x104) // 1104
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR                       (CONN_AFE_CTL_BASE + 0x124) // 1124




/* =====================================================================================

  ---RG_DIG_EN_01 (0x18041000 + 0x000)---

    RG_WBG_EN_RCK[0]             - (RW) RC calibration enable
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF3_DA[1]          - (RW) Enable WF3 DA control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF3_ADPREON[2]     - (RW) Enable WF3ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF3_AD[3]          - (RW) Enable WF3 AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_WF3[4]         - (RW) Set WF3 AD/DA enable control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_WF2_DA[5]          - (RW) Enable WF2 DA control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF2_ADPREON[6]     - (RW) Enable WF2ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF2_AD[7]          - (RW) Enable WF2 AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_WF2[8]         - (RW) Set WF2 AD/DA enable control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_WF1_DA[9]          - (RW) Enable WF1 DA control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF1_ADPREON[10]    - (RW) Enable WF1ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF1_AD[11]         - (RW) Enable WF1 AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_WF1[12]        - (RW) Set WF1 AD/DA enable control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_WF0_DA[13]         - (RW) Enable WF0 DA control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF0_ADPREON[14]    - (RW) Enable WF0ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WF0_AD[15]         - (RW) Enable WF0 AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_WF0[16]        - (RW) Set WF0 AD/DA enable control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_TXCAL_WF3[17]      - (RW) WF3 DAC calibration enable
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_TXCAL_WF2[18]      - (RW) WF2 DAC calibration enable
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_TXCAL_WF1[19]      - (RW) WF1 DAC calibration enable
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_TXCAL_WF0[20]      - (RW) WF0 DAC calibration enable
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_TXCAL_BT0[21]      - (RW) BT0 DAC calibration enable
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_GL1_ADPREON[22]    - (RW) Enable GL1ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_GL1AD[23]          - (RW) Enable GL1AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_GL1[24]        - (RW) Set GL1 AD enable control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_BT0_DA[25]         - (RW) Enable BT0DA control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BT0_ADPREON[26]    - (RW) Enable BT0ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BT0_AD[27]         - (RW) Enable BT0AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_BT0[28]        - (RW) Set BT0 AD/DA enable control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_DFS_ADPREON[29]    - (RW) Enable DFS ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_DFS_AD[30]         - (RW) Enable DFS AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_DFS[31]        - (RW) Set DFS AD enable control to manual
                                     0: Auto
                                     1: Manual

 =====================================================================================*/
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_DFS_ADDR       CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_DFS_MASK       0x80000000                // RG_WBG_EN_MAN_DFS[31]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_DFS_SHFT       31
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_DFS_AD_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_DFS_AD_MASK        0x40000000                // RG_WBG_EN_DFS_AD[30]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_DFS_AD_SHFT        30
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_DFS_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_DFS_ADPREON_MASK   0x20000000                // RG_WBG_EN_DFS_ADPREON[29]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_DFS_ADPREON_SHFT   29
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_BT0_ADDR       CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_BT0_MASK       0x10000000                // RG_WBG_EN_MAN_BT0[28]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_BT0_SHFT       28
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_AD_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_AD_MASK        0x08000000                // RG_WBG_EN_BT0_AD[27]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_AD_SHFT        27
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_ADPREON_MASK   0x04000000                // RG_WBG_EN_BT0_ADPREON[26]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_ADPREON_SHFT   26
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_DA_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_DA_MASK        0x02000000                // RG_WBG_EN_BT0_DA[25]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_BT0_DA_SHFT        25
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_GL1_ADDR       CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_GL1_MASK       0x01000000                // RG_WBG_EN_MAN_GL1[24]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_GL1_SHFT       24
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_GL1AD_ADDR         CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_GL1AD_MASK         0x00800000                // RG_WBG_EN_GL1AD[23]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_GL1AD_SHFT         23
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_GL1_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_GL1_ADPREON_MASK   0x00400000                // RG_WBG_EN_GL1_ADPREON[22]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_GL1_ADPREON_SHFT   22
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_BT0_ADDR     CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_BT0_MASK     0x00200000                // RG_WBG_EN_TXCAL_BT0[21]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_BT0_SHFT     21
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF0_ADDR     CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF0_MASK     0x00100000                // RG_WBG_EN_TXCAL_WF0[20]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF0_SHFT     20
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF1_ADDR     CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF1_MASK     0x00080000                // RG_WBG_EN_TXCAL_WF1[19]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF1_SHFT     19
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF2_ADDR     CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF2_MASK     0x00040000                // RG_WBG_EN_TXCAL_WF2[18]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF2_SHFT     18
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF3_ADDR     CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF3_MASK     0x00020000                // RG_WBG_EN_TXCAL_WF3[17]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_TXCAL_WF3_SHFT     17
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF0_ADDR       CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF0_MASK       0x00010000                // RG_WBG_EN_MAN_WF0[16]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF0_SHFT       16
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_AD_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_AD_MASK        0x00008000                // RG_WBG_EN_WF0_AD[15]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_AD_SHFT        15
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_ADPREON_MASK   0x00004000                // RG_WBG_EN_WF0_ADPREON[14]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_ADPREON_SHFT   14
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_DA_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_DA_MASK        0x00002000                // RG_WBG_EN_WF0_DA[13]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF0_DA_SHFT        13
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF1_ADDR       CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF1_MASK       0x00001000                // RG_WBG_EN_MAN_WF1[12]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF1_SHFT       12
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_AD_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_AD_MASK        0x00000800                // RG_WBG_EN_WF1_AD[11]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_AD_SHFT        11
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_ADPREON_MASK   0x00000400                // RG_WBG_EN_WF1_ADPREON[10]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_ADPREON_SHFT   10
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_DA_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_DA_MASK        0x00000200                // RG_WBG_EN_WF1_DA[9]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF1_DA_SHFT        9
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF2_ADDR       CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF2_MASK       0x00000100                // RG_WBG_EN_MAN_WF2[8]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF2_SHFT       8
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_AD_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_AD_MASK        0x00000080                // RG_WBG_EN_WF2_AD[7]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_AD_SHFT        7
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_ADPREON_MASK   0x00000040                // RG_WBG_EN_WF2_ADPREON[6]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_ADPREON_SHFT   6
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_DA_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_DA_MASK        0x00000020                // RG_WBG_EN_WF2_DA[5]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF2_DA_SHFT        5
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF3_ADDR       CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF3_MASK       0x00000010                // RG_WBG_EN_MAN_WF3[4]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_MAN_WF3_SHFT       4
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_AD_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_AD_MASK        0x00000008                // RG_WBG_EN_WF3_AD[3]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_AD_SHFT        3
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_ADPREON_MASK   0x00000004                // RG_WBG_EN_WF3_ADPREON[2]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_ADPREON_SHFT   2
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_DA_ADDR        CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_DA_MASK        0x00000002                // RG_WBG_EN_WF3_DA[1]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_WF3_DA_SHFT        1
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_RCK_ADDR           CONN_AFE_CTL_RG_DIG_EN_01_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_RCK_MASK           0x00000001                // RG_WBG_EN_RCK[0]
#define CONN_AFE_CTL_RG_DIG_EN_01_RG_WBG_EN_RCK_SHFT           0

/* =====================================================================================

  ---RG_DIG_EN_02 (0x18041000 + 0x004)---

    RG_WBG_EN_WF_PLL[1..0]       - (RW) PLL configuration for WF_SYS
                                     00: NA
                                     01: Enable BPLL only
                                     10: Enable WPLL only (POR if XIN=40M)
                                     11: Enable BPLL, then enable WPLL  (POR if XIN=26M)
    RG_WBG_EN_MCU_PLL_BGF[3..2]  - (RW) PLL configuration for MCU_SYS
                                     00: NA
                                     01: Enable BPLL only 
                                     10: Enable WPLL only 
                                     11: Enable BPLL, then enable WPLL
    RG_WBG_EN_GPS_PLL[5..4]      - (RW) PLL configuration for GPS_SYS
                                     00: NA
                                     01: Enable BPLL only (POR)
                                     10: Enable WPLL only
                                     11: Enable BPLL, then enable WPLL
    RG_WBG_EN_BT_PLL[7..6]       - (RW) PLL configuration for BT_SYS
                                     00: NA
                                     01: Enable BPLL only  (POR if XIN=26M/52M, 40M or 24M)
                                     10: Enable WPLL only 
                                     11: Enable BPLL, then enable WPLL  (POR if XIN=25M)
    RG_WBG_EN_CASC_FM[8]         - (RW) Directly trigger BPLL->WPL (cascade) in auto mode (for FM)
                                     0: Disable
                                     1: Enable
    RG_WBG_GL5_ADCKSEL[10..9]    - (RW) GL5 ADC clock selection in manual mode
                                     00: 16MHz
                                     01: 64MHz
                                     10: 128MHz
    RG_WBG_EN_MAN_GL5ADCK[11]    - (RW) Set GL5 AD ck control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_GL1_ADCKSEL[13..12]   - (RW) GL1 ADC clock selection in manual mode
                                     00: 16MHz
                                     01: 64MHz
                                     10: 128MHz
    RG_WBG_EN_MAN_GL1ADCK[14]    - (RW) Set GL1 AD ck control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_CASC_UP[15]        - (RW) Directly trigger BPLL, then WPLL in auto mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MCU_PLL_WF[17..16] - (RW) PLL configuration for MCU_SYS (WF)
                                     00: NA
                                     01: Enable BPLL only 
                                     10: Enable WPLL only 
                                     11: Enable BPLL, then enable WPLL
    RG_WBG_EN_RSV0_PLL[19..18]   - (RW) PLL configuration for RSV0
                                     00: NA
                                     01: Enable BPLL only 
                                     10: Enable WPLL only 
                                     11: Enable BPLL, then enable WPLL
    RG_WBG_EN_RSV1_PLL[21..20]   - (RW) PLL configuration for RSV1
                                     00: NA
                                     01: Enable BPLL only 
                                     10: Enable WPLL only 
                                     11: Enable BPLL, then enable WPLL
    RG_WBG_EN_BPLL_FM[22]        - (RW) Directly trigger BPLL in auto mode (for FM)
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WPLL_FM[23]        - (RW) Directly trigger WPLL in auto mode (for FM)
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_TXCAL_BT1[24]      - (RW) BT1 DAC calibration enable
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BT1_DA[25]         - (RW) Enable BT1DA control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BT1_ADPREON[26]    - (RW) Enable BT1ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BT1_AD[27]         - (RW) Enable BT1AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_BT1[28]        - (RW) Set BT1 AD/DA enable control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_GL5_ADPREON[29]    - (RW) Enable GL5ADPREON control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_GL5AD[30]          - (RW) Enable GL5AD control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_GL5[31]        - (RW) Set GL5 AD enable control to manual
                                     0: Auto
                                     1: Manual

 =====================================================================================*/
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL5_ADDR       CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL5_MASK       0x80000000                // RG_WBG_EN_MAN_GL5[31]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL5_SHFT       31
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GL5AD_ADDR         CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GL5AD_MASK         0x40000000                // RG_WBG_EN_GL5AD[30]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GL5AD_SHFT         30
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GL5_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GL5_ADPREON_MASK   0x20000000                // RG_WBG_EN_GL5_ADPREON[29]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GL5_ADPREON_SHFT   29
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_BT1_ADDR       CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_BT1_MASK       0x10000000                // RG_WBG_EN_MAN_BT1[28]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_BT1_SHFT       28
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_AD_ADDR        CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_AD_MASK        0x08000000                // RG_WBG_EN_BT1_AD[27]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_AD_SHFT        27
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_ADPREON_ADDR   CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_ADPREON_MASK   0x04000000                // RG_WBG_EN_BT1_ADPREON[26]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_ADPREON_SHFT   26
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_DA_ADDR        CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_DA_MASK        0x02000000                // RG_WBG_EN_BT1_DA[25]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT1_DA_SHFT        25
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_TXCAL_BT1_ADDR     CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_TXCAL_BT1_MASK     0x01000000                // RG_WBG_EN_TXCAL_BT1[24]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_TXCAL_BT1_SHFT     24
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_WPLL_FM_ADDR       CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_WPLL_FM_MASK       0x00800000                // RG_WBG_EN_WPLL_FM[23]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_WPLL_FM_SHFT       23
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BPLL_FM_ADDR       CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BPLL_FM_MASK       0x00400000                // RG_WBG_EN_BPLL_FM[22]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BPLL_FM_SHFT       22
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_RSV1_PLL_ADDR      CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_RSV1_PLL_MASK      0x00300000                // RG_WBG_EN_RSV1_PLL[21..20]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_RSV1_PLL_SHFT      20
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_RSV0_PLL_ADDR      CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_RSV0_PLL_MASK      0x000C0000                // RG_WBG_EN_RSV0_PLL[19..18]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_RSV0_PLL_SHFT      18
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MCU_PLL_WF_ADDR    CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MCU_PLL_WF_MASK    0x00030000                // RG_WBG_EN_MCU_PLL_WF[17..16]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MCU_PLL_WF_SHFT    16
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_CASC_UP_ADDR       CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_CASC_UP_MASK       0x00008000                // RG_WBG_EN_CASC_UP[15]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_CASC_UP_SHFT       15
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL1ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL1ADCK_MASK   0x00004000                // RG_WBG_EN_MAN_GL1ADCK[14]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL1ADCK_SHFT   14
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_GL1_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_GL1_ADCKSEL_MASK      0x00003000                // RG_WBG_GL1_ADCKSEL[13..12]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_GL1_ADCKSEL_SHFT      12
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL5ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL5ADCK_MASK   0x00000800                // RG_WBG_EN_MAN_GL5ADCK[11]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MAN_GL5ADCK_SHFT   11
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_GL5_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_GL5_ADCKSEL_MASK      0x00000600                // RG_WBG_GL5_ADCKSEL[10..9]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_GL5_ADCKSEL_SHFT      9
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_CASC_FM_ADDR       CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_CASC_FM_MASK       0x00000100                // RG_WBG_EN_CASC_FM[8]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_CASC_FM_SHFT       8
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT_PLL_ADDR        CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT_PLL_MASK        0x000000C0                // RG_WBG_EN_BT_PLL[7..6]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_BT_PLL_SHFT        6
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GPS_PLL_ADDR       CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GPS_PLL_MASK       0x00000030                // RG_WBG_EN_GPS_PLL[5..4]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_GPS_PLL_SHFT       4
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MCU_PLL_BGF_ADDR   CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MCU_PLL_BGF_MASK   0x0000000C                // RG_WBG_EN_MCU_PLL_BGF[3..2]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_MCU_PLL_BGF_SHFT   2
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_WF_PLL_ADDR        CONN_AFE_CTL_RG_DIG_EN_02_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_WF_PLL_MASK        0x00000003                // RG_WBG_EN_WF_PLL[1..0]
#define CONN_AFE_CTL_RG_DIG_EN_02_RG_WBG_EN_WF_PLL_SHFT        0

/* =====================================================================================

  ---RG_DIG_EN_03 (0x18041000 + 0x008)---

    RG_WBG_WF3_ADCKSEL[2..0]     - (RW) WF3 ADC sample rate selection in manual mode
                                     001: 80MHz
                                     010: 160MHz
                                     100: 320MHz
                                     110: 640MHz
    RG_WBG_EN_MAN_WF3ADCK[3]     - (RW) Set WF3 AD sampe rate control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_WF2_ADCKSEL[6..4]     - (RW) WF2 ADC sample rate selection in manual mode
                                     001: 80MHz
                                     010: 160MHz
                                     100: 320MHz
                                     110: 640MHz
    RG_WBG_EN_MAN_WF2ADCK[7]     - (RW) Set WF2 AD sampe rate control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_WF1_ADCKSEL[10..8]    - (RW) WF1 ADC sample rate selection in manual mode
                                     001: 80MHz
                                     010: 160MHz
                                     100: 320MHz
                                     110: 640MHz
    RG_WBG_EN_MAN_WF1ADCK[11]    - (RW) Set WF1 AD sampe rate control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_WF0_ADCKSEL[14..12]   - (RW) WF0 ADC sample rate selection in manual mode
                                     001: 80MHz
                                     010: 160MHz
                                     100: 320MHz
                                     110: 640MHz
    RG_WBG_EN_MAN_WF0ADCK[15]    - (RW) Set WF0 AD ck control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_BT1_ADCKSEL[16]       - (RW) BT1 ADC clock selection in manual mode
                                     0: 32MHz
                                     1: 64MHz
    RG_WBG_EN_MAN_BT1ADCK[17]    - (RW) Set BT1 AD ck control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_BT0_ADCKSEL[18]       - (RW) BT0 ADC clock selection in manual mode
                                     0: 32MHz
                                     1: 64MHz
    RG_WBG_EN_MAN_BT0ADCK[19]    - (RW) Set BT0 AD ck control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_WPLL_UP[20]        - (RW) Directly trigger WPLL in auto mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BPLL_UP[21]        - (RW) Directly trigger BPLL in auto mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WPLL[22]           - (RW) Enable WPLL control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BPLL[23]           - (RW) Enable BPLL control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_PLL[24]        - (RW) Set PLL control to manual
                                     0: Auto
                                     1: Manual
    RG_WBG_EN_WFTX_CKO[25]       - (RW) Enable WFTX CKO in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_WFRX_CKO[26]       - (RW) Enable WFRX CKO in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_MAN_WF_CKO[27]     - (RW) Enable WF AD/DA CKO control in manual mode
                                     0: Disable
                                     1: Enable
    RG_WBG_DFS_ADCKSEL[30..28]   - (RW) DFS ADC sample rate selection in manual mode
                                     001: 80MHz
                                     010: 160MHz
                                     100: 320MHz
                                     110: 640MHz
    RG_WBG_EN_MAN_DFSADCK[31]    - (RW) Set DFS AD ck control to manual
                                     0: Auto
                                     1: Manual

 =====================================================================================*/
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_DFSADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_DFSADCK_MASK   0x80000000                // RG_WBG_EN_MAN_DFSADCK[31]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_DFSADCK_SHFT   31
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_DFS_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_DFS_ADCKSEL_MASK      0x70000000                // RG_WBG_DFS_ADCKSEL[30..28]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_DFS_ADCKSEL_SHFT      28
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF_CKO_ADDR    CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF_CKO_MASK    0x08000000                // RG_WBG_EN_MAN_WF_CKO[27]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF_CKO_SHFT    27
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WFRX_CKO_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WFRX_CKO_MASK      0x04000000                // RG_WBG_EN_WFRX_CKO[26]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WFRX_CKO_SHFT      26
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WFTX_CKO_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WFTX_CKO_MASK      0x02000000                // RG_WBG_EN_WFTX_CKO[25]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WFTX_CKO_SHFT      25
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_PLL_ADDR       CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_PLL_MASK       0x01000000                // RG_WBG_EN_MAN_PLL[24]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_PLL_SHFT       24
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_BPLL_ADDR          CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_BPLL_MASK          0x00800000                // RG_WBG_EN_BPLL[23]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_BPLL_SHFT          23
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WPLL_ADDR          CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WPLL_MASK          0x00400000                // RG_WBG_EN_WPLL[22]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WPLL_SHFT          22
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_BPLL_UP_ADDR       CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_BPLL_UP_MASK       0x00200000                // RG_WBG_EN_BPLL_UP[21]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_BPLL_UP_SHFT       21
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WPLL_UP_ADDR       CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WPLL_UP_MASK       0x00100000                // RG_WBG_EN_WPLL_UP[20]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_WPLL_UP_SHFT       20
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_BT0ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_BT0ADCK_MASK   0x00080000                // RG_WBG_EN_MAN_BT0ADCK[19]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_BT0ADCK_SHFT   19
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_BT0_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_BT0_ADCKSEL_MASK      0x00040000                // RG_WBG_BT0_ADCKSEL[18]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_BT0_ADCKSEL_SHFT      18
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_BT1ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_BT1ADCK_MASK   0x00020000                // RG_WBG_EN_MAN_BT1ADCK[17]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_BT1ADCK_SHFT   17
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_BT1_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_BT1_ADCKSEL_MASK      0x00010000                // RG_WBG_BT1_ADCKSEL[16]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_BT1_ADCKSEL_SHFT      16
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF0ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF0ADCK_MASK   0x00008000                // RG_WBG_EN_MAN_WF0ADCK[15]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF0ADCK_SHFT   15
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF0_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF0_ADCKSEL_MASK      0x00007000                // RG_WBG_WF0_ADCKSEL[14..12]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF0_ADCKSEL_SHFT      12
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF1ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF1ADCK_MASK   0x00000800                // RG_WBG_EN_MAN_WF1ADCK[11]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF1ADCK_SHFT   11
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF1_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF1_ADCKSEL_MASK      0x00000700                // RG_WBG_WF1_ADCKSEL[10..8]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF1_ADCKSEL_SHFT      8
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF2ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF2ADCK_MASK   0x00000080                // RG_WBG_EN_MAN_WF2ADCK[7]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF2ADCK_SHFT   7
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF2_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF2_ADCKSEL_MASK      0x00000070                // RG_WBG_WF2_ADCKSEL[6..4]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF2_ADCKSEL_SHFT      4
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF3ADCK_ADDR   CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF3ADCK_MASK   0x00000008                // RG_WBG_EN_MAN_WF3ADCK[3]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_EN_MAN_WF3ADCK_SHFT   3
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF3_ADCKSEL_ADDR      CONN_AFE_CTL_RG_DIG_EN_03_ADDR
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF3_ADCKSEL_MASK      0x00000007                // RG_WBG_WF3_ADCKSEL[2..0]
#define CONN_AFE_CTL_RG_DIG_EN_03_RG_WBG_WF3_ADCKSEL_SHFT      0

/* =====================================================================================

  ---RG_DIG_TOP_01 (0x18041000 + 0x00C)---

    RG_AFE_DBG_SEL[1..0]         - (RW) AFE debug monitor source switch
                                     2'b00: afe_dbg = 32'd0;
                                     2'b01: afe_dbg = afe_dbg1;
                                     2'b10: afe_dbg = afe_dbg2;
                                     2'b11: NA (32'd0)
    RG_DIG_RSV1[12..2]           - (RW) RSV1 in digital
    RG_AFE_ICAP_X2_MODE[13]      - (RW) Internal capture with 2x data bit-width mode
                                     1: 1/2X adc clock and serial to parallel 48 bits I/Q data
                                     0: 1/1X adc clock and 24 bits I/Q data
    RG_AFE_RXDS_SRC_SEL_SW[14]   - (RW) ADC monitor path source selection, Switch Mode (RG_AFE_RXDS_SRC_SEL_SW=1):
                                     000: RSV
                                     001: Select WBG BT1-ADC data/clock
                                     010: RSV
                                     011: RSV
                                     100: RSV
                                     101: RSV
                                     110: Select RFSOC WF0TSSI data/clock
                                     111: Select RFSOC GPS-ADC data/clock
    RG_DIG_RSV2[18..15]          - (RW) RSV2 in digital
    RG_AFE_ICAP_X4_MODE[19]      - (RW) Internal capture with 4x data bit-width mode
                                     1: 1/4X adc clock and serial to parallel 96 bits I/Q data
                                     0: 1/2X adc clock and serial to parallel 48 bits I/Q data or 1/1X of 24bits
    RG_AFE_RXDS_EN[20]           - (RW) ADC monitor path down-sample enable signal (need to set GPIO register for output to PAD)
                                     0: Disable
                                     1: Enable
    RG_AFE_RXDS_AFIFO_MODE[21]   - (RW) ADC monitor path output mux selection
                                     0: normal path 
                                     1: AFIFO path
    RG_AFE_RXDS_AFIFO_EN[22]     - (RW) ADC monitor path AFIFO enable signal
                                     0: Disable
                                     1: Enable
    RG_AFE_RXDS_MUX_SEL[25..23]  - (RW) ADC monitor path output format (clock is placed at bit-0 of monitor-out)
                                     000: all 0
                                     001: Clock and full I, Q data (I: bit 1~12; Q: bit 13~24)
                                     010: Clock and I data only (bit 1~12)
                                     011: Clock and Q data only (bit 1~12)
                                     100: Clock/2 and serial-to-parallel out of I data
                                     (T(1) at bit 13~24; T(2) at bit 1~12)
                                     101: Clock/2 and serial-to-parallel out of Q data
                                     (T(1) at bit 13~24; T(2) at bit 1~12)
                                     110~111: all 0 (RSV)
    RG_AFE_RXDS_RATE_SEL[28..26] - (RW) ADC monitor path down-sample rate selection
                                     (duty of downsampled clock is 50-50)
                                     000: Normal
                                     001: Down data/ck 1/2
                                     010: Down data/ck 1/3
                                     011: Down data/ck 1/4
                                     100: Down data/ck 1/5
                                     101: Down data/ck 1/8
                                     110: Down data/ck 1/15
                                     111: Down data/ck 1/16
    RG_AFE_RXDS_SRC_SEL[31..29]  - (RW) ADC monitor path source selection, Normal Mode (RG_AFE_RXDS_SRC_SEL_SW=0):
                                     000: Select WBG GL1-ADC data/clock
                                     001: Select WBG BT0-ADC data/clock
                                     010: Select WBG GL5-ADC data/clock
                                     011: Select WBG DFS-ADC data/clock
                                     100: Select WBG WF0-ADC data and WF shared clock
                                     101: Select WBG WF1-ADC data and WF shared clock 
                                     110: Select WBG WF2-ADC data and WF shared clock
                                     111: Select WBG WF3-ADC data and WF shared clock

 =====================================================================================*/
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_SRC_SEL_ADDR    CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_SRC_SEL_MASK    0xE0000000                // RG_AFE_RXDS_SRC_SEL[31..29]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_SRC_SEL_SHFT    29
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_RATE_SEL_ADDR   CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_RATE_SEL_MASK   0x1C000000                // RG_AFE_RXDS_RATE_SEL[28..26]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_RATE_SEL_SHFT   26
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_MUX_SEL_ADDR    CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_MUX_SEL_MASK    0x03800000                // RG_AFE_RXDS_MUX_SEL[25..23]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_MUX_SEL_SHFT    23
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_AFIFO_EN_ADDR   CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_AFIFO_EN_MASK   0x00400000                // RG_AFE_RXDS_AFIFO_EN[22]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_AFIFO_EN_SHFT   22
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_AFIFO_MODE_ADDR CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_AFIFO_MODE_MASK 0x00200000                // RG_AFE_RXDS_AFIFO_MODE[21]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_AFIFO_MODE_SHFT 21
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_EN_ADDR         CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_EN_MASK         0x00100000                // RG_AFE_RXDS_EN[20]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_EN_SHFT         20
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_ICAP_X4_MODE_ADDR    CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_ICAP_X4_MODE_MASK    0x00080000                // RG_AFE_ICAP_X4_MODE[19]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_ICAP_X4_MODE_SHFT    19
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_DIG_RSV2_ADDR            CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_DIG_RSV2_MASK            0x00078000                // RG_DIG_RSV2[18..15]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_DIG_RSV2_SHFT            15
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_SRC_SEL_SW_ADDR CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_SRC_SEL_SW_MASK 0x00004000                // RG_AFE_RXDS_SRC_SEL_SW[14]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_RXDS_SRC_SEL_SW_SHFT 14
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_ICAP_X2_MODE_ADDR    CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_ICAP_X2_MODE_MASK    0x00002000                // RG_AFE_ICAP_X2_MODE[13]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_ICAP_X2_MODE_SHFT    13
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_DIG_RSV1_ADDR            CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_DIG_RSV1_MASK            0x00001FFC                // RG_DIG_RSV1[12..2]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_DIG_RSV1_SHFT            2
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_DBG_SEL_ADDR         CONN_AFE_CTL_RG_DIG_TOP_01_ADDR
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_DBG_SEL_MASK         0x00000003                // RG_AFE_DBG_SEL[1..0]
#define CONN_AFE_CTL_RG_DIG_TOP_01_RG_AFE_DBG_SEL_SHFT         0

/* =====================================================================================

  ---RG_WBG_AFE_01 (0x18041000 + 0x010)---

    RG_WBG_AFE_BG[7..0]          - (RW) Bandgap Register
    RG_WBG_TSTDC_EN[8]           - (RW) Enable global switch for QS_VMON_VDC
                                     0: Disable 
                                     1: Enable
    RG_WBG_TSTCK2PAD_EN[9]       - (RW) Enable global open drain for NS_VMON_CK2PAD
                                     0: Disable
                                     1: Enable
    RG_WBG_TSTPAD2CK_EN[10]      - (RW) Enable global ext-CK SW for NS_VMON_PAD2CK
                                     0: Disable
                                     1: Enable
    RG_WBG_TSTPAD_HZ[11]         - (RW) Release GL1 Q  input PAD to HZ mode due to share testing PAD
                                     0: Normal mode (RX mode)
                                     1: HZ mode (testing mode)
    RG_WBG_AFE_RSV1[24..12]      - (RW) RSV
    RG_WBG_AFE_RXCKO_MAN[27..25] - (RW) WF1 RX CKO_EN manual control(msb: WF3)
                                     000: tie low
                                     001: control by DA_WBG_EN_WFRX_CKO
    RG_WBG_AFE_TXCKO_MAN[30..28] - (RW) WF1 TX CKO_EN manual control(msb: WF3)
                                     000: tie low
                                     001: control by DA_WBG_EN_WFTX_CKO
    RG_WBG_AFE_RSV0[31]          - (RW) RSV

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RSV0_ADDR        CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RSV0_MASK        0x80000000                // RG_WBG_AFE_RSV0[31]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RSV0_SHFT        31
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_TXCKO_MAN_ADDR   CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_TXCKO_MAN_MASK   0x70000000                // RG_WBG_AFE_TXCKO_MAN[30..28]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_TXCKO_MAN_SHFT   28
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RXCKO_MAN_ADDR   CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RXCKO_MAN_MASK   0x0E000000                // RG_WBG_AFE_RXCKO_MAN[27..25]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RXCKO_MAN_SHFT   25
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RSV1_ADDR        CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RSV1_MASK        0x01FFF000                // RG_WBG_AFE_RSV1[24..12]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_RSV1_SHFT        12
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTPAD_HZ_ADDR       CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTPAD_HZ_MASK       0x00000800                // RG_WBG_TSTPAD_HZ[11]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTPAD_HZ_SHFT       11
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTPAD2CK_EN_ADDR    CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTPAD2CK_EN_MASK    0x00000400                // RG_WBG_TSTPAD2CK_EN[10]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTPAD2CK_EN_SHFT    10
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTCK2PAD_EN_ADDR    CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTCK2PAD_EN_MASK    0x00000200                // RG_WBG_TSTCK2PAD_EN[9]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTCK2PAD_EN_SHFT    9
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTDC_EN_ADDR        CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTDC_EN_MASK        0x00000100                // RG_WBG_TSTDC_EN[8]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_TSTDC_EN_SHFT        8
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_BG_ADDR          CONN_AFE_CTL_RG_WBG_AFE_01_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_BG_MASK          0x000000FF                // RG_WBG_AFE_BG[7..0]
#define CONN_AFE_CTL_RG_WBG_AFE_01_RG_WBG_AFE_BG_SHFT          0

/* =====================================================================================

  ---RG_WBG_AFE_02 (0x18041000 + 0x014)---

    RG_WBG_AFE_XTAL_CFG[2..0]    - (RW) XTAL Input Configuration
                                     000: 26MHz
                                     001: 25MHz
                                     010: 40MHz
                                     011: 24MHz
                                     100: 52MHz
    RG_WBG_AFE_WF3_RXDCOC[3]     - (RW) WF3 RX DCOC enable on AFE
                                     Short input PAD to VCM for WF3 RX_DCOC
                                     0: disable
                                     1: enable
    RG_WBG_AFE_WF2_RXDCOC[4]     - (RW) WF2 RX DCOC enable on AFE
                                     Short input PAD to VCM for WF2 RX_DCOC
                                     0: disable
                                     1: enable
    RG_WBG_AFE_WF1_RXDCOC[5]     - (RW) WF1 RX DCOC enable on AFE
                                     Short input PAD to VCM for WF1 RX_DCOC
                                     0: disable
                                     1: enable
    RG_WBG_AFE_WF0_RXDCOC[6]     - (RW) WF0 RX DCOC enable on AFE
                                     Short input PAD to VCM for WF0 RX_DCOC
                                     0: disable
                                     1: enable
    RG_WBG_AFE_WF3_CAL[7]        - (RW) WF3 CAL enable
                                     0: Disable (WF3 RX from WF3 pad)
                                     1: Enable (WF3 RX from WF2 pad)
    RG_WBG_AFE_WF2_CAL[8]        - (RW) WF2 CAL enable
                                     0: Disable (WF2 RX from WF2 pad)
                                     1: Enable (WF2 RX from WF3 pad)
    RG_WBG_AFE_WF1_CAL[9]        - (RW) WF1 CAL enable
                                     0: Disable (WF1 RX from WF1 pad)
                                     1: Enable (WF1 RX from WF0 pad)
    RG_WBG_AFE_WF0_CAL[11..10]   - (RW) WF0 CAL enable
                                     00: Disable (WF0 RX from WF0 pad)
                                     01: Enable (WF0 RX from BT pad)
                                     10: Enable (WF0 RX from WF1 pad)
                                     11: NA
    RG_WBG_AFE_BT0_CAL[13..12]   - (RW) BT0 CAL enable
                                     00: Disable (BT0 RX from BT0 pad)
                                     01: Enable (BT0 RX from WF0 pad)
                                     10: Enable (BT0 RX from BT1 pad)
                                     11: NA
    RG_WBG_AFE_DFS_RXDCOC[14]    - (RW) DFS RX DCOC enable on AFE
                                     Short input PAD to VCM for DFS RX_DCOC
                                     0: disable
                                     1: enable
    RG_WBG_AFE_DFS_CAL[15]       - (RW) DFS CAL enable
                                     0: Disable (DFS RX from WF3 pad)
                                     1: Enable (DFS RX from WF3 pad)
    RG_WBG_AFE_BT1_CAL[16]       - (RW) BT1 CAL enable
                                     0: Disable (BT1 RX from BT1 pad)
                                     1: Enable (BT1 RX from BT0 pad)
    RG_WBG_AFE_RSV2[31..17]      - (RW) RSV

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_RSV2_ADDR        CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_RSV2_MASK        0xFFFE0000                // RG_WBG_AFE_RSV2[31..17]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_RSV2_SHFT        17
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_BT1_CAL_ADDR     CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_BT1_CAL_MASK     0x00010000                // RG_WBG_AFE_BT1_CAL[16]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_BT1_CAL_SHFT     16
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_DFS_CAL_ADDR     CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_DFS_CAL_MASK     0x00008000                // RG_WBG_AFE_DFS_CAL[15]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_DFS_CAL_SHFT     15
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_DFS_RXDCOC_ADDR  CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_DFS_RXDCOC_MASK  0x00004000                // RG_WBG_AFE_DFS_RXDCOC[14]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_DFS_RXDCOC_SHFT  14
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_BT0_CAL_ADDR     CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_BT0_CAL_MASK     0x00003000                // RG_WBG_AFE_BT0_CAL[13..12]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_BT0_CAL_SHFT     12
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF0_CAL_ADDR     CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF0_CAL_MASK     0x00000C00                // RG_WBG_AFE_WF0_CAL[11..10]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF0_CAL_SHFT     10
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF1_CAL_ADDR     CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF1_CAL_MASK     0x00000200                // RG_WBG_AFE_WF1_CAL[9]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF1_CAL_SHFT     9
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF2_CAL_ADDR     CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF2_CAL_MASK     0x00000100                // RG_WBG_AFE_WF2_CAL[8]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF2_CAL_SHFT     8
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF3_CAL_ADDR     CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF3_CAL_MASK     0x00000080                // RG_WBG_AFE_WF3_CAL[7]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF3_CAL_SHFT     7
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF0_RXDCOC_ADDR  CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF0_RXDCOC_MASK  0x00000040                // RG_WBG_AFE_WF0_RXDCOC[6]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF0_RXDCOC_SHFT  6
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF1_RXDCOC_ADDR  CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF1_RXDCOC_MASK  0x00000020                // RG_WBG_AFE_WF1_RXDCOC[5]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF1_RXDCOC_SHFT  5
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF2_RXDCOC_ADDR  CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF2_RXDCOC_MASK  0x00000010                // RG_WBG_AFE_WF2_RXDCOC[4]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF2_RXDCOC_SHFT  4
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF3_RXDCOC_ADDR  CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF3_RXDCOC_MASK  0x00000008                // RG_WBG_AFE_WF3_RXDCOC[3]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_WF3_RXDCOC_SHFT  3
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_XTAL_CFG_ADDR    CONN_AFE_CTL_RG_WBG_AFE_02_ADDR
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_XTAL_CFG_MASK    0x00000007                // RG_WBG_AFE_XTAL_CFG[2..0]
#define CONN_AFE_CTL_RG_WBG_AFE_02_RG_WBG_AFE_XTAL_CFG_SHFT    0

/* =====================================================================================

  ---RG_WBG_RCK_01 (0x18041000 + 0x018)---

    RG_WBG_RCK_WB_RXBW_OFF[4..0] - (RW) WiFi/BT RX offset of tuning bandwidth control
                                     00000: no offset
                                     00001: +1
                                     01111: +15
                                     10000: no offset
                                     10001: -1
                                     11111: -15
    RG_WBG_RCK_WB_RXBW_MEN[9..5] - (RW) WiFi/BT RX tuning bandwidth control in manual mode
                                     00000: max bandwidth
                                     11111: min bandwidth
    RG_WBG_RCK_WB_RXMEN[10]      - (RW) WiFi/BT RX manual control of bandwidth
                                     0: Auto
                                     1: Manual
    RG_WBG_RCK_WB_TXBW_OFF[15..11] - (RW) WiFi/BT TX offset of tuning bandwidth control
                                     00000: no offset
                                     00001: +1
                                     01111: +15
                                     10000: no offset
                                     10001: -1
                                     11111: -15
    RG_WBG_RCK_WB_TXBW_MEN[20..16] - (RW) WiFi/BT TX tuning bandwidth control in manual mode
                                     00000: max bandwidth
                                     11111: min bandwidth
    RG_WBG_RCK_WB_TXMEN[21]      - (RW) WiFi/BT TX manual control of bandwidth
                                     0: Auto
                                     1: Manual
    RG_WBG_RCK_CALTARGET[31..22] - (RW) RC Calibration target count, 
                                     00_0101_0001 (81): for XTAL=26M

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_CALTARGET_ADDR   CONN_AFE_CTL_RG_WBG_RCK_01_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_CALTARGET_MASK   0xFFC00000                // RG_WBG_RCK_CALTARGET[31..22]
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_CALTARGET_SHFT   22
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXMEN_ADDR    CONN_AFE_CTL_RG_WBG_RCK_01_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXMEN_MASK    0x00200000                // RG_WBG_RCK_WB_TXMEN[21]
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXMEN_SHFT    21
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXBW_MEN_ADDR CONN_AFE_CTL_RG_WBG_RCK_01_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXBW_MEN_MASK 0x001F0000                // RG_WBG_RCK_WB_TXBW_MEN[20..16]
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXBW_MEN_SHFT 16
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXBW_OFF_ADDR CONN_AFE_CTL_RG_WBG_RCK_01_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXBW_OFF_MASK 0x0000F800                // RG_WBG_RCK_WB_TXBW_OFF[15..11]
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_TXBW_OFF_SHFT 11
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXMEN_ADDR    CONN_AFE_CTL_RG_WBG_RCK_01_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXMEN_MASK    0x00000400                // RG_WBG_RCK_WB_RXMEN[10]
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXMEN_SHFT    10
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXBW_MEN_ADDR CONN_AFE_CTL_RG_WBG_RCK_01_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXBW_MEN_MASK 0x000003E0                // RG_WBG_RCK_WB_RXBW_MEN[9..5]
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXBW_MEN_SHFT 5
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXBW_OFF_ADDR CONN_AFE_CTL_RG_WBG_RCK_01_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXBW_OFF_MASK 0x0000001F                // RG_WBG_RCK_WB_RXBW_OFF[4..0]
#define CONN_AFE_CTL_RG_WBG_RCK_01_RG_WBG_RCK_WB_RXBW_OFF_SHFT 0

/* =====================================================================================

  ---RG_WBG_RCK_02 (0x18041000 + 0x01C)---

    RG_WBG_RCK_G_RXBW_OFF[4..0]  - (RW) GPS RX offset of tuning bandwidth control
                                     00000: no offset
                                     00001: +1
                                     01111: +15
                                     10000: no offset
                                     10001: -1
                                     11111: -15
    RG_WBG_RCK_G_RXBW_MEN[9..5]  - (RW) GPS RX tuning bandwidth control in manual mode
                                     00000: max bandwidth
                                     11111: min bandwidth
    RG_WBG_RCK_G_RXMEN[10]       - (RW) GPS RX manual control of bandwidth
                                     0: Auto
                                     1: Manual
    RG_WBG_RCK_LDO[13..11]       - (RW) no use
                                     RCKLDO output voltage control
                                     3'b 111: 1.575
                                     3'b 110: 1.55
                                     3'b 101: 1.525
                                     3'b 100: 1.5 (default)
                                     3'b 011: 1.475
                                     3'b 010: 1.45
                                     3'b 001: 1.425
                                     3'b 000: 1.4
    RG_WBG_RCK_RSV[14]           - (RW) Reserve
    RG_WBG_RCK_TARG_AUTO_EN[15]  - (RW) RCK CAL_Target auto mode
                                     1'b0:  SW control by RG
                                     1'b1:  HW control by XTAL_CFG
    RESERVED16[31..16]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_TARG_AUTO_EN_ADDR CONN_AFE_CTL_RG_WBG_RCK_02_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_TARG_AUTO_EN_MASK 0x00008000                // RG_WBG_RCK_TARG_AUTO_EN[15]
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_TARG_AUTO_EN_SHFT 15
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_RSV_ADDR         CONN_AFE_CTL_RG_WBG_RCK_02_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_RSV_MASK         0x00004000                // RG_WBG_RCK_RSV[14]
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_RSV_SHFT         14
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_LDO_ADDR         CONN_AFE_CTL_RG_WBG_RCK_02_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_LDO_MASK         0x00003800                // RG_WBG_RCK_LDO[13..11]
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_LDO_SHFT         11
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXMEN_ADDR     CONN_AFE_CTL_RG_WBG_RCK_02_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXMEN_MASK     0x00000400                // RG_WBG_RCK_G_RXMEN[10]
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXMEN_SHFT     10
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXBW_MEN_ADDR  CONN_AFE_CTL_RG_WBG_RCK_02_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXBW_MEN_MASK  0x000003E0                // RG_WBG_RCK_G_RXBW_MEN[9..5]
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXBW_MEN_SHFT  5
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXBW_OFF_ADDR  CONN_AFE_CTL_RG_WBG_RCK_02_ADDR
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXBW_OFF_MASK  0x0000001F                // RG_WBG_RCK_G_RXBW_OFF[4..0]
#define CONN_AFE_CTL_RG_WBG_RCK_02_RG_WBG_RCK_G_RXBW_OFF_SHFT  0

/* =====================================================================================

  ---RGS_WBG_RO (0x18041000 + 0x020)---

    RGS_WBG_BPLL_RO[11..0]       - (RO) RGS reserve for BPLL
    RGS_WBG_WPLL_RO[23..12]      - (RO) RGS reserve for WPLL
    RGS_WBG_RCK_CSEL_RO[28..24]  - (RO) Auto calibration word  write to register
    wpll_rdy_sync_RO[29]         - (RO)  xxx 
    bpll_rdy_sync_RO[30]         - (RO)  xxx 
    RESERVED31[31]               - (RO) Reserved bits

 =====================================================================================*/
#define CONN_AFE_CTL_RGS_WBG_RO_bpll_rdy_sync_RO_ADDR          CONN_AFE_CTL_RGS_WBG_RO_ADDR
#define CONN_AFE_CTL_RGS_WBG_RO_bpll_rdy_sync_RO_MASK          0x40000000                // bpll_rdy_sync_RO[30]
#define CONN_AFE_CTL_RGS_WBG_RO_bpll_rdy_sync_RO_SHFT          30
#define CONN_AFE_CTL_RGS_WBG_RO_wpll_rdy_sync_RO_ADDR          CONN_AFE_CTL_RGS_WBG_RO_ADDR
#define CONN_AFE_CTL_RGS_WBG_RO_wpll_rdy_sync_RO_MASK          0x20000000                // wpll_rdy_sync_RO[29]
#define CONN_AFE_CTL_RGS_WBG_RO_wpll_rdy_sync_RO_SHFT          29
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_RCK_CSEL_RO_ADDR       CONN_AFE_CTL_RGS_WBG_RO_ADDR
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_RCK_CSEL_RO_MASK       0x1F000000                // RGS_WBG_RCK_CSEL_RO[28..24]
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_RCK_CSEL_RO_SHFT       24
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_WPLL_RO_ADDR           CONN_AFE_CTL_RGS_WBG_RO_ADDR
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_WPLL_RO_MASK           0x00FFF000                // RGS_WBG_WPLL_RO[23..12]
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_WPLL_RO_SHFT           12
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_BPLL_RO_ADDR           CONN_AFE_CTL_RGS_WBG_RO_ADDR
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_BPLL_RO_MASK           0x00000FFF                // RGS_WBG_BPLL_RO[11..0]
#define CONN_AFE_CTL_RGS_WBG_RO_RGS_WBG_BPLL_RO_SHFT           0

/* =====================================================================================

  ---RG_WBG_PLL_01 (0x18041000 + 0x024)---

    RG_WBG_PLL_01_RSV2[5..0]     - (RW) to be update
    RG_XLDO_VSEL[8..6]           - (RW) adjust CLKSQ LDO voltage
                                     no-use in current arch
    RG_CK_PLL_TST_EN[10..9]      - (RW) enable PLL clock test path
                                     00: gnd?
                                     01: BPLL_VCO
                                     10: WPLL_VCO
                                     11: CLKSQ 26M
    RG_WBG_G_RX_DIV_EN[11]       - (RW) force WBG PLL GPS RX post-divider enable 
                                     1'b0: Disable
                                     1'b1: Enable
                                     note: RG_WBG_BG_RX_DIV_EN should turn on
    RG_WBG_WF_TX_DIV_EN[12]      - (RW) force WBG PLL WTX post-divider enable 
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WBG_WF_RX_DIV_EN[13]      - (RW) force WBG PLL WFX post-divider enable 
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WBG_BG_RX_DIV_EN[14]      - (RW) force WBG PLL BT/GPS post-divider enable 
                                     1'b0: Disable
                                     1'b1: Enable
    RG_CK480_INV[15]             - (RW) inverse WF TX 480M/960M clock phase
                                     1'b0: 480M aligns with 960M  negative edge
                                     1'b1:  480M aligns with 960M  positive edge
    RG_PODIV_480M_EN[16]         - (RW) PLL POST divider 480MHz mode enable
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WRX_VOD_EN[17]            - (RW) enable over-drive function of WPLL RX post-divider LDO
                                     1'b0:
                                     1'b1:
    RG_W480_VOD_EN[18]           - (RW) enable over-drive function of WPLL TX 480M post-divider LDO
                                     1'b0:
                                     1'b1:
    RG_WTX_VOD_EN[19]            - (RW) enable over-drive function of WPLL TX post-divider LDO
                                     1'b0:
                                     1'b1:
    RG_G_VOD_EN[20]              - (RW) enable over-drive function of GL1/GL5 RX post-divider LDO
                                     1'b0:
                                     1'b1:
    RG_B_VOD_EN[21]              - (RW) enable over-drive function of BPLL  post-divider LDO
                                     1'b0:
                                     1'b1:
    RG_MONDC_LDO[27..22]         - (RW) enable PLL podiv LOD voltage test path
                                     ??
    RG_MONDC_CLKSQ[28]           - (RW) enable CLKSQ DC test path
                                     1'b0: Disable
                                     1'b1: Enable
    RG_MONCK_CLKSQ[29]           - (RW) enable CLKSQ clock test path
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WBG_PLL_01_RSV1[31..30]   - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_PLL_01_RSV1_ADDR     CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_PLL_01_RSV1_MASK     0xC0000000                // RG_WBG_PLL_01_RSV1[31..30]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_PLL_01_RSV1_SHFT     30
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONCK_CLKSQ_ADDR         CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONCK_CLKSQ_MASK         0x20000000                // RG_MONCK_CLKSQ[29]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONCK_CLKSQ_SHFT         29
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONDC_CLKSQ_ADDR         CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONDC_CLKSQ_MASK         0x10000000                // RG_MONDC_CLKSQ[28]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONDC_CLKSQ_SHFT         28
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONDC_LDO_ADDR           CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONDC_LDO_MASK           0x0FC00000                // RG_MONDC_LDO[27..22]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_MONDC_LDO_SHFT           22
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_B_VOD_EN_ADDR            CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_B_VOD_EN_MASK            0x00200000                // RG_B_VOD_EN[21]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_B_VOD_EN_SHFT            21
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_G_VOD_EN_ADDR            CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_G_VOD_EN_MASK            0x00100000                // RG_G_VOD_EN[20]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_G_VOD_EN_SHFT            20
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WTX_VOD_EN_ADDR          CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WTX_VOD_EN_MASK          0x00080000                // RG_WTX_VOD_EN[19]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WTX_VOD_EN_SHFT          19
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_W480_VOD_EN_ADDR         CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_W480_VOD_EN_MASK         0x00040000                // RG_W480_VOD_EN[18]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_W480_VOD_EN_SHFT         18
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WRX_VOD_EN_ADDR          CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WRX_VOD_EN_MASK          0x00020000                // RG_WRX_VOD_EN[17]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WRX_VOD_EN_SHFT          17
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_PODIV_480M_EN_ADDR       CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_PODIV_480M_EN_MASK       0x00010000                // RG_PODIV_480M_EN[16]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_PODIV_480M_EN_SHFT       16
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_CK480_INV_ADDR           CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_CK480_INV_MASK           0x00008000                // RG_CK480_INV[15]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_CK480_INV_SHFT           15
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_BG_RX_DIV_EN_ADDR    CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_BG_RX_DIV_EN_MASK    0x00004000                // RG_WBG_BG_RX_DIV_EN[14]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_BG_RX_DIV_EN_SHFT    14
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_WF_RX_DIV_EN_ADDR    CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_WF_RX_DIV_EN_MASK    0x00002000                // RG_WBG_WF_RX_DIV_EN[13]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_WF_RX_DIV_EN_SHFT    13
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_WF_TX_DIV_EN_ADDR    CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_WF_TX_DIV_EN_MASK    0x00001000                // RG_WBG_WF_TX_DIV_EN[12]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_WF_TX_DIV_EN_SHFT    12
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_G_RX_DIV_EN_ADDR     CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_G_RX_DIV_EN_MASK     0x00000800                // RG_WBG_G_RX_DIV_EN[11]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_G_RX_DIV_EN_SHFT     11
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_CK_PLL_TST_EN_ADDR       CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_CK_PLL_TST_EN_MASK       0x00000600                // RG_CK_PLL_TST_EN[10..9]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_CK_PLL_TST_EN_SHFT       9
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_XLDO_VSEL_ADDR           CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_XLDO_VSEL_MASK           0x000001C0                // RG_XLDO_VSEL[8..6]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_XLDO_VSEL_SHFT           6
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_PLL_01_RSV2_ADDR     CONN_AFE_CTL_RG_WBG_PLL_01_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_PLL_01_RSV2_MASK     0x0000003F                // RG_WBG_PLL_01_RSV2[5..0]
#define CONN_AFE_CTL_RG_WBG_PLL_01_RG_WBG_PLL_01_RSV2_SHFT     0

/* =====================================================================================

  ---RG_WBG_PLL_02 (0x18041000 + 0x028)---

    RG_BPLL_BC[1..0]             - (RW) Capacitance adjustment for Bandiwdth (C1 for Zero)
                                     2'b00:  3.6pF
                                     2'b01:  4.8pF
                                     2'b10:  6pF
                                     2'b11:  7.2pF
    RG_BPLL_BPA[4..2]            - (RW) Capacitance adjustment for Bandiwdth (C2 for pole)
                                     3'b000:  30fF
                                     3'b001:  60fF
                                     3'b010:  90fF
                                     3'b011:  120fF
                                     3'b100:  150fF
                                     3'b101:  180fF
                                     3'b110:  210fF
                                     3'b111:  240fF
    RG_BPLL_BPB[6..5]            - (RW) CHP OUT LPF selection
                                     2'b00: 66MHz
                                     2'b01: 33MHz
                                     2'b10: 22MHz
                                     2'b11: 17MHz
    RG_BPLL_BR[9..7]             - (RW) PLL LPF Resistor Selection
                                     resistance =30R-3R*BR[2:0]
                                     R=4kohm
                                     3'b000:  120kohm
                                     3'b001:  108kohm
                                     3'b010:  96kohm
                                     3'b011:  84kohm
                                     3'b100:  72kohm
                                     3'b101:  60kohm
                                     3'b110:  48kohm
                                     3'b111:  36kohm
    RG_BPLL_ICP[14..10]          - (RW) CHP current setting
                                     RG_ICP[0]=5uA
                                     RG_ICP[1]=10uA
                                     RG_ICP[2]=20uA
                                     RG_ICP[3]=40uA
                                     RG_ICP[4]=80uA
    RG_BPLL_TCL_EN[15]           - (RW) Temperaute Compensation Loop
                                     1'b0: Disable
                                     1'b1: Enable
    RG_BPLL_IBAND[25..16]        - (RW) Manual Iband code select only for load band mode IBAND[9:0]=[299, 151, 76.5, 39, 20, 10.5, 5.5, 3, 1.5, 1]*5uA
                                     10'd1: Minimum band
                                     10'd1023: Maximum
    RG_BPLL_DIG_LOAD_EN[26]      - (RW) Load en signal for debug
                                     1'b0: disable
                                     1'b1:Enable
    RG_BPLL_DIG_DEBUG_SEL[27]    - (RW) monitor selection signal
                                     1'b0:{IBAND[9:2]}
                                     1'b1:{KBAND_CPLT,IBAND[6:0]}
    RG_BPLL_DIG_KBAND_PREDIV[29..28] - (RW) PLL KBAND Pre-divider ratio
                                     2'b00: /1
                                     2'b01: /2
                                     2'b1X: /4
    RG_BPLL_LDO_LBW_EN[30]       - (RW) PLL 1.8 to 1.5 LDO low bandwidth mode
                                     1'b0: Disable
                                     1'b1: Enable
    RG_BPLL_LVROD_EN[31]         - (RW) PLL 1.2 to 0.85 LDO output voltage
                                     1'b0:0.85V
                                     1'b1:0.95V

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_LVROD_EN_ADDR       CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_LVROD_EN_MASK       0x80000000                // RG_BPLL_LVROD_EN[31]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_LVROD_EN_SHFT       31
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_LDO_LBW_EN_ADDR     CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_LDO_LBW_EN_MASK     0x40000000                // RG_BPLL_LDO_LBW_EN[30]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_LDO_LBW_EN_SHFT     30
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_KBAND_PREDIV_ADDR CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_KBAND_PREDIV_MASK 0x30000000                // RG_BPLL_DIG_KBAND_PREDIV[29..28]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_KBAND_PREDIV_SHFT 28
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_DEBUG_SEL_ADDR  CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_DEBUG_SEL_MASK  0x08000000                // RG_BPLL_DIG_DEBUG_SEL[27]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_DEBUG_SEL_SHFT  27
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_LOAD_EN_ADDR    CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_LOAD_EN_MASK    0x04000000                // RG_BPLL_DIG_LOAD_EN[26]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_DIG_LOAD_EN_SHFT    26
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_IBAND_ADDR          CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_IBAND_MASK          0x03FF0000                // RG_BPLL_IBAND[25..16]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_IBAND_SHFT          16
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_TCL_EN_ADDR         CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_TCL_EN_MASK         0x00008000                // RG_BPLL_TCL_EN[15]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_TCL_EN_SHFT         15
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_ICP_ADDR            CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_ICP_MASK            0x00007C00                // RG_BPLL_ICP[14..10]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_ICP_SHFT            10
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BR_ADDR             CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BR_MASK             0x00000380                // RG_BPLL_BR[9..7]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BR_SHFT             7
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BPB_ADDR            CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BPB_MASK            0x00000060                // RG_BPLL_BPB[6..5]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BPB_SHFT            5
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BPA_ADDR            CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BPA_MASK            0x0000001C                // RG_BPLL_BPA[4..2]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BPA_SHFT            2
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BC_ADDR             CONN_AFE_CTL_RG_WBG_PLL_02_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BC_MASK             0x00000003                // RG_BPLL_BC[1..0]
#define CONN_AFE_CTL_RG_WBG_PLL_02_RG_BPLL_BC_SHFT             0

/* =====================================================================================

  ---RG_WBG_PLL_03 (0x18041000 + 0x02C)---

    RG_BPLL_PREDIV[1..0]         - (RW) PLL Pre divider ratio
                                     2'b00: /1
                                     2'b01: /2
                                     2'b1X: /4
    RG_BPLL_FBKDIV[9..2]         - (RW) Feedback divider ratio
                                     8'd6=/6
                                     8'd7=/7
                                     8'd255=/255
    RG_BPLL_FBKSEL[10]           - (RW) Pre-divider between MMD and VCO
                                     1'b0: VCO_CK/1
                                     1'b1: VCO_CK/2
    RG_BPLL_POSDIV0[13..11]      - (RW) PLL CORE POSDIV0 clock select for 
                                     3'b000: VCO_CK/1
                                     3'b001: VCO_CK/2
                                     3'b010: VCO_CK/4
                                     3'b011: VCO_CK/8
                                     3'b100: VCO_CK/16
                                     3'b101: gating no output
                                     3'b110: gating no output
                                     3'b111: gating no output
    RG_BPLL_POSDIV1[16..14]      - (RW) useless
    RG_BPLL_RST_DLY[18..17]      - (RW) PLL Reset time setting : Tref is decided by input clock and pre-divider and kband-divider.
                                     2'b00=30*Tref
                                     2'b01=62*Tref
                                     2'b10=126*Fref
                                     2'b11=254*Tref
    RG_BPLL_FC_DELAY[20..19]     - (RW) DA_LPF_EN delay to DA_FC_EN by N reference cycle
                                     2'b00: 4
                                     2'b01: 8
                                     2'b10: 16
                                     2'b11: 32
    RG_BPLL_MONCK_EN[21]         - (RW) Monitor Clock Enable
                                     1'b0: Disable
                                     1'b1: Enable
    RG_BPLL_MONVC_EN[22]         - (RW) Monitor Vctrl Enable
                                     1'b0: Disable
                                     1'b1: Enable
    RG_BPLL_V2I_BIAS_LPF_EN[23]  - (RW) V2I_BIAS_LPF Enable
                                     1'b0: Disable
                                     1'b1: Enable
    RG_BPLL_REV0[27..24]         - (RW) Reserved default 0 registers
    RG_BPLL_REV1[31..28]         - (RW) Reserved default 1 registers

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_REV1_ADDR           CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_REV1_MASK           0xF0000000                // RG_BPLL_REV1[31..28]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_REV1_SHFT           28
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_REV0_ADDR           CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_REV0_MASK           0x0F000000                // RG_BPLL_REV0[27..24]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_REV0_SHFT           24
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_V2I_BIAS_LPF_EN_ADDR CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_V2I_BIAS_LPF_EN_MASK 0x00800000                // RG_BPLL_V2I_BIAS_LPF_EN[23]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_V2I_BIAS_LPF_EN_SHFT 23
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_MONVC_EN_ADDR       CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_MONVC_EN_MASK       0x00400000                // RG_BPLL_MONVC_EN[22]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_MONVC_EN_SHFT       22
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_MONCK_EN_ADDR       CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_MONCK_EN_MASK       0x00200000                // RG_BPLL_MONCK_EN[21]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_MONCK_EN_SHFT       21
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FC_DELAY_ADDR       CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FC_DELAY_MASK       0x00180000                // RG_BPLL_FC_DELAY[20..19]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FC_DELAY_SHFT       19
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_RST_DLY_ADDR        CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_RST_DLY_MASK        0x00060000                // RG_BPLL_RST_DLY[18..17]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_RST_DLY_SHFT        17
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_POSDIV1_ADDR        CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_POSDIV1_MASK        0x0001C000                // RG_BPLL_POSDIV1[16..14]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_POSDIV1_SHFT        14
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_POSDIV0_ADDR        CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_POSDIV0_MASK        0x00003800                // RG_BPLL_POSDIV0[13..11]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_POSDIV0_SHFT        11
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FBKSEL_ADDR         CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FBKSEL_MASK         0x00000400                // RG_BPLL_FBKSEL[10]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FBKSEL_SHFT         10
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FBKDIV_ADDR         CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FBKDIV_MASK         0x000003FC                // RG_BPLL_FBKDIV[9..2]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_FBKDIV_SHFT         2
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_PREDIV_ADDR         CONN_AFE_CTL_RG_WBG_PLL_03_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_PREDIV_MASK         0x00000003                // RG_BPLL_PREDIV[1..0]
#define CONN_AFE_CTL_RG_WBG_PLL_03_RG_BPLL_PREDIV_SHFT         0

/* =====================================================================================

  ---RG_WBG_PLL_04 (0x18041000 + 0x030)---

    RG_WPLL_BC[1..0]             - (RW) Capacitance adjustment for Bandiwdth (C1 for Zero)
                                     2'b00:  3.6pF
                                     2'b01:  4.8pF
                                     2'b10:  6pF
                                     2'b11:  7.2pF
    RG_WPLL_BPA[4..2]            - (RW) Capacitance adjustment for Bandiwdth (C2 for pole)
                                     3'b000:  30fF
                                     3'b001:  60fF
                                     3'b010:  90fF
                                     3'b011:  120fF
                                     3'b100:  150fF
                                     3'b101:  180fF
                                     3'b110:  210fF
                                     3'b111:  240fF
    RG_WPLL_BPB[6..5]            - (RW) CHP OUT LPF selection
                                     2'b00: 66MHz
                                     2'b01: 33MHz
                                     2'b10: 22MHz
                                     2'b11: 17MHz
    RG_WPLL_BR[9..7]             - (RW) PLL LPF Resistor Selection
                                     resistance =30R-3R*BR[2:0]
                                     R=4kohm 
                                     3'b000:  120kohm
                                     3'b001:  108kohm
                                     3'b010:  96kohm
                                     3'b011:  84kohm
                                     3'b100:  72kohm
                                     3'b101:  60kohm
                                     3'b110:  48kohm
                                     3'b111:  36kohm
    RG_WPLL_ICP[14..10]          - (RW) CHP current setting
                                     RG_ICP[0]=5uA
                                     RG_ICP[1]=10uA
                                     RG_ICP[2]=20uA
                                     RG_ICP[3]=40uA
                                     RG_ICP[4]=80uA
    RG_WPLL_TCL_EN[15]           - (RW) Temperaute Compensation Loop
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WPLL_IBAND[25..16]        - (RW) Manual Iband code select only for load band mode IBAND[9:0]=[299, 151, 76.5, 39, 20, 10.5, 5.5, 3, 1.5, 1]*5uA
                                     10'd1: Minimum band
                                     10'd1023: Maximum
    RG_WPLL_DIG_LOAD_EN[26]      - (RW) Load en signal for debug
                                     1'b0: disable
                                     1'b1:Enable
    RG_WPLL_DIG_DEBUG_SEL[27]    - (RW) monitor selection signal
                                     1'b0:{IBAND[9:2]}
                                     1'b1:{KBAND_CPLT,IBAND[6:0]}
    RG_WPLL_DIG_KBAND_PREDIV[29..28] - (RW) PLL KBAND Pre-divider ratio
                                     2'b00: /1
                                     2'b01: /2
                                     2'b1X: /4
    RG_WPLL_LDO_LBW_EN[30]       - (RW) PLL 1.8 to 1.5 LDO low bandwidth mode
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WPLL_LDO_LVROD_EN[31]     - (RW) PLL 1.2 to 0.85 LDO output voltage
                                     1'b0:0.85V
                                     1'b1:0.95V

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_LDO_LVROD_EN_ADDR   CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_LDO_LVROD_EN_MASK   0x80000000                // RG_WPLL_LDO_LVROD_EN[31]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_LDO_LVROD_EN_SHFT   31
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_LDO_LBW_EN_ADDR     CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_LDO_LBW_EN_MASK     0x40000000                // RG_WPLL_LDO_LBW_EN[30]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_LDO_LBW_EN_SHFT     30
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_KBAND_PREDIV_ADDR CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_KBAND_PREDIV_MASK 0x30000000                // RG_WPLL_DIG_KBAND_PREDIV[29..28]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_KBAND_PREDIV_SHFT 28
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_DEBUG_SEL_ADDR  CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_DEBUG_SEL_MASK  0x08000000                // RG_WPLL_DIG_DEBUG_SEL[27]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_DEBUG_SEL_SHFT  27
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_LOAD_EN_ADDR    CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_LOAD_EN_MASK    0x04000000                // RG_WPLL_DIG_LOAD_EN[26]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_DIG_LOAD_EN_SHFT    26
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_IBAND_ADDR          CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_IBAND_MASK          0x03FF0000                // RG_WPLL_IBAND[25..16]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_IBAND_SHFT          16
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_TCL_EN_ADDR         CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_TCL_EN_MASK         0x00008000                // RG_WPLL_TCL_EN[15]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_TCL_EN_SHFT         15
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_ICP_ADDR            CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_ICP_MASK            0x00007C00                // RG_WPLL_ICP[14..10]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_ICP_SHFT            10
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BR_ADDR             CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BR_MASK             0x00000380                // RG_WPLL_BR[9..7]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BR_SHFT             7
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BPB_ADDR            CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BPB_MASK            0x00000060                // RG_WPLL_BPB[6..5]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BPB_SHFT            5
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BPA_ADDR            CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BPA_MASK            0x0000001C                // RG_WPLL_BPA[4..2]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BPA_SHFT            2
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BC_ADDR             CONN_AFE_CTL_RG_WBG_PLL_04_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BC_MASK             0x00000003                // RG_WPLL_BC[1..0]
#define CONN_AFE_CTL_RG_WBG_PLL_04_RG_WPLL_BC_SHFT             0

/* =====================================================================================

  ---RG_WBG_PLL_05 (0x18041000 + 0x034)---

    RG_WPLL_PREDIV[1..0]         - (RW) PLL Pre divider ratio
                                     2'b00: /1
                                     2'b01: /2
                                     2'b1X: /4
    RG_WPLL_FBKDIV[9..2]         - (RW) Feedback divider ratio
                                     8'd6=/6
                                     8'd7=/7
                                     8'd255=/255
    RG_WPLL_FBKSEL[10]           - (RW) Pre-divider between MMD and VCO
                                     1'b0: VCO_CK/1
                                     1'b1: VCO_CK/2
    RG_WPLL_POSDIV0[13..11]      - (RW) PLL POSDIV0 clock select for CKN/CKP (1664M/832 mode)
                                     3'b000: VCO_CK/1
                                     3'b001: VCO_CK/2
                                     3'b010: VCO_CK/4
                                     3'b011: VCO_CK/8
                                     3'b100: VCO_CK/16
                                     3'b101: gating no output
                                     3'b110: gating no output
                                     3'b111: gating no output
    RG_WPLL_POSDIV1[16..14]      - (RW) useless
    RG_WPLL_RST_DLY[18..17]      - (RW) PLL Reset time setting : Tref is decided by input clock and pre-divider and kband-divider.
                                     2'b00=30*Tref
                                     2'b01=62*Tref
                                     2'b10=126*Fref
                                     2'b11=254*Tref
    RG_WPLL_FC_DELAY[20..19]     - (RW) DA_LPF_EN delay to DA_FC_EN by N reference cycle
                                     2'b00: 4
                                     2'b01: 8
                                     2'b10: 16
                                     2'b11: 32
    RG_WPLL_MONCK_EN[21]         - (RW) Monitor Clock Enable
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WPLL_MONVC_EN[22]         - (RW) Monitor Vctrl Enable
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WPLL_V2I_BIAS_LPF_EN[23]  - (RW) V2I_BIAS_LPF Enable
                                     1'b0: Disable
                                     1'b1: Enable
    RG_WPLL_REV0[27..24]         - (RW) Reserved default 0 registers
    RG_WPLL_REV1[31..28]         - (RW) Reserved default 1 registers

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_REV1_ADDR           CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_REV1_MASK           0xF0000000                // RG_WPLL_REV1[31..28]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_REV1_SHFT           28
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_REV0_ADDR           CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_REV0_MASK           0x0F000000                // RG_WPLL_REV0[27..24]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_REV0_SHFT           24
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_V2I_BIAS_LPF_EN_ADDR CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_V2I_BIAS_LPF_EN_MASK 0x00800000                // RG_WPLL_V2I_BIAS_LPF_EN[23]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_V2I_BIAS_LPF_EN_SHFT 23
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_MONVC_EN_ADDR       CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_MONVC_EN_MASK       0x00400000                // RG_WPLL_MONVC_EN[22]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_MONVC_EN_SHFT       22
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_MONCK_EN_ADDR       CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_MONCK_EN_MASK       0x00200000                // RG_WPLL_MONCK_EN[21]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_MONCK_EN_SHFT       21
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FC_DELAY_ADDR       CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FC_DELAY_MASK       0x00180000                // RG_WPLL_FC_DELAY[20..19]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FC_DELAY_SHFT       19
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_RST_DLY_ADDR        CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_RST_DLY_MASK        0x00060000                // RG_WPLL_RST_DLY[18..17]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_RST_DLY_SHFT        17
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_POSDIV1_ADDR        CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_POSDIV1_MASK        0x0001C000                // RG_WPLL_POSDIV1[16..14]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_POSDIV1_SHFT        14
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_POSDIV0_ADDR        CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_POSDIV0_MASK        0x00003800                // RG_WPLL_POSDIV0[13..11]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_POSDIV0_SHFT        11
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FBKSEL_ADDR         CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FBKSEL_MASK         0x00000400                // RG_WPLL_FBKSEL[10]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FBKSEL_SHFT         10
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FBKDIV_ADDR         CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FBKDIV_MASK         0x000003FC                // RG_WPLL_FBKDIV[9..2]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_FBKDIV_SHFT         2
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_PREDIV_ADDR         CONN_AFE_CTL_RG_WBG_PLL_05_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_PREDIV_MASK         0x00000003                // RG_WPLL_PREDIV[1..0]
#define CONN_AFE_CTL_RG_WBG_PLL_05_RG_WPLL_PREDIV_SHFT         0

/* =====================================================================================

  ---RG_WBG_PLL_06 (0x18041000 + 0x038)---

    RG_WBG_PLL_06[31..0]         - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_PLL_06_RG_WBG_PLL_06_ADDR          CONN_AFE_CTL_RG_WBG_PLL_06_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_06_RG_WBG_PLL_06_MASK          0xFFFFFFFF                // RG_WBG_PLL_06[31..0]
#define CONN_AFE_CTL_RG_WBG_PLL_06_RG_WBG_PLL_06_SHFT          0

/* =====================================================================================

  ---RG_WBG_PLL_07 (0x18041000 + 0x03C)---

    RG_WBG_PLL_07[31..0]         - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_PLL_07_RG_WBG_PLL_07_ADDR          CONN_AFE_CTL_RG_WBG_PLL_07_ADDR
#define CONN_AFE_CTL_RG_WBG_PLL_07_RG_WBG_PLL_07_MASK          0xFFFFFFFF                // RG_WBG_PLL_07[31..0]
#define CONN_AFE_CTL_RG_WBG_PLL_07_RG_WBG_PLL_07_SHFT          0

/* =====================================================================================

  ---RG_WBG_GL1_01 (0x18041000 + 0x040)---

    RG_GL1_AD_LDO09_VSEL[2..0]   - (RW) 0.95V LDO tuning
                                     111:0.903
                                     110: 0.882
                                     101: 0.860
                                     100: 0.840 
                                     011: 0.815 (POR)
                                     010: 0.794
                                     001: 0.772
                                     000: 0.752
    RG_GL1_AD_VREF_SEL[5..3]     - (RW) VREF selection
                                     111: 0.918
                                     110: 0.898
                                     101: 0.875
                                     100: 0.855
                                     011: 0.827
                                     010: 0.807 (POR)
                                     001: 0.784
                                     000: 0.764
    RG_GL1_DUODRI[6]             - (RW) 1: reference gen doubled current
                                     0: reference gen normal current
    RG_GL1_RAW_OUT_EN[7]         - (RW) 1: Raw data out
                                     0: Normal data out
    RG_GL1_OUT_CLK_DIV_H4_L2[8]  - (RW) 1: output clock divided by 4
                                     0: output clock divided by 2
    RG_GL1_OUT_CLK_DIV_EN[9]     - (RW) 1: output clock divider enable 
                                     0: disable
    RG_GL1_AD_OUTPUT_EN[10]      - (RW) 1: output enable 
                                     0: output disable
    RG_GL1_AD_CK_OUT_RISE[11]    - (RW) 1: Output clock uses positive polarity
                                     0: Output clock uses negative polarity
    RG_GL1_AD_CH_DFF_RISE[12]    - (RW) 1: DFF sync clock uses positive polarity
                                     0: DFF sync clock uses negative polarity
    RG_GL1_AD_LDO_PUMP_ENB[13]   - (RW) 1: LDO pump disable
                                     0: LDO pump enable
    RG_GL1_AD_COMP_TAIL_MSB[14]  - (RW) 1: enlarge comparator tail transistor size for first 3 MSBs
                                     0: default size
    RG_GL1_AD_COMP_TAIL[15]      - (RW) 1: enlarge comparator tail transistor size
                                     0: default size
    RG_GL1_MODE_L1L5_SYNC_CLK[16] - (RW) 1: L1 and L5 dual band use external post-divider clock
                                     0: Internal
    RG_GL1_MODE_BT_GPS[17]       - (RW) 1: BT Mode for CLK Selection
                                     0: GPS Mode for CLK Selection (always 0 for GPS RX)
    RG_GL1_AD_EXT_CLK_SEL[18]    - (RW) 1: External clock source
                                     0: Internal PLL as clock
    RG_GL1_AD_QCH_EN[19]         - (RW) 1: Q channel enable
                                     0: Q channel disable
    RG_GL1_AD_ICH_EN[20]         - (RW) 1: I channel enable
                                     0: I channel disable
    RG_GL1_AD_VAR_CLKS[21]       - (RW) 1: variable clks
                                     0: fixed clks
    RG_GL1_AD_LSB_EN[22]         - (RW) 1: 13bit cycles conversion
                                     0: 10 bit cycles conversion
    RG_GL1_AD_VGEN_PUMP_EN[23]   - (RW) 1: reference gen pump enable
                                     0: reference gen pump disable
    RG_GL1_AD_NS_EN[24]          - (RW) 1: noise shaping enable
                                     0: noise shaping disable
    RG_WBG_GL1_01_RSV0[27..25]   - (RW)  xxx 
    RG_GL1_ADCKSEL[28]           - (RW) ADC Clock Divider control
                                     0: GPSADC normal mode clock=16MHz
                                     1: GPSADC normal mode clock=64MHz
    RG_GL1_AD_REF_EN[29]         - (RW) 1: Enable reference gen
                                     0: Disable referenc gen
    RG_GL1_AD_EN[30]             - (RW) 1: Enable ADC
                                     0: Disable ADC
    RG_GL1_RG_DA_Mode[31]        - (RW) 1: RG Mode
                                     0: DA Mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_RG_DA_Mode_ADDR      CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_RG_DA_Mode_MASK      0x80000000                // RG_GL1_RG_DA_Mode[31]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_RG_DA_Mode_SHFT      31
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_EN_ADDR           CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_EN_MASK           0x40000000                // RG_GL1_AD_EN[30]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_EN_SHFT           30
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_REF_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_REF_EN_MASK       0x20000000                // RG_GL1_AD_REF_EN[29]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_REF_EN_SHFT       29
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_ADCKSEL_ADDR         CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_ADCKSEL_MASK         0x10000000                // RG_GL1_ADCKSEL[28]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_ADCKSEL_SHFT         28
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_WBG_GL1_01_RSV0_ADDR     CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_WBG_GL1_01_RSV0_MASK     0x0E000000                // RG_WBG_GL1_01_RSV0[27..25]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_WBG_GL1_01_RSV0_SHFT     25
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_NS_EN_ADDR        CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_NS_EN_MASK        0x01000000                // RG_GL1_AD_NS_EN[24]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_NS_EN_SHFT        24
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VGEN_PUMP_EN_ADDR CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VGEN_PUMP_EN_MASK 0x00800000                // RG_GL1_AD_VGEN_PUMP_EN[23]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VGEN_PUMP_EN_SHFT 23
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LSB_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LSB_EN_MASK       0x00400000                // RG_GL1_AD_LSB_EN[22]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LSB_EN_SHFT       22
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VAR_CLKS_ADDR     CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VAR_CLKS_MASK     0x00200000                // RG_GL1_AD_VAR_CLKS[21]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VAR_CLKS_SHFT     21
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_ICH_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_ICH_EN_MASK       0x00100000                // RG_GL1_AD_ICH_EN[20]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_ICH_EN_SHFT       20
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_QCH_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_QCH_EN_MASK       0x00080000                // RG_GL1_AD_QCH_EN[19]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_QCH_EN_SHFT       19
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_EXT_CLK_SEL_ADDR  CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_EXT_CLK_SEL_MASK  0x00040000                // RG_GL1_AD_EXT_CLK_SEL[18]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_EXT_CLK_SEL_SHFT  18
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_MODE_BT_GPS_ADDR     CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_MODE_BT_GPS_MASK     0x00020000                // RG_GL1_MODE_BT_GPS[17]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_MODE_BT_GPS_SHFT     17
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_MODE_L1L5_SYNC_CLK_ADDR CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_MODE_L1L5_SYNC_CLK_MASK 0x00010000                // RG_GL1_MODE_L1L5_SYNC_CLK[16]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_MODE_L1L5_SYNC_CLK_SHFT 16
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_COMP_TAIL_ADDR    CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_COMP_TAIL_MASK    0x00008000                // RG_GL1_AD_COMP_TAIL[15]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_COMP_TAIL_SHFT    15
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_COMP_TAIL_MSB_ADDR CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_COMP_TAIL_MSB_MASK 0x00004000                // RG_GL1_AD_COMP_TAIL_MSB[14]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_COMP_TAIL_MSB_SHFT 14
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LDO_PUMP_ENB_ADDR CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LDO_PUMP_ENB_MASK 0x00002000                // RG_GL1_AD_LDO_PUMP_ENB[13]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LDO_PUMP_ENB_SHFT 13
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_CH_DFF_RISE_ADDR  CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_CH_DFF_RISE_MASK  0x00001000                // RG_GL1_AD_CH_DFF_RISE[12]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_CH_DFF_RISE_SHFT  12
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_CK_OUT_RISE_ADDR  CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_CK_OUT_RISE_MASK  0x00000800                // RG_GL1_AD_CK_OUT_RISE[11]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_CK_OUT_RISE_SHFT  11
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_OUTPUT_EN_ADDR    CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_OUTPUT_EN_MASK    0x00000400                // RG_GL1_AD_OUTPUT_EN[10]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_OUTPUT_EN_SHFT    10
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_OUT_CLK_DIV_EN_ADDR  CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_OUT_CLK_DIV_EN_MASK  0x00000200                // RG_GL1_OUT_CLK_DIV_EN[9]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_OUT_CLK_DIV_EN_SHFT  9
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_OUT_CLK_DIV_H4_L2_ADDR CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_OUT_CLK_DIV_H4_L2_MASK 0x00000100                // RG_GL1_OUT_CLK_DIV_H4_L2[8]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_OUT_CLK_DIV_H4_L2_SHFT 8
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_RAW_OUT_EN_ADDR      CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_RAW_OUT_EN_MASK      0x00000080                // RG_GL1_RAW_OUT_EN[7]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_RAW_OUT_EN_SHFT      7
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_DUODRI_ADDR          CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_DUODRI_MASK          0x00000040                // RG_GL1_DUODRI[6]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_DUODRI_SHFT          6
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VREF_SEL_ADDR     CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VREF_SEL_MASK     0x00000038                // RG_GL1_AD_VREF_SEL[5..3]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_VREF_SEL_SHFT     3
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LDO09_VSEL_ADDR   CONN_AFE_CTL_RG_WBG_GL1_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LDO09_VSEL_MASK   0x00000007                // RG_GL1_AD_LDO09_VSEL[2..0]
#define CONN_AFE_CTL_RG_WBG_GL1_01_RG_GL1_AD_LDO09_VSEL_SHFT   0

/* =====================================================================================

  ---RG_WBG_GL1_02 (0x18041000 + 0x044)---

    RG_WBG_GL1_02_RSV2[6..0]     - (RW)  xxx 
    RG_GL1_PREON_MODE[7]         - (RW) 0: normal 
                                     1: Ref pre-on mode
    RG_GL1_RX_TST_SEL[10..8]     - (RW) RX DC test
                                     000: MON_Buffer
                                     001: MON_AD
                                     Others: Not Used
    RG_GL1_RX_TST_EN[11]         - (RW) 1: for RX DC monitor enable
                                     0: disable
    RG_GL1_BUF_TSTSEL[13..12]    - (RW) ADBUF DC test
                                     00: LDO_0P98
                                     01: VICM
                                     10: VCMREF
                                     11: NO_USED
    RG_GL1_BUF_TST_EN[14]        - (RW) 1: for ADBUF DC monitor enable
                                     0: disable
    RG_WBG_GL1_02_RSV1[15]       - (RW)  xxx 
    RG_GL1_BUF_EN[16]            - (RW) ADBUF on/off manual control
                                     0: ADBUF manual off
                                     1: ADBUF manual on
    RG_GL1_BUFEN_MAN[17]         - (RW) ADBUF on/off manual mode enable
                                     0: normal mode, control by DA
                                     1: manual mode, control by RG
    RG_WBG_GL1_02_RSV0[20..18]   - (RW)  xxx 
    RG_GL1_V098_LDO_VSEL[23..21] - (RW) 0.98V LDO tuning
                                     111: 1.04
                                     110: 1.02
                                     101: 0.999
                                     100: 0.98  (POR)
                                     011: 0.958
                                     010: 0.941
                                     001: 0.92
                                     000: 0.9
    RG_GL1_ADBUF_VCM[25..24]     - (RW) ADBUF output VCM
                                     11: 0.5V
                                     10: 0.55V
                                     01: 0.6V(POR)
                                     00: 0.65V
    RG_GL1_BUF_IGEN_SEL[27..26]  - (RW) RX Top bias current tuning
                                     11:  I5u=4.06u (0.8X)
                                     10: I5u=5.07u (1X, POR)
                                     01: I5u=6.75u (1.33X)
                                     00: I5u=10.1u (2X)
    RG_GL1_AD_TST_EN[28]         - (RW) 1: AD DC monitor enable 
                                     0: AD DC monitor disable
    RG_GL1_AD_TST_SEL[31..29]    - (RW) AD DC monitored voltage selection
                                     000:VR branch 1 full reference
                                     001: VR branch 1 half reference
                                     010: VR branch 2 full reference
                                     011: VR branch 2  half reference   
                                     100: LDO_0P9V

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_AD_TST_SEL_ADDR      CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_AD_TST_SEL_MASK      0xE0000000                // RG_GL1_AD_TST_SEL[31..29]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_AD_TST_SEL_SHFT      29
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_AD_TST_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_AD_TST_EN_MASK       0x10000000                // RG_GL1_AD_TST_EN[28]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_AD_TST_EN_SHFT       28
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_IGEN_SEL_ADDR    CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_IGEN_SEL_MASK    0x0C000000                // RG_GL1_BUF_IGEN_SEL[27..26]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_IGEN_SEL_SHFT    26
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_ADBUF_VCM_ADDR       CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_ADBUF_VCM_MASK       0x03000000                // RG_GL1_ADBUF_VCM[25..24]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_ADBUF_VCM_SHFT       24
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_V098_LDO_VSEL_ADDR   CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_V098_LDO_VSEL_MASK   0x00E00000                // RG_GL1_V098_LDO_VSEL[23..21]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_V098_LDO_VSEL_SHFT   21
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV0_ADDR     CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV0_MASK     0x001C0000                // RG_WBG_GL1_02_RSV0[20..18]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV0_SHFT     18
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUFEN_MAN_ADDR       CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUFEN_MAN_MASK       0x00020000                // RG_GL1_BUFEN_MAN[17]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUFEN_MAN_SHFT       17
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_EN_ADDR          CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_EN_MASK          0x00010000                // RG_GL1_BUF_EN[16]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_EN_SHFT          16
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV1_ADDR     CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV1_MASK     0x00008000                // RG_WBG_GL1_02_RSV1[15]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV1_SHFT     15
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_TST_EN_ADDR      CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_TST_EN_MASK      0x00004000                // RG_GL1_BUF_TST_EN[14]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_TST_EN_SHFT      14
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_TSTSEL_ADDR      CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_TSTSEL_MASK      0x00003000                // RG_GL1_BUF_TSTSEL[13..12]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_BUF_TSTSEL_SHFT      12
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_RX_TST_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_RX_TST_EN_MASK       0x00000800                // RG_GL1_RX_TST_EN[11]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_RX_TST_EN_SHFT       11
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_RX_TST_SEL_ADDR      CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_RX_TST_SEL_MASK      0x00000700                // RG_GL1_RX_TST_SEL[10..8]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_RX_TST_SEL_SHFT      8
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_PREON_MODE_ADDR      CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_PREON_MODE_MASK      0x00000080                // RG_GL1_PREON_MODE[7]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_GL1_PREON_MODE_SHFT      7
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV2_ADDR     CONN_AFE_CTL_RG_WBG_GL1_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV2_MASK     0x0000007F                // RG_WBG_GL1_02_RSV2[6..0]
#define CONN_AFE_CTL_RG_WBG_GL1_02_RG_WBG_GL1_02_RSV2_SHFT     0

/* =====================================================================================

  ---RG_WBG_BT0_RX_01 (0x18041000 + 0x048)---

    RG_BT0_LDO09_VSEL[2..0]      - (RW) 0.95V LDO tuning
                                     111:0.903
                                     110: 0.882
                                     101: 0.860
                                     100: 0.840 
                                     011: 0.815 (POR)
                                     010: 0.794
                                     001: 0.772
                                     000: 0.752
    RG_BT0_AD_VREF_SEL[5..3]     - (RW) VREF selection
                                     111: 0.918
                                     110: 0.898
                                     101: 0.875
                                     100: 0.855
                                     011: 0.827
                                     010: 0.807 (POR)
                                     001: 0.784
                                     000: 0.764
    RG_BT0_DUODRI[6]             - (RW) 1: reference gen doubled current
                                     0: reference gen normal current
    RG_BT0_RAW_OUT_EN[7]         - (RW) 1: Raw data out
                                     0: Normal data out
    RG_BT0_OUT_CLK_DIV_H4_L2[8]  - (RW) 1: output clock divided by 4
                                     0: output clock divided by 2
    RG_BT0_OUT_CLK_DIV_EN[9]     - (RW) 1: output clock divider enable 
                                     0: disable
    RG_BT0_AD_OUTPUT_EN[10]      - (RW) 1: output enable 
                                     0: output disable
    RG_BT0_AD_CK_OUT_RISE[11]    - (RW) 1: Output clock uses positive polarity
                                     0: Output clock uses negative polarity
    RG_BT0_AD_CH_DFF_RISE[12]    - (RW) 1: DFF sync clock uses positive polarity
                                     0: DFF sync clock uses negative polarity
    RG_BT0_AD_LDO_PUMP_ENB[13]   - (RW) 0: LDO pump enable
                                     1: LDO pump disable
    RG_BT0_AD_COMP_TAIL_MSB[14]  - (RW) 1: enlarge comparator tail transistor size for first 3 MSBs
                                     0: default size
    RG_BT0_AD_COMP_TAIL[15]      - (RW) 1: enlarge comparator tail transistor size
                                     0: default size
    RG_BT0_MODE_L1L5_SYNC_CLK[16] - (RW) 1: L1 and L5 dual band use external post-divider clock
                                     0: Internal (Always 0 for BT RX)
    RG_BT0_MODE_BT0_GPS[17]      - (RW) 1: BT Mode for CLK Selection (Always 1 for BT RX)
                                     0: GPS Mode for CLK Selection
    RG_BT0_AD_EXT_CLK_SEL[18]    - (RW) 1: External clock source
                                     0: Internal PLL as clock
    RG_BT0_AD_QCH_EN[19]         - (RW) 1: Q channel enable
                                     0: Q channel disable
    RG_BT0_AD_ICH_EN[20]         - (RW) 1: I channel enable
                                     0: I channel disable
    RG_BT0_AD_VAR_CLKS[21]       - (RW) 1: variable clks
                                     0: fixed clks
    RG_BT0_AD_LSB_EN[22]         - (RW) 1: 13bit cycles conversion
                                     0: 10 bit cycles conversion
    RG_BT0_AD_VGEN_PUMP_EN[23]   - (RW) 1: reference gen pump enable
                                     0: reference gen pump disable
    RG_BT0_AD_NS_EN[24]          - (RW) 1: noise shaping enable
                                     0: noise shaping disable
    RG_WBG_BT0_RX_01_RSV0[27..25] - (RW)  xxx 
    RG_BT0_ADCKSEL[28]           - (RW) ADC Clock Divider control
                                     0: BTADC normal mode clock=32MHz
                                     1: BTADC normal mode clock=64MHz
    RG_BT0_AD_REF_EN[29]         - (RW) 1: Enable reference gen
                                     0: Disable referenc gen
    RG_BT0_AD_EN[30]             - (RW) 1: Enable ADC
                                     0: Disable ADC
    RG_BT0_RG_DA_Mode[31]        - (RW) 1: RG Mode
                                     0: DA Mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_RG_DA_Mode_ADDR   CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_RG_DA_Mode_MASK   0x80000000                // RG_BT0_RG_DA_Mode[31]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_RG_DA_Mode_SHFT   31
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_EN_ADDR        CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_EN_MASK        0x40000000                // RG_BT0_AD_EN[30]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_EN_SHFT        30
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_REF_EN_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_REF_EN_MASK    0x20000000                // RG_BT0_AD_REF_EN[29]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_REF_EN_SHFT    29
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_ADCKSEL_ADDR      CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_ADCKSEL_MASK      0x10000000                // RG_BT0_ADCKSEL[28]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_ADCKSEL_SHFT      28
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_WBG_BT0_RX_01_RSV0_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_WBG_BT0_RX_01_RSV0_MASK 0x0E000000                // RG_WBG_BT0_RX_01_RSV0[27..25]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_WBG_BT0_RX_01_RSV0_SHFT 25
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_NS_EN_ADDR     CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_NS_EN_MASK     0x01000000                // RG_BT0_AD_NS_EN[24]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_NS_EN_SHFT     24
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VGEN_PUMP_EN_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VGEN_PUMP_EN_MASK 0x00800000                // RG_BT0_AD_VGEN_PUMP_EN[23]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VGEN_PUMP_EN_SHFT 23
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_LSB_EN_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_LSB_EN_MASK    0x00400000                // RG_BT0_AD_LSB_EN[22]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_LSB_EN_SHFT    22
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VAR_CLKS_ADDR  CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VAR_CLKS_MASK  0x00200000                // RG_BT0_AD_VAR_CLKS[21]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VAR_CLKS_SHFT  21
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_ICH_EN_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_ICH_EN_MASK    0x00100000                // RG_BT0_AD_ICH_EN[20]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_ICH_EN_SHFT    20
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_QCH_EN_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_QCH_EN_MASK    0x00080000                // RG_BT0_AD_QCH_EN[19]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_QCH_EN_SHFT    19
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_EXT_CLK_SEL_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_EXT_CLK_SEL_MASK 0x00040000                // RG_BT0_AD_EXT_CLK_SEL[18]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_EXT_CLK_SEL_SHFT 18
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_MODE_BT0_GPS_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_MODE_BT0_GPS_MASK 0x00020000                // RG_BT0_MODE_BT0_GPS[17]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_MODE_BT0_GPS_SHFT 17
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_MODE_L1L5_SYNC_CLK_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_MODE_L1L5_SYNC_CLK_MASK 0x00010000                // RG_BT0_MODE_L1L5_SYNC_CLK[16]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_MODE_L1L5_SYNC_CLK_SHFT 16
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_COMP_TAIL_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_COMP_TAIL_MASK 0x00008000                // RG_BT0_AD_COMP_TAIL[15]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_COMP_TAIL_SHFT 15
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_COMP_TAIL_MSB_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_COMP_TAIL_MSB_MASK 0x00004000                // RG_BT0_AD_COMP_TAIL_MSB[14]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_COMP_TAIL_MSB_SHFT 14
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_LDO_PUMP_ENB_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_LDO_PUMP_ENB_MASK 0x00002000                // RG_BT0_AD_LDO_PUMP_ENB[13]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_LDO_PUMP_ENB_SHFT 13
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_CH_DFF_RISE_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_CH_DFF_RISE_MASK 0x00001000                // RG_BT0_AD_CH_DFF_RISE[12]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_CH_DFF_RISE_SHFT 12
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_CK_OUT_RISE_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_CK_OUT_RISE_MASK 0x00000800                // RG_BT0_AD_CK_OUT_RISE[11]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_CK_OUT_RISE_SHFT 11
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_OUTPUT_EN_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_OUTPUT_EN_MASK 0x00000400                // RG_BT0_AD_OUTPUT_EN[10]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_OUTPUT_EN_SHFT 10
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_OUT_CLK_DIV_EN_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_OUT_CLK_DIV_EN_MASK 0x00000200                // RG_BT0_OUT_CLK_DIV_EN[9]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_OUT_CLK_DIV_EN_SHFT 9
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_OUT_CLK_DIV_H4_L2_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_OUT_CLK_DIV_H4_L2_MASK 0x00000100                // RG_BT0_OUT_CLK_DIV_H4_L2[8]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_OUT_CLK_DIV_H4_L2_SHFT 8
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_RAW_OUT_EN_ADDR   CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_RAW_OUT_EN_MASK   0x00000080                // RG_BT0_RAW_OUT_EN[7]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_RAW_OUT_EN_SHFT   7
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_DUODRI_ADDR       CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_DUODRI_MASK       0x00000040                // RG_BT0_DUODRI[6]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_DUODRI_SHFT       6
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VREF_SEL_ADDR  CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VREF_SEL_MASK  0x00000038                // RG_BT0_AD_VREF_SEL[5..3]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_AD_VREF_SEL_SHFT  3
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_LDO09_VSEL_ADDR   CONN_AFE_CTL_RG_WBG_BT0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_LDO09_VSEL_MASK   0x00000007                // RG_BT0_LDO09_VSEL[2..0]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_01_RG_BT0_LDO09_VSEL_SHFT   0

/* =====================================================================================

  ---RG_WBG_BT0_RX_02 (0x18041000 + 0x04C)---

    RG_WBG_BT0_RX_02_RSV1[5..0]  - (RW)  xxx 
    RG_BT0_PREON_MODE[6]         - (RW) 0: normal 
                                     1: Ref pre-on mode
    RG_BT0_RXDCOC[7]             - (RW) 0: normal 
                                     1: Short input PAD to VCM for RX_DCOC
    RG_BT0RX_TST_SEL[10..8]      - (RW) RX DC test
                                     000: MON_Buffer
                                     001: MON_AD
                                     Others: Not Used
    RG_BT0RX_TST_EN[11]          - (RW) 1: for RX DC monitor enable
                                     0: disable
    RG_BT0_BUF_TSTSEL[13..12]    - (RW) ADBUF DC test
                                     00: LDO_0P98
                                     01: NO_USED
                                     10: VCMREF
                                     11: NO_USED
    RG_BT0_BUF_TST_EN[14]        - (RW) 1: for ADBUF DC monitor enable
                                     0: disable
    RG_BT0_AD_IN_SEL[15]         - (RW) 0: Buffer output as ADC input
                                     1: PAD input as ADC input
    RG_BT0_BUF_EN[16]            - (RW) ADBUF on/off manual control
                                     0: ADBUF manual off
                                     1: ADBUF manual on
    RG_BT0_BUFEN_MAN[17]         - (RW) ADBUF on/off manual mode enable
                                     0: normal mode, control by DA
                                     1: manual mode, control by RG
    RG_WBG_BT0_RX_02_RSV0[20..18] - (RW)  xxx 
    RG_BT0_V098_LDO_VSEL[23..21] - (RW) 0.98V LDO tuning
                                     111: 1.04
                                     110: 1.02
                                     101: 0.999
                                     100: 0.98  (POR)
                                     011: 0.958
                                     010: 0.941
                                     001: 0.92
                                     000: 0.9
    RG_BT0_ADBUF_VCM[25..24]     - (RW) ADBUF output VCM
                                     11: 0.5V
                                     10: 0.55V
                                     01: 0.6V(POR)
                                     00: 0.65V
    RG_BT0_IGEN_SEL[27..26]      - (RW) RX Top bias current tuning
                                     11:  I5u=4.06u (0.8X)
                                     10: I5u=5.07u (1X, POR)
                                     01: I5u=6.75u (1.33X)
                                     00: I5u=10.1u (2X)
    RG_BT0_AD_TST_EN[28]         - (RW) 1: AD DC monitor enable 
                                     0: AD DC monitor disable
    RG_BT0_AD_TST_SEL[31..29]    - (RW) AD DC monitored voltage selection
                                     000:VR branch 1 full reference
                                     001: VR branch 1 half reference
                                     010: VR branch 2 full reference
                                     011: VR branch 2  half reference   
                                     100: LDO_0P9V

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_TST_SEL_ADDR   CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_TST_SEL_MASK   0xE0000000                // RG_BT0_AD_TST_SEL[31..29]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_TST_SEL_SHFT   29
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_TST_EN_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_TST_EN_MASK    0x10000000                // RG_BT0_AD_TST_EN[28]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_TST_EN_SHFT    28
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_IGEN_SEL_ADDR     CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_IGEN_SEL_MASK     0x0C000000                // RG_BT0_IGEN_SEL[27..26]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_IGEN_SEL_SHFT     26
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_ADBUF_VCM_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_ADBUF_VCM_MASK    0x03000000                // RG_BT0_ADBUF_VCM[25..24]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_ADBUF_VCM_SHFT    24
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_V098_LDO_VSEL_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_V098_LDO_VSEL_MASK 0x00E00000                // RG_BT0_V098_LDO_VSEL[23..21]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_V098_LDO_VSEL_SHFT 21
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_WBG_BT0_RX_02_RSV0_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_WBG_BT0_RX_02_RSV0_MASK 0x001C0000                // RG_WBG_BT0_RX_02_RSV0[20..18]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_WBG_BT0_RX_02_RSV0_SHFT 18
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUFEN_MAN_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUFEN_MAN_MASK    0x00020000                // RG_BT0_BUFEN_MAN[17]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUFEN_MAN_SHFT    17
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_EN_ADDR       CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_EN_MASK       0x00010000                // RG_BT0_BUF_EN[16]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_EN_SHFT       16
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_IN_SEL_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_IN_SEL_MASK    0x00008000                // RG_BT0_AD_IN_SEL[15]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_AD_IN_SEL_SHFT    15
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_TST_EN_ADDR   CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_TST_EN_MASK   0x00004000                // RG_BT0_BUF_TST_EN[14]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_TST_EN_SHFT   14
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_TSTSEL_ADDR   CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_TSTSEL_MASK   0x00003000                // RG_BT0_BUF_TSTSEL[13..12]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_BUF_TSTSEL_SHFT   12
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0RX_TST_EN_ADDR     CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0RX_TST_EN_MASK     0x00000800                // RG_BT0RX_TST_EN[11]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0RX_TST_EN_SHFT     11
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0RX_TST_SEL_ADDR    CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0RX_TST_SEL_MASK    0x00000700                // RG_BT0RX_TST_SEL[10..8]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0RX_TST_SEL_SHFT    8
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_RXDCOC_ADDR       CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_RXDCOC_MASK       0x00000080                // RG_BT0_RXDCOC[7]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_RXDCOC_SHFT       7
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_PREON_MODE_ADDR   CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_PREON_MODE_MASK   0x00000040                // RG_BT0_PREON_MODE[6]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_BT0_PREON_MODE_SHFT   6
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_WBG_BT0_RX_02_RSV1_ADDR CONN_AFE_CTL_RG_WBG_BT0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_WBG_BT0_RX_02_RSV1_MASK 0x0000003F                // RG_WBG_BT0_RX_02_RSV1[5..0]
#define CONN_AFE_CTL_RG_WBG_BT0_RX_02_RG_WBG_BT0_RX_02_RSV1_SHFT 0

/* =====================================================================================

  ---RG_WBG_BT0_TX_01 (0x18041000 + 0x050)---

    RG_BT0_BBTX_RSV01[0]         - (RW) none
    RG_BT0_EN_TEST[1]            - (RW) BTTX dc monitor switch enable
                                     0: disable
                                     1: enable
    RG_BT0_Es_manu_data_Q[12..2] - (RW) Selection for BBTX manully assigning calibration value:
    RG_BT0_Es_manu_en_Q[13]      - (RW) BBTX Q channel manully assign calibration value mode:
                                     0: disable
                                     1: enable
    RG_BT0_Es_manu_data_I[24..14] - (RW) Selection for BBTX manully assigning calibration value:
    RG_BT0_Es_manu_en_I[25]      - (RW) BBTX I channel manully assign calibration value mode:
                                     0: disable
                                     1: enable
    RG_BT0_Es_manu_sel_IQ[29..26] - (RW) Selection for BBTX manully assigning calibration value:
    RG_BT0_BBTX_RSV00[31..30]    - (RW) CALC sel

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_BBTX_RSV00_ADDR   CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_BBTX_RSV00_MASK   0xC0000000                // RG_BT0_BBTX_RSV00[31..30]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_BBTX_RSV00_SHFT   30
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_sel_IQ_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_sel_IQ_MASK 0x3C000000                // RG_BT0_Es_manu_sel_IQ[29..26]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_sel_IQ_SHFT 26
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_en_I_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_en_I_MASK 0x02000000                // RG_BT0_Es_manu_en_I[25]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_en_I_SHFT 25
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_data_I_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_data_I_MASK 0x01FFC000                // RG_BT0_Es_manu_data_I[24..14]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_data_I_SHFT 14
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_en_Q_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_en_Q_MASK 0x00002000                // RG_BT0_Es_manu_en_Q[13]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_en_Q_SHFT 13
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_data_Q_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_data_Q_MASK 0x00001FFC                // RG_BT0_Es_manu_data_Q[12..2]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_Es_manu_data_Q_SHFT 2
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_EN_TEST_ADDR      CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_EN_TEST_MASK      0x00000002                // RG_BT0_EN_TEST[1]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_EN_TEST_SHFT      1
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_BBTX_RSV01_ADDR   CONN_AFE_CTL_RG_WBG_BT0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_BBTX_RSV01_MASK   0x00000001                // RG_BT0_BBTX_RSV01[0]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_01_RG_BT0_BBTX_RSV01_SHFT   0

/* =====================================================================================

  ---RG_WBG_BT0_TX_02 (0x18041000 + 0x054)---

    RG_BT0_DATA_IQ[11..0]        - (RW) BBTX IQ DAC input DATA 12 bit
    RG_BT0_OS_Q_EXTRA[13..12]    - (RW) EXTRA bit for DCOS                                                                    11:+20mV                                                                           
                                     10:0mV                                                                                
                                     00:-20mV
    RG_BT0_OS_I_EXTRA[15..14]    - (RW) EXTRA bit for DCOS                                                                    11:+20mV                                                                
                                     10:0mV                                                                                
                                     00:-20mV
    RG_BT0_CAL_CLK_EN[16]        - (RW) 1: manual enable CAL CLK for Es readout debug
                                     0: CAL clk is controlled by CAL_EN
    RG_BT0_BBTX_RSV03[17]        - (RW) unused
    RG_BT0_DACOS_EN[18]          - (RW) 1:Nbias_DCOS_EN 
                                     0:PDAC=Nbias current
    RG_BT0_DATA_MAN[19]          - (RW) BBTX  DAC input manual mode
                                     0: RG_DATA manual mode disable.
                                         RG_DATA_IQ<11:5> are used as OS_ICH, 
                                         RG_OS_IQ<6:0> are used as OS_QCH    
                                        (OS_ICH/OS_QCH are spereated)
                                      
                                     1: RG_DATA manual mode enable:
                                         RG_DATA_IQ<11:0> are used as DATA bit manu
                                         (IQ share pin)
                                        RG_OS_IQ = OS_ICH = OS_QCH 
                                        (IQ share pin)
    RG_BT0_OS_MAN[20]            - (RW) BBTX OS DAC input manual mode
                                     0: OS manal mode disable 
                                         OS_ICH/OS_QCH are disabled
                                     1: OS manal mode enable
                                         OS_ICH/OS_QCH are enabled
    RG_BT0_CAL_EN[21]            - (RW) BBTX digital calibration macro manual enable signal
    RG_BT0_RSTB_CAL[22]          - (RW) BBTX digital calibration macro manual resetb signal
    RG_BT0_CAL_MAN[23]           - (RW) BBTX IQ DAC manual mode 
                                     enable
    RG_BT0_NP_SEL[26..24]        - (RW) BBTX DAC calibration point:
                                     000:64
                                     001:128
                                     010:256
                                     011:512
                                     100:1024
                                     101:2048
                                     else:512
    RG_BT0_DIN_SIGNED_EN[27]     - (RW) BBTX input data format
                                     1: unsinged code
                                     0: 2's compliment code
    RG_BT0_GAIN_CTRL[31..28]     - (RW) BBTX IQ DAC output swing adjustment
                                     00:0%
                                     01:0.65%
                                     10:0.91%
                                     11:1.52%

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_GAIN_CTRL_ADDR    CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_GAIN_CTRL_MASK    0xF0000000                // RG_BT0_GAIN_CTRL[31..28]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_GAIN_CTRL_SHFT    28
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DIN_SIGNED_EN_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DIN_SIGNED_EN_MASK 0x08000000                // RG_BT0_DIN_SIGNED_EN[27]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DIN_SIGNED_EN_SHFT 27
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_NP_SEL_ADDR       CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_NP_SEL_MASK       0x07000000                // RG_BT0_NP_SEL[26..24]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_NP_SEL_SHFT       24
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_MAN_ADDR      CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_MAN_MASK      0x00800000                // RG_BT0_CAL_MAN[23]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_MAN_SHFT      23
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_RSTB_CAL_ADDR     CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_RSTB_CAL_MASK     0x00400000                // RG_BT0_RSTB_CAL[22]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_RSTB_CAL_SHFT     22
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_EN_ADDR       CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_EN_MASK       0x00200000                // RG_BT0_CAL_EN[21]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_EN_SHFT       21
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_MAN_ADDR       CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_MAN_MASK       0x00100000                // RG_BT0_OS_MAN[20]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_MAN_SHFT       20
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DATA_MAN_ADDR     CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DATA_MAN_MASK     0x00080000                // RG_BT0_DATA_MAN[19]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DATA_MAN_SHFT     19
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DACOS_EN_ADDR     CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DACOS_EN_MASK     0x00040000                // RG_BT0_DACOS_EN[18]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DACOS_EN_SHFT     18
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_BBTX_RSV03_ADDR   CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_BBTX_RSV03_MASK   0x00020000                // RG_BT0_BBTX_RSV03[17]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_BBTX_RSV03_SHFT   17
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_CLK_EN_ADDR   CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_CLK_EN_MASK   0x00010000                // RG_BT0_CAL_CLK_EN[16]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_CAL_CLK_EN_SHFT   16
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_I_EXTRA_ADDR   CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_I_EXTRA_MASK   0x0000C000                // RG_BT0_OS_I_EXTRA[15..14]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_I_EXTRA_SHFT   14
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_Q_EXTRA_ADDR   CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_Q_EXTRA_MASK   0x00003000                // RG_BT0_OS_Q_EXTRA[13..12]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_OS_Q_EXTRA_SHFT   12
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DATA_IQ_ADDR      CONN_AFE_CTL_RG_WBG_BT0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DATA_IQ_MASK      0x00000FFF                // RG_BT0_DATA_IQ[11..0]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_02_RG_BT0_DATA_IQ_SHFT      0

/* =====================================================================================

  ---RG_WBG_BT0_TX_03 (0x18041000 + 0x058)---

    RG_BT0_BBTX_OPIB_WIFI[3..0]  - (RW) BTTX output V2I current setting
    RG_BT0_BBTX_OPIB_BT[7..4]    - (RW) BTTX output V2I current setting
    RG_BT0_WBG_CKREV_EN[8]       - (RW) Reverse clk phase of clk receiver
    RG_BT0_WBG_DA2XB[9]          - (RW) 1: P2S 2XB mode
                                     0: no P2S (single path DFF)
    RG_BT0_QREV_I[10]            - (RW) Invert the ploarity of quantizer output in I channel
                                     0: non-inverted
                                     1: inverted
    RG_BT0_QREV_Q[11]            - (RW) Invert the ploarity of quantizer output in Q channel
                                     0: non-inverted
                                     1: inverted
    RG_BT0_SWPAD_IQ[12]          - (RW) enable TEST SW between input and output of V2I buffer in I channel  combine IQ
    RG_BT0_RSV[13]               - (RW) reserved
    RG_BT0_BBTX_LDOLV_VGER[15..14] - (RW) BTTX LDOLV voltage adjustment:
                                     00: 0.8V
                                     01: 0.75V
                                     10: 0.9V
                                     11: 0.85V
    RG_BT0_BBTX_LDOLPF_VGER[17..16] - (RW) BTTX LDOLPF voltage adjustment:
                                     00: 1.5V
                                     01: 1.55V
                                     10: 1.6V
                                     11: 1.65V
    RG_BT0_BBTX_LDODAC_VGER[19..18] - (RW) BTTX LDODAC voltage adjustment:
                                     00: 1.5V
                                     01: 1.55V
                                     10: 1.6V
                                     11: 1.65V
    RG_BT0_BBTX_REF_VGER[21..20] - (RW) BTTX V2I reference voltage
                                     00: 800mV
                                     01: 795mV
                                     10: 790mV
                                     11: 785mV
    RG_BT0_BBTX_VCM_VGER[25..22] - (RW) BTTX dc output common mode adjustment:
                                     0000: 600mV
                                     0001: 620mV
                                     0010: 630mV
                                     0011: 640mV
                                     0100: 650mV
                                     0101: 660mV
                                     0110: 670mV
                                     0111: 680mV 
                                     1000: 540mV
                                     1001: 560mV
                                     1010: 580mV
    RG_BT0_CAL_FB_CMPEN[26]      - (RW) 1: Enable 8A/8B SDM feedback loop from analog comparator 
                                     0: 8A/8B controlled by digital macro
    RG_BT0_BTMAP_INV_EN[27]      - (RW) BTMAP REVERSE in P2S macro
                                     0: use DA_WBG_WB_MODE
                                     1: reverse DA_WBG_WB_MODE
    RG_BT0_DIV2_EN[28]           - (RW) P2S DIV2 EN
                                     1: ENABLE P2S local divider
                                     0: use clk_div2 clock from TOP 2x2 or 4x4 case
    RG_BT0_BBTX_EXTCLK_EN[29]    - (RW) BBTX  external clock ENABLE:
                                     0: disable
                                     1: enable
    RG_BT0_CKAC_EN[30]           - (RW) CK RCV AC couple enable:
                                     1: enable ac couple
                                     0: disable ac couple use dc path ( test mode only)
    RG_BT0_COR_EN_WB_IQ[31]      - (RW) BTTX I/Q channel correction code enable:
                                     1: enable
                                     0: disable

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_COR_EN_WB_IQ_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_COR_EN_WB_IQ_MASK 0x80000000                // RG_BT0_COR_EN_WB_IQ[31]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_COR_EN_WB_IQ_SHFT 31
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_CKAC_EN_ADDR      CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_CKAC_EN_MASK      0x40000000                // RG_BT0_CKAC_EN[30]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_CKAC_EN_SHFT      30
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_EXTCLK_EN_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_EXTCLK_EN_MASK 0x20000000                // RG_BT0_BBTX_EXTCLK_EN[29]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_EXTCLK_EN_SHFT 29
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_DIV2_EN_ADDR      CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_DIV2_EN_MASK      0x10000000                // RG_BT0_DIV2_EN[28]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_DIV2_EN_SHFT      28
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BTMAP_INV_EN_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BTMAP_INV_EN_MASK 0x08000000                // RG_BT0_BTMAP_INV_EN[27]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BTMAP_INV_EN_SHFT 27
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_CAL_FB_CMPEN_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_CAL_FB_CMPEN_MASK 0x04000000                // RG_BT0_CAL_FB_CMPEN[26]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_CAL_FB_CMPEN_SHFT 26
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_VCM_VGER_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_VCM_VGER_MASK 0x03C00000                // RG_BT0_BBTX_VCM_VGER[25..22]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_VCM_VGER_SHFT 22
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_REF_VGER_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_REF_VGER_MASK 0x00300000                // RG_BT0_BBTX_REF_VGER[21..20]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_REF_VGER_SHFT 20
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDODAC_VGER_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDODAC_VGER_MASK 0x000C0000                // RG_BT0_BBTX_LDODAC_VGER[19..18]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDODAC_VGER_SHFT 18
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDOLPF_VGER_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDOLPF_VGER_MASK 0x00030000                // RG_BT0_BBTX_LDOLPF_VGER[17..16]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDOLPF_VGER_SHFT 16
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDOLV_VGER_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDOLV_VGER_MASK 0x0000C000                // RG_BT0_BBTX_LDOLV_VGER[15..14]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_LDOLV_VGER_SHFT 14
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_RSV_ADDR          CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_RSV_MASK          0x00002000                // RG_BT0_RSV[13]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_RSV_SHFT          13
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_SWPAD_IQ_ADDR     CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_SWPAD_IQ_MASK     0x00001000                // RG_BT0_SWPAD_IQ[12]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_SWPAD_IQ_SHFT     12
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_QREV_Q_ADDR       CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_QREV_Q_MASK       0x00000800                // RG_BT0_QREV_Q[11]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_QREV_Q_SHFT       11
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_QREV_I_ADDR       CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_QREV_I_MASK       0x00000400                // RG_BT0_QREV_I[10]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_QREV_I_SHFT       10
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_WBG_DA2XB_ADDR    CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_WBG_DA2XB_MASK    0x00000200                // RG_BT0_WBG_DA2XB[9]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_WBG_DA2XB_SHFT    9
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_WBG_CKREV_EN_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_WBG_CKREV_EN_MASK 0x00000100                // RG_BT0_WBG_CKREV_EN[8]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_WBG_CKREV_EN_SHFT 8
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_OPIB_BT_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_OPIB_BT_MASK 0x000000F0                // RG_BT0_BBTX_OPIB_BT[7..4]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_OPIB_BT_SHFT 4
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_OPIB_WIFI_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_OPIB_WIFI_MASK 0x0000000F                // RG_BT0_BBTX_OPIB_WIFI[3..0]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_03_RG_BT0_BBTX_OPIB_WIFI_SHFT 0

/* =====================================================================================

  ---RG_WBG_BT0_TX_04 (0x18041000 + 0x05C)---

    RG_BT0_BBTX_CLK_CAL_WF[1..0] - (RW) BTTX calibration clock rate:
                                     00: 0
                                     01: 960M/4
                                     10: 960M/8
                                     11: 960M/16
    RG_BT0_BBTX_CLK_CAL_BT[3..2] - (RW) BTTX calibration clock rate:
                                     00: 0
                                     01: 832M/4
                                     10: 832M/8
                                     11: 832M/16
    RG_BT0_BBTX_SEQ_RSV[15..4]   - (RW) BTTX power-on sequence manual mode control signal
                                     bit[0]: da_bbtx_LDO15_en_vk10
                                     bit[1]: da_bbtx_I_dac_en
                                     bit[2]: da_bbtx_Q_dac_en
                                     bit[3]: da_bbtx_I_lpf_en
                                     bit[4]: da_bbtx_Q_lpf_en
                                     bit[5]: da_bbtx_I_clk_en
                                     bit[6]: da_bbtx_Q_clk_en
                                     bit[7]: da_fast_charge_en
                                     bit[8]: da_bbtx_rst_b
                                     bit[9]: da_bbtx_seq_rsv
                                     bit[11:10]: no use
    RG_BT0_FAST_EN_DELAY[17..16] - (RW) config fast_charge_en delay time, default=16T, 1T=1/26MHz:
                                     00:8T
                                     01:16T
                                     10:24T
                                     11:32T
    RG_BT0_CAL_EN_DELAY[19..18]  - (RW) config cal_en delay time, default=64T, 1T=1/26MHz:
                                     00:32T
                                     01:64T
                                     10:96T
                                     11:128T
    RG_BT0_BBTX_TEST_SEL[23..20] - (RW) BBTX monitor signal selection:
                                     0000: LDO_LPF_V15
                                     0001: AVDD09_CK
                                     0010: ITEST(8.2uA)
                                     0011: VCM(650mV)
                                     0100: PAD_WB_TXIP
                                     0101: PAD_WB_TXIN
                                     0110: PAD_WB_TXQP
                                     0111: PAD_WB_TXQN
                                     1000: LDO_DAC_V15
                                     1001: FB_res_msb
                                     1010: FB_res_lsb
                                     1011: test(unused)
                                     other:none
    RG_BT0_BBTX_SEQ_CFG[31..24]  - (RW) BTTX power-on sequence control signal
                                     bit[4:3]=00: counter time unit=1T(1/26M)
                                     bit[4:3]=01: counter time unit=2T(2/26M)
                                     bit[4:3]=10: counter time unit=4T(4/26M)
                                     bit[4:3]=11: counter time unit=8T(8/26M)
                                     bit[5]=0: disable manual mode (contorlled by RG_BBTX_SEQ_RSV)
                                     bit[5]=1: enable manual mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_SEQ_CFG_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_SEQ_CFG_MASK 0xFF000000                // RG_BT0_BBTX_SEQ_CFG[31..24]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_SEQ_CFG_SHFT 24
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_TEST_SEL_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_TEST_SEL_MASK 0x00F00000                // RG_BT0_BBTX_TEST_SEL[23..20]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_TEST_SEL_SHFT 20
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_CAL_EN_DELAY_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_CAL_EN_DELAY_MASK 0x000C0000                // RG_BT0_CAL_EN_DELAY[19..18]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_CAL_EN_DELAY_SHFT 18
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_FAST_EN_DELAY_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_FAST_EN_DELAY_MASK 0x00030000                // RG_BT0_FAST_EN_DELAY[17..16]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_FAST_EN_DELAY_SHFT 16
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_SEQ_RSV_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_SEQ_RSV_MASK 0x0000FFF0                // RG_BT0_BBTX_SEQ_RSV[15..4]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_SEQ_RSV_SHFT 4
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_CLK_CAL_BT_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_CLK_CAL_BT_MASK 0x0000000C                // RG_BT0_BBTX_CLK_CAL_BT[3..2]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_CLK_CAL_BT_SHFT 2
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_CLK_CAL_WF_ADDR CONN_AFE_CTL_RG_WBG_BT0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_CLK_CAL_WF_MASK 0x00000003                // RG_BT0_BBTX_CLK_CAL_WF[1..0]
#define CONN_AFE_CTL_RG_WBG_BT0_TX_04_RG_BT0_BBTX_CLK_CAL_WF_SHFT 0

/* =====================================================================================

  ---RGS_WBG_BT0_TXCAL (0x18041000 + 0x060)---

    RGS_BT0_Es_readout_I_RO[11..0] - (RO) BTTX I channel MSB error sorce readout bit
    RGS_BT0_Es_overflow_I_RO[12] - (RO) BTTX I channel overflow flag
    RGS_BT0_cal_done_I_RO[13]    - (RO) BTTX I channel calibraton done flag
    RGS_BT0_WBG_WF_TXCAL_I_RO[15..14] - (RO) None
    RGS_BT0_Es_readout_Q_RO[27..16] - (RO) BTTX Q channel MSB error sorce readout bit
    RGS_BT0_Es_overflow_Q_RO[28] - (RO) BTTX Q channel overflow flag
    RGS_BT0_cal_done_Q_RO[29]    - (RO) BTTX Q channel calibraton done flag
    RGS_BT0_WBG_WF_TXCAL_Q_RO[31..30] - (RO) None

 =====================================================================================*/
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_WBG_WF_TXCAL_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_WBG_WF_TXCAL_Q_RO_MASK 0xC0000000                // RGS_BT0_WBG_WF_TXCAL_Q_RO[31..30]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_WBG_WF_TXCAL_Q_RO_SHFT 30
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_cal_done_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_cal_done_Q_RO_MASK 0x20000000                // RGS_BT0_cal_done_Q_RO[29]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_cal_done_Q_RO_SHFT 29
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_overflow_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_overflow_Q_RO_MASK 0x10000000                // RGS_BT0_Es_overflow_Q_RO[28]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_overflow_Q_RO_SHFT 28
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_readout_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_readout_Q_RO_MASK 0x0FFF0000                // RGS_BT0_Es_readout_Q_RO[27..16]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_readout_Q_RO_SHFT 16
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_WBG_WF_TXCAL_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_WBG_WF_TXCAL_I_RO_MASK 0x0000C000                // RGS_BT0_WBG_WF_TXCAL_I_RO[15..14]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_WBG_WF_TXCAL_I_RO_SHFT 14
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_cal_done_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_cal_done_I_RO_MASK 0x00002000                // RGS_BT0_cal_done_I_RO[13]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_cal_done_I_RO_SHFT 13
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_overflow_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_overflow_I_RO_MASK 0x00001000                // RGS_BT0_Es_overflow_I_RO[12]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_overflow_I_RO_SHFT 12
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_readout_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_readout_I_RO_MASK 0x00000FFF                // RGS_BT0_Es_readout_I_RO[11..0]
#define CONN_AFE_CTL_RGS_WBG_BT0_TXCAL_RGS_BT0_Es_readout_I_RO_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF0_RX_01 (0x18041000 + 0x068)---

    RG_WF0_AD_LDO09_VSEL[2..0]   - (RW) 0.95V LDO tuning
                                     111: 1.015
                                     110: 0.993
                                     101: 0.967
                                     100: 0.945 
                                     011: 0.918 (POR)
                                     010: 0.896
                                     001: 0.871
                                     000: 0.849
    RG_WF0_AD_VREF_SEL[5..3]     - (RW) VREF selection
                                     111: 1.014
                                     110: 0.995
                                     101: 0.971
                                     100: 0.952
                                     011: 0.922
                                     010: 0.903 (POR)
                                     001: 0.880
                                     000: 0.861
    RG_WF0_DUODRI[6]             - (RW) 1: reference gen doubled current
                                     0: reference gen normal current
    RG_WF0_RAW_OUT_EN[7]         - (RW) 1: Raw data out
                                     0: Normal data out
    RG_WF0_OUT_CLK_DIV_H4_L2[8]  - (RW) 1: output clock divided by 4
                                     0: output clock divided by 2
    RG_WF0_OUT_CLK_DIV_EN[9]     - (RW) 1: output clock divider enable 
                                     0: disable
    RG_WF0_AD_OUTPUT_EN[10]      - (RW) 1: output enable 
                                     0: output disable
    RG_WF0_AD_CK_OUT_RISE[11]    - (RW) 1: Output clock uses positive polarity
                                     0: Output clock uses negative polarity
    RG_WF0_AD_CH_DFF_RISE[12]    - (RW) 1: DFF sync clock uses positive polarity
                                     0: DFF sync clock uses negative polarity
    RG_WF0_AD_LDO_PUMP_EN[13]    - (RW) 1: LDO pump enable
                                     0: LDO pump disable
    RG_WF0_AD_COMP_TAIL_MSB[14]  - (RW) 1: enlarge comparator tail transistor size for first 3 MSBs
                                     0: default size
    RG_WF0_AD_COMP_TAIL[15]      - (RW) 1: enlarge comparator tail transistor size
                                     0: default size
    RG_WF0_AD_CK_DUTY[17..16]    - (RW) 11: - 600 ps
                                     10: - 450 ps
                                     01: - 400 ps
                                     00:  - 200 ps
    RG_WF0_AD_EXT_CLK_SEL[18]    - (RW) 1: External clock source
                                     0: Internal PLL as clock
    RG_WF0_AD_QCH_EN[19]         - (RW) 1: Q channel enable
                                     0: Q channel disable
    RG_WF0_AD_ICH_EN[20]         - (RW) 1: I channel enable
                                     0: I channel disable
    RG_WF0_AD_VAR_CLKS[21]       - (RW) 1: variable clks
                                     0: fixed clks
    RG_WF0_AD_LSB_EN[22]         - (RW) 1: 13bit cycles conversion
                                     0: 10 bit cycles conversion
    RG_WF0_AD_VGEN_PUMP_EN[23]   - (RW) 1: reference gen pump enable
                                     0: reference gen pump disable
    RG_WF0_AD_NS_EN[24]          - (RW) 1: noise shaping enable
                                     0: noise shaping disable
    RG_WF0_ADCKSEL[27..25]       - (RW) 100: div by 1 (320MHz)
                                     010: div by 2 (160MHz)
                                     001: div by 4 (80MHz)
    RG_WF0_CKO_EN[28]            - (RW) 1: Enable clock 
                                     0: Disable clock
    RG_WF0_AD_REF_EN[29]         - (RW) 1: Enable reference gen
                                     0: Disable referenc gen
    RG_WF0_AD_EN[30]             - (RW) 1: Enable ADC
                                     0: Disable ADC
    RG_WF0_RG_DA_Mode[31]        - (RW) 1: RG Mode
                                     0: DA Mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_RG_DA_Mode_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_RG_DA_Mode_MASK   0x80000000                // RG_WF0_RG_DA_Mode[31]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_RG_DA_Mode_SHFT   31
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_EN_ADDR        CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_EN_MASK        0x40000000                // RG_WF0_AD_EN[30]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_EN_SHFT        30
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_REF_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_REF_EN_MASK    0x20000000                // RG_WF0_AD_REF_EN[29]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_REF_EN_SHFT    29
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_CKO_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_CKO_EN_MASK       0x10000000                // RG_WF0_CKO_EN[28]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_CKO_EN_SHFT       28
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_ADCKSEL_ADDR      CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_ADCKSEL_MASK      0x0E000000                // RG_WF0_ADCKSEL[27..25]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_ADCKSEL_SHFT      25
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_NS_EN_ADDR     CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_NS_EN_MASK     0x01000000                // RG_WF0_AD_NS_EN[24]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_NS_EN_SHFT     24
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VGEN_PUMP_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VGEN_PUMP_EN_MASK 0x00800000                // RG_WF0_AD_VGEN_PUMP_EN[23]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VGEN_PUMP_EN_SHFT 23
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LSB_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LSB_EN_MASK    0x00400000                // RG_WF0_AD_LSB_EN[22]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LSB_EN_SHFT    22
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VAR_CLKS_ADDR  CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VAR_CLKS_MASK  0x00200000                // RG_WF0_AD_VAR_CLKS[21]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VAR_CLKS_SHFT  21
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_ICH_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_ICH_EN_MASK    0x00100000                // RG_WF0_AD_ICH_EN[20]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_ICH_EN_SHFT    20
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_QCH_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_QCH_EN_MASK    0x00080000                // RG_WF0_AD_QCH_EN[19]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_QCH_EN_SHFT    19
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_EXT_CLK_SEL_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_EXT_CLK_SEL_MASK 0x00040000                // RG_WF0_AD_EXT_CLK_SEL[18]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_EXT_CLK_SEL_SHFT 18
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CK_DUTY_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CK_DUTY_MASK   0x00030000                // RG_WF0_AD_CK_DUTY[17..16]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CK_DUTY_SHFT   16
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_COMP_TAIL_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_COMP_TAIL_MASK 0x00008000                // RG_WF0_AD_COMP_TAIL[15]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_COMP_TAIL_SHFT 15
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_COMP_TAIL_MSB_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_COMP_TAIL_MSB_MASK 0x00004000                // RG_WF0_AD_COMP_TAIL_MSB[14]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_COMP_TAIL_MSB_SHFT 14
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LDO_PUMP_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LDO_PUMP_EN_MASK 0x00002000                // RG_WF0_AD_LDO_PUMP_EN[13]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LDO_PUMP_EN_SHFT 13
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CH_DFF_RISE_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CH_DFF_RISE_MASK 0x00001000                // RG_WF0_AD_CH_DFF_RISE[12]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CH_DFF_RISE_SHFT 12
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CK_OUT_RISE_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CK_OUT_RISE_MASK 0x00000800                // RG_WF0_AD_CK_OUT_RISE[11]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_CK_OUT_RISE_SHFT 11
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_OUTPUT_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_OUTPUT_EN_MASK 0x00000400                // RG_WF0_AD_OUTPUT_EN[10]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_OUTPUT_EN_SHFT 10
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_OUT_CLK_DIV_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_OUT_CLK_DIV_EN_MASK 0x00000200                // RG_WF0_OUT_CLK_DIV_EN[9]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_OUT_CLK_DIV_EN_SHFT 9
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_OUT_CLK_DIV_H4_L2_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_OUT_CLK_DIV_H4_L2_MASK 0x00000100                // RG_WF0_OUT_CLK_DIV_H4_L2[8]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_OUT_CLK_DIV_H4_L2_SHFT 8
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_RAW_OUT_EN_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_RAW_OUT_EN_MASK   0x00000080                // RG_WF0_RAW_OUT_EN[7]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_RAW_OUT_EN_SHFT   7
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_DUODRI_ADDR       CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_DUODRI_MASK       0x00000040                // RG_WF0_DUODRI[6]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_DUODRI_SHFT       6
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VREF_SEL_ADDR  CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VREF_SEL_MASK  0x00000038                // RG_WF0_AD_VREF_SEL[5..3]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_VREF_SEL_SHFT  3
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LDO09_VSEL_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LDO09_VSEL_MASK 0x00000007                // RG_WF0_AD_LDO09_VSEL[2..0]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_01_RG_WF0_AD_LDO09_VSEL_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF0_RX_02 (0x18041000 + 0x06C)---

    RG_WBG_WF0_CKO_INV_EN[0]     - (RW) inverse NS_CK_WFTX_SYNC phase of WFRX sync stage
                                     0: original phase
                                     1: inverse phase
    RG_WBG_WF0_RX_02_RSV0[5..1]  - (RW) to be updated
    RG_WF0_PREON_MODE[6]         - (RW) 0: normal 
                                     1: Ref pre-on mode
    RG_WF0_BUFF_DYM_BIAS[7]      - (RW) 0: normal 
                                     1: dynamic bias for buffer @ 160 MS/s
    RG_WF0_RX_TST_SEL[10..8]     - (RW) RX DC test
                                     000: MON_Buffer
                                     001: MON_AD
                                     Others: Not Used
    RG_WF0_RX_TST_EN[11]         - (RW) 1: for RX DC monitor enable
                                     0: disable
    RG_WF0_BUF_TSTSEL[13..12]    - (RW) ADBUF DC test
                                     00: LDO_0P98
                                     01: LDO_1P55
                                     10: VCMREF
                                     11: NO_USED
    RG_WF0_BUF_TST_EN[14]        - (RW) 1: for ADBUF DC monitor enable
                                     0: disable
    RG_WF0_AD_IN_SEL[15]         - (RW) 0: Buffer output as ADC input
                                     1: PAD input as ADC input
    RG_WF0_BUF_EN[16]            - (RW) ADBUF on/off manual control
                                     0: ADBUF manual off
                                     1: ADBUF manual on
    RG_WF0_BUFEN_MAN[17]         - (RW) ADBUF on/off manual mode enable
                                     0: normal mode, control by DA
                                     1: manual mode, control by RG
    RG_WF0_V155_LDO_VSEL[20..18] - (RW) 1.55V LDO tuning
                                     111: 1.63
                                     110: 1.6
                                     101: 1.58
                                     100: 1.55 (POR)
                                     011: 1.53
                                     010: 1.5 
                                     001: 1.48
                                     000: 1.45
    RG_WF0_V098_LDO_VSEL[23..21] - (RW) 0.98V LDO tuning
                                     111: 1.04
                                     110: 1.02
                                     101: 0.999
                                     100: 0.98  (POR)
                                     011: 0.958
                                     010: 0.941
                                     001: 0.92
                                     000: 0.9
    RG_WF0_ADBUF_VCM[25..24]     - (RW) ADBUF output VCM
                                     11: 0.5V
                                     10: 0.55V(POR)
                                     01: 0.6V
                                     00: 0.65V
    RG_WF0_IGEN_SEL[27..26]      - (RW) RX Top bias current tuning
                                     11:  I5u=4.06u (0.8X)
                                     10: I5u=5.07u (1X, POR)
                                     01: I5u=6.75u (1.33X)
                                     00: I5u=10.1u (2X)
    RG_WF0_AD_TST_EN[28]         - (RW) 1: AD DC monitor enable 
                                     0: AD DC monitor disable
    RG_WF0_AD_TST_SEL[31..29]    - (RW) AD DC monitored voltage selection
                                     000:VR branch 1 full reference
                                     001: VR branch 1 half reference
                                     010: VR branch 2 full reference
                                     011: VR branch 2  half reference   
                                     100: LDO_0P9V

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_TST_SEL_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_TST_SEL_MASK   0xE0000000                // RG_WF0_AD_TST_SEL[31..29]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_TST_SEL_SHFT   29
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_TST_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_TST_EN_MASK    0x10000000                // RG_WF0_AD_TST_EN[28]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_TST_EN_SHFT    28
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_IGEN_SEL_ADDR     CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_IGEN_SEL_MASK     0x0C000000                // RG_WF0_IGEN_SEL[27..26]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_IGEN_SEL_SHFT     26
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_ADBUF_VCM_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_ADBUF_VCM_MASK    0x03000000                // RG_WF0_ADBUF_VCM[25..24]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_ADBUF_VCM_SHFT    24
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_V098_LDO_VSEL_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_V098_LDO_VSEL_MASK 0x00E00000                // RG_WF0_V098_LDO_VSEL[23..21]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_V098_LDO_VSEL_SHFT 21
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_V155_LDO_VSEL_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_V155_LDO_VSEL_MASK 0x001C0000                // RG_WF0_V155_LDO_VSEL[20..18]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_V155_LDO_VSEL_SHFT 18
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUFEN_MAN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUFEN_MAN_MASK    0x00020000                // RG_WF0_BUFEN_MAN[17]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUFEN_MAN_SHFT    17
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_EN_MASK       0x00010000                // RG_WF0_BUF_EN[16]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_EN_SHFT       16
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_IN_SEL_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_IN_SEL_MASK    0x00008000                // RG_WF0_AD_IN_SEL[15]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_AD_IN_SEL_SHFT    15
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_TST_EN_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_TST_EN_MASK   0x00004000                // RG_WF0_BUF_TST_EN[14]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_TST_EN_SHFT   14
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_TSTSEL_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_TSTSEL_MASK   0x00003000                // RG_WF0_BUF_TSTSEL[13..12]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUF_TSTSEL_SHFT   12
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_RX_TST_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_RX_TST_EN_MASK    0x00000800                // RG_WF0_RX_TST_EN[11]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_RX_TST_EN_SHFT    11
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_RX_TST_SEL_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_RX_TST_SEL_MASK   0x00000700                // RG_WF0_RX_TST_SEL[10..8]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_RX_TST_SEL_SHFT   8
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUFF_DYM_BIAS_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUFF_DYM_BIAS_MASK 0x00000080                // RG_WF0_BUFF_DYM_BIAS[7]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_BUFF_DYM_BIAS_SHFT 7
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_PREON_MODE_ADDR   CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_PREON_MODE_MASK   0x00000040                // RG_WF0_PREON_MODE[6]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WF0_PREON_MODE_SHFT   6
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WBG_WF0_RX_02_RSV0_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WBG_WF0_RX_02_RSV0_MASK 0x0000003E                // RG_WBG_WF0_RX_02_RSV0[5..1]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WBG_WF0_RX_02_RSV0_SHFT 1
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WBG_WF0_CKO_INV_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WBG_WF0_CKO_INV_EN_MASK 0x00000001                // RG_WBG_WF0_CKO_INV_EN[0]
#define CONN_AFE_CTL_RG_WBG_WF0_RX_02_RG_WBG_WF0_CKO_INV_EN_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF0_TX_01 (0x18041000 + 0x070)---

    RG_W0_WBG_TX_CKINV_EN[0]     - (RW) inverse NS_CK_WFTX_SYNC phase of WFTX sync stage
                                     0: original phase
                                     1: inverse phase
    RG_W0_EN_TEST[1]             - (RW) WFTX dc monitor switch enable
                                     0: disable
                                     1: enable
    RG_W0_Es_manu_data_Q[12..2]  - (RW) Selection for BBTX manully assigning calibration value:
    RG_W0_Es_manu_en_Q[13]       - (RW) BBTX Q channel manully assign calibration value mode:
                                     0: disable
                                     1: enable
    RG_W0_Es_manu_data_I[24..14] - (RW) Selection for BBTX manully assigning calibration value:
    RG_W0_Es_manu_en_I[25]       - (RW) BBTX I channel manully assign calibration value mode:
                                     0: disable
                                     1: enable
    RG_W0_Es_manu_sel_IQ[29..26] - (RW) Selection for BBTX manully assigning calibration value:
    RG_W0_BBTX_RSV00[31..30]     - (RW) CALC sel

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_BBTX_RSV00_ADDR    CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_BBTX_RSV00_MASK    0xC0000000                // RG_W0_BBTX_RSV00[31..30]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_BBTX_RSV00_SHFT    30
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_sel_IQ_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_sel_IQ_MASK 0x3C000000                // RG_W0_Es_manu_sel_IQ[29..26]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_sel_IQ_SHFT 26
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_en_I_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_en_I_MASK  0x02000000                // RG_W0_Es_manu_en_I[25]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_en_I_SHFT  25
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_data_I_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_data_I_MASK 0x01FFC000                // RG_W0_Es_manu_data_I[24..14]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_data_I_SHFT 14
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_en_Q_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_en_Q_MASK  0x00002000                // RG_W0_Es_manu_en_Q[13]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_en_Q_SHFT  13
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_data_Q_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_data_Q_MASK 0x00001FFC                // RG_W0_Es_manu_data_Q[12..2]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_Es_manu_data_Q_SHFT 2
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_EN_TEST_ADDR       CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_EN_TEST_MASK       0x00000002                // RG_W0_EN_TEST[1]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_EN_TEST_SHFT       1
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_WBG_TX_CKINV_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_WBG_TX_CKINV_EN_MASK 0x00000001                // RG_W0_WBG_TX_CKINV_EN[0]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_01_RG_W0_WBG_TX_CKINV_EN_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF0_TX_02 (0x18041000 + 0x074)---

    RG_W0_DATA_IQ[11..0]         - (RW) BBTX IQ DAC input DATA 12 bit
    RG_W0_OS_Q_EXTRA[13..12]     - (RW) EXTRA bit for DCOS                                                                    11:+20mV                                                                           
                                     10:0mV                                                                                
                                     00:-20mV
    RG_W0_OS_I_EXTRA[15..14]     - (RW) EXTRA bit for DCOS                                                                    11:+20mV                                                                
                                     10:0mV                                                                                
                                     00:-20mV
    RG_W0_CAL_CLK_EN[16]         - (RW) 1: manual enable CAL CLK for Es readout debug
                                     0: CAL clk is controlled by CAL_EN
    RG_W0_BBTX_RSV03[17]         - (RW) unused
    RG_W0_DACOS_EN[18]           - (RW) 1:Nbias_DCOS_EN 
                                     0:PDAC=Nbias current
    RG_W0_DATA_MAN[19]           - (RW) BBTX  DAC input manual mode
                                     0: RG_DATA manual mode disable.
                                         RG_DATA_IQ<11:5> are used as OS_ICH, 
                                         RG_OS_IQ<6:0> are used as OS_QCH    
                                        (OS_ICH/OS_QCH are spereated)
                                      
                                     1: RG_DATA manual mode enable:
                                         RG_DATA_IQ<11:0> are used as DATA bit manu
                                         (IQ share pin)
                                        RG_OS_IQ = OS_ICH = OS_QCH 
                                        (IQ share pin)
    RG_W0_WF480CK_EN[20]         - (RW) WBG 480 CLK for 2x2 4x4 enable
                                     0: 480MHz clk disable   
                                     1: 480MHz clk enable
    RG_W0_CAL_EN[21]             - (RW) BBTX digital calibration macro manual enable signal
    RG_W0_RSTB_CAL[22]           - (RW) BBTX digital calibration macro manual resetb signal
    RG_W0_CAL_MAN[23]            - (RW) BBTX IQ DAC manual mode 
                                     enable
    RG_W0_NP_SEL[26..24]         - (RW) BBTX DAC calibration point:
                                     000:64
                                     001:128
                                     010:256
                                     011:512
                                     100:1024
                                     101:2048
                                     else:512
    RG_W0_DIN_SIGNED_EN[27]      - (RW) BBTX input data format
                                     1: unsinged code
                                     0: 2's compliment code
    RG_W0_GAIN_CTRL[31..28]      - (RW) BBTX IQ DAC output swing adjustment
                                     00:0%
                                     01:0.65%
                                     10:0.91%
                                     11:1.52%

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_GAIN_CTRL_ADDR     CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_GAIN_CTRL_MASK     0xF0000000                // RG_W0_GAIN_CTRL[31..28]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_GAIN_CTRL_SHFT     28
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DIN_SIGNED_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DIN_SIGNED_EN_MASK 0x08000000                // RG_W0_DIN_SIGNED_EN[27]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DIN_SIGNED_EN_SHFT 27
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_NP_SEL_ADDR        CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_NP_SEL_MASK        0x07000000                // RG_W0_NP_SEL[26..24]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_NP_SEL_SHFT        24
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_MAN_ADDR       CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_MAN_MASK       0x00800000                // RG_W0_CAL_MAN[23]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_MAN_SHFT       23
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_RSTB_CAL_ADDR      CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_RSTB_CAL_MASK      0x00400000                // RG_W0_RSTB_CAL[22]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_RSTB_CAL_SHFT      22
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_EN_ADDR        CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_EN_MASK        0x00200000                // RG_W0_CAL_EN[21]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_EN_SHFT        21
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_WF480CK_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_WF480CK_EN_MASK    0x00100000                // RG_W0_WF480CK_EN[20]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_WF480CK_EN_SHFT    20
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DATA_MAN_ADDR      CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DATA_MAN_MASK      0x00080000                // RG_W0_DATA_MAN[19]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DATA_MAN_SHFT      19
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DACOS_EN_ADDR      CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DACOS_EN_MASK      0x00040000                // RG_W0_DACOS_EN[18]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DACOS_EN_SHFT      18
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_BBTX_RSV03_ADDR    CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_BBTX_RSV03_MASK    0x00020000                // RG_W0_BBTX_RSV03[17]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_BBTX_RSV03_SHFT    17
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_CLK_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_CLK_EN_MASK    0x00010000                // RG_W0_CAL_CLK_EN[16]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_CAL_CLK_EN_SHFT    16
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_OS_I_EXTRA_ADDR    CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_OS_I_EXTRA_MASK    0x0000C000                // RG_W0_OS_I_EXTRA[15..14]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_OS_I_EXTRA_SHFT    14
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_OS_Q_EXTRA_ADDR    CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_OS_Q_EXTRA_MASK    0x00003000                // RG_W0_OS_Q_EXTRA[13..12]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_OS_Q_EXTRA_SHFT    12
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DATA_IQ_ADDR       CONN_AFE_CTL_RG_WBG_WF0_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DATA_IQ_MASK       0x00000FFF                // RG_W0_DATA_IQ[11..0]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_02_RG_W0_DATA_IQ_SHFT       0

/* =====================================================================================

  ---RG_WBG_WF0_TX_03 (0x18041000 + 0x078)---

    RG_W0_BBTX_OPIB_WIFI[3..0]   - (RW) WFTX output V2I current setting
    RG_W0_BBTX_OPIB_BT[7..4]     - (RW) WFTX output V2I current setting
    RG_W0_WBG_CKREV_EN[8]        - (RW) Reverse clk phase of clk receiver
    RG_W0_WBG_DA2XB[9]           - (RW) 1: P2S 2XB mode
                                     0: no P2S (single path DFF)
    RG_W0_QREV_I[10]             - (RW) Invert the ploarity of quantizer output in I channel
                                     0: non-inverted
                                     1: inverted
    RG_W0_QREV_Q[11]             - (RW) Invert the ploarity of quantizer output in Q channel
                                     0: non-inverted
                                     1: inverted
    RG_W0_SWPAD_IQ[12]           - (RW) enable TEST SW between input and output of V2I buffer in I channel  comnbine IQ
    RG_W0_RSV[13]                - (RW) reserve
    RG_W0_BBTX_LDOLV_VGER[15..14] - (RW) WFTX LDOLV voltage adjustment:
                                     00: 0.8V
                                     01: 0.75V
                                     10: 0.9V
                                     11: 0.85V
    RG_W0_BBTX_LDOLPF_VGER[17..16] - (RW) WFTX LDOLPF voltage adjustment:
                                     00: 1.5V
                                     01: 1.55V
                                     10: 1.6V
                                     11: 1.65V
    RG_W0_BBTX_LDODAC_VGER[19..18] - (RW) WFTX LDODAC voltage adjustment:
                                     00: 1.5V
                                     01: 1.55V
                                     10: 1.6V
                                     11: 1.65V
    RG_W0_BBTX_REF_VGER[21..20]  - (RW) WFTX V2I reference voltage
                                     00: 800mV
                                     01: 795mV
                                     10: 790mV
                                     11: 785mV
    RG_W0_BBTX_VCM_VGER[25..22]  - (RW) WFTX dc output common mode adjustment:
                                     0000: 600mV
                                     0001: 620mV
                                     0010: 630mV
                                     0011: 640mV
                                     0100: 650mV
                                     0101: 660mV
                                     0110: 670mV
                                     0111: 680mV 
                                     1000: 540mV
                                     1001: 560mV
                                     1010: 580mV
    RG_W0_CAL_FB_CMPEN[26]       - (RW) 1: Enable 8A/8B SDM feedback loop from analog comparator 
                                     0: 8A/8B controlled by digital macro
    RG_W0_BTMAP_INV_EN[27]       - (RW) BTMAP REVERSE in P2S macro
                                     0: use DA_WBG_WB_MODE
                                     1: reverse DA_WBG_WB_MODE
    RG_W0_DIV2_EN[28]            - (RW) P2S DIV2 EN
                                     1: ENABLE P2S local divider
                                     0: use clk_div2 clock from TOP 2x2 or 4x4 case
    RG_W0_BBTX_EXTCLK_EN[29]     - (RW) BBTX  external clock ENABLE:
                                     0: disable
                                     1: enable
    RG_W0_CKAC_EN[30]            - (RW) CK RCV AC couple enable:
                                     1: enable ac couple
                                     0: disable ac couple use dc path ( test mode only)
    RG_W0_COR_EN_WB_IQ[31]       - (RW) WFTX I/Q channel correction code enable:
                                     1: enable
                                     0: disable

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_COR_EN_WB_IQ_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_COR_EN_WB_IQ_MASK  0x80000000                // RG_W0_COR_EN_WB_IQ[31]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_COR_EN_WB_IQ_SHFT  31
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_CKAC_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_CKAC_EN_MASK       0x40000000                // RG_W0_CKAC_EN[30]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_CKAC_EN_SHFT       30
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_EXTCLK_EN_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_EXTCLK_EN_MASK 0x20000000                // RG_W0_BBTX_EXTCLK_EN[29]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_EXTCLK_EN_SHFT 29
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_DIV2_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_DIV2_EN_MASK       0x10000000                // RG_W0_DIV2_EN[28]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_DIV2_EN_SHFT       28
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BTMAP_INV_EN_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BTMAP_INV_EN_MASK  0x08000000                // RG_W0_BTMAP_INV_EN[27]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BTMAP_INV_EN_SHFT  27
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_CAL_FB_CMPEN_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_CAL_FB_CMPEN_MASK  0x04000000                // RG_W0_CAL_FB_CMPEN[26]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_CAL_FB_CMPEN_SHFT  26
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_VCM_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_VCM_VGER_MASK 0x03C00000                // RG_W0_BBTX_VCM_VGER[25..22]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_VCM_VGER_SHFT 22
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_REF_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_REF_VGER_MASK 0x00300000                // RG_W0_BBTX_REF_VGER[21..20]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_REF_VGER_SHFT 20
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDODAC_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDODAC_VGER_MASK 0x000C0000                // RG_W0_BBTX_LDODAC_VGER[19..18]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDODAC_VGER_SHFT 18
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDOLPF_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDOLPF_VGER_MASK 0x00030000                // RG_W0_BBTX_LDOLPF_VGER[17..16]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDOLPF_VGER_SHFT 16
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDOLV_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDOLV_VGER_MASK 0x0000C000                // RG_W0_BBTX_LDOLV_VGER[15..14]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_LDOLV_VGER_SHFT 14
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_RSV_ADDR           CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_RSV_MASK           0x00002000                // RG_W0_RSV[13]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_RSV_SHFT           13
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_SWPAD_IQ_ADDR      CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_SWPAD_IQ_MASK      0x00001000                // RG_W0_SWPAD_IQ[12]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_SWPAD_IQ_SHFT      12
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_QREV_Q_ADDR        CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_QREV_Q_MASK        0x00000800                // RG_W0_QREV_Q[11]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_QREV_Q_SHFT        11
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_QREV_I_ADDR        CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_QREV_I_MASK        0x00000400                // RG_W0_QREV_I[10]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_QREV_I_SHFT        10
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_WBG_DA2XB_ADDR     CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_WBG_DA2XB_MASK     0x00000200                // RG_W0_WBG_DA2XB[9]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_WBG_DA2XB_SHFT     9
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_WBG_CKREV_EN_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_WBG_CKREV_EN_MASK  0x00000100                // RG_W0_WBG_CKREV_EN[8]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_WBG_CKREV_EN_SHFT  8
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_OPIB_BT_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_OPIB_BT_MASK  0x000000F0                // RG_W0_BBTX_OPIB_BT[7..4]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_OPIB_BT_SHFT  4
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_OPIB_WIFI_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_OPIB_WIFI_MASK 0x0000000F                // RG_W0_BBTX_OPIB_WIFI[3..0]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_03_RG_W0_BBTX_OPIB_WIFI_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF0_TX_04 (0x18041000 + 0x07C)---

    RG_W0_BBTX_CLK_CAL_WF[1..0]  - (RW) WFTX calibration clock rate:
                                     00: 0
                                     01: 960M/4
                                     10: 960M/8
                                     11: 960M/16
    RG_W0_BBTX_CLK_CAL_BT[3..2]  - (RW) WFTX calibration clock rate:
                                     00: 0
                                     01: 832M/4
                                     10: 832M/8
                                     11: 832M/16
    RG_W0_BBTX_SEQ_RSV[15..4]    - (RW) WFTX power-on sequence manual mode control signal
                                     bit[0]: da_bbtx_LDO15_en_vk10
                                     bit[1]: da_bbtx_I_dac_en
                                     bit[2]: da_bbtx_Q_dac_en
                                     bit[3]: da_bbtx_I_lpf_en
                                     bit[4]: da_bbtx_Q_lpf_en
                                     bit[5]: da_bbtx_I_clk_en
                                     bit[6]: da_bbtx_Q_clk_en
                                     bit[7]: da_fast_charge_en
                                     bit[8]: da_bbtx_rst_b
                                     bit[9]: da_bbtx_seq_rsv
                                     bit[11:10]: no use
    RG_W0_FAST_EN_DELAY[17..16]  - (RW) config fast_charge_en delay time, default=16T, 1T=1/26MHz:
                                     00:8T
                                     01:16T
                                     10:24T
                                     11:32T
    RG_W0_CAL_EN_DELAY[19..18]   - (RW) config cal_en delay time, default=64T, 1T=1/26MHz:
                                     00:32T
                                     01:64T
                                     10:96T
                                     11:128T
    RG_W0_BBTX_TEST_SEL[23..20]  - (RW) BBTX monitor signal selection:
                                     0000: LDO_LPF_V15
                                     0001: AVDD09_CK
                                     0010: ITEST(8.2uA)
                                     0011: VCM(650mV)
                                     0100: PAD_WB_TXIP
                                     0101: PAD_WB_TXIN
                                     0110: PAD_WB_TXQP
                                     0111: PAD_WB_TXQN
                                     1000: LDO_DAC_V15
                                     1001: FB_res_msb
                                     1010: FB_res_lsb
                                     1011: test(unused)
                                     other:none
    RG_W0_BBTX_SEQ_CFG[31..24]   - (RW) WFTX power-on sequence control signal
                                     bit[4:3]=00: counter time unit=1T(1/26M)
                                     bit[4:3]=01: counter time unit=2T(2/26M)
                                     bit[4:3]=10: counter time unit=4T(4/26M)
                                     bit[4:3]=11: counter time unit=8T(8/26M)
                                     bit[5]=0: disable manual mode (contorlled by RG_BBTX_SEQ_RSV)
                                     bit[5]=1: enable manual mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_SEQ_CFG_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_SEQ_CFG_MASK  0xFF000000                // RG_W0_BBTX_SEQ_CFG[31..24]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_SEQ_CFG_SHFT  24
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_TEST_SEL_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_TEST_SEL_MASK 0x00F00000                // RG_W0_BBTX_TEST_SEL[23..20]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_TEST_SEL_SHFT 20
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_CAL_EN_DELAY_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_CAL_EN_DELAY_MASK  0x000C0000                // RG_W0_CAL_EN_DELAY[19..18]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_CAL_EN_DELAY_SHFT  18
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_FAST_EN_DELAY_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_FAST_EN_DELAY_MASK 0x00030000                // RG_W0_FAST_EN_DELAY[17..16]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_FAST_EN_DELAY_SHFT 16
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_SEQ_RSV_ADDR  CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_SEQ_RSV_MASK  0x0000FFF0                // RG_W0_BBTX_SEQ_RSV[15..4]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_SEQ_RSV_SHFT  4
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_CLK_CAL_BT_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_CLK_CAL_BT_MASK 0x0000000C                // RG_W0_BBTX_CLK_CAL_BT[3..2]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_CLK_CAL_BT_SHFT 2
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_CLK_CAL_WF_ADDR CONN_AFE_CTL_RG_WBG_WF0_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_CLK_CAL_WF_MASK 0x00000003                // RG_W0_BBTX_CLK_CAL_WF[1..0]
#define CONN_AFE_CTL_RG_WBG_WF0_TX_04_RG_W0_BBTX_CLK_CAL_WF_SHFT 0

/* =====================================================================================

  ---RGS_WBG_WF0_TXCAL (0x18041000 + 0x080)---

    RGS_W0_Es_readout_I_RO[11..0] - (RO) WFTX I channel MSB error sorce readout bit
    RGS_W0_Es_overflow_I_RO[12]  - (RO) WFTX I channel overflow flag
    RGS_W0_cal_done_I_RO[13]     - (RO) WFTX I channel calibraton done flag
    RGS_W0_WBG_WF_TXCAL_I_RO[15..14] - (RO) None
    RGS_W0_Es_readout_Q_RO[27..16] - (RO) WFTX Q channel MSB error sorce readout bit
    RGS_W0_Es_overflow_Q_RO[28]  - (RO) WFTX Q channel overflow flag
    RGS_W0_cal_done_Q_RO[29]     - (RO) WFTX Q channel calibraton done flag
    RGS_W0_WBG_WF_TXCAL_Q_RO[31..30] - (RO) None

 =====================================================================================*/
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_WBG_WF_TXCAL_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_WBG_WF_TXCAL_Q_RO_MASK 0xC0000000                // RGS_W0_WBG_WF_TXCAL_Q_RO[31..30]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_WBG_WF_TXCAL_Q_RO_SHFT 30
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_cal_done_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_cal_done_Q_RO_MASK 0x20000000                // RGS_W0_cal_done_Q_RO[29]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_cal_done_Q_RO_SHFT 29
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_overflow_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_overflow_Q_RO_MASK 0x10000000                // RGS_W0_Es_overflow_Q_RO[28]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_overflow_Q_RO_SHFT 28
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_readout_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_readout_Q_RO_MASK 0x0FFF0000                // RGS_W0_Es_readout_Q_RO[27..16]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_readout_Q_RO_SHFT 16
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_WBG_WF_TXCAL_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_WBG_WF_TXCAL_I_RO_MASK 0x0000C000                // RGS_W0_WBG_WF_TXCAL_I_RO[15..14]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_WBG_WF_TXCAL_I_RO_SHFT 14
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_cal_done_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_cal_done_I_RO_MASK 0x00002000                // RGS_W0_cal_done_I_RO[13]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_cal_done_I_RO_SHFT 13
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_overflow_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_overflow_I_RO_MASK 0x00001000                // RGS_W0_Es_overflow_I_RO[12]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_overflow_I_RO_SHFT 12
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_readout_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_readout_I_RO_MASK 0x00000FFF                // RGS_W0_Es_readout_I_RO[11..0]
#define CONN_AFE_CTL_RGS_WBG_WF0_TXCAL_RGS_W0_Es_readout_I_RO_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF1_RX_01 (0x18041000 + 0x084)---

    RG_WF1_AD_LDO09_VSEL[2..0]   - (RW) 0.95V LDO tuning
                                     111: 1.015
                                     110: 0.993
                                     101: 0.967
                                     100: 0.945 
                                     011: 0.918 (POR)
                                     010: 0.896
                                     001: 0.871
                                     000: 0.849
    RG_WF1_AD_VREF_SEL[5..3]     - (RW) VREF selection
                                     111: 1.014
                                     110: 0.995
                                     101: 0.971
                                     100: 0.952
                                     011: 0.922
                                     010: 0.903 (POR)
                                     001: 0.880
                                     000: 0.861
    RG_WF1_DUODRI[6]             - (RW) 1: reference gen doubled current
                                     0: reference gen normal current
    RG_WF1_RAW_OUT_EN[7]         - (RW) 1: Raw data out
                                     0: Normal data out
    RG_WF1_OUT_CLK_DIV_H4_L2[8]  - (RW) 1: output clock divided by 4
                                     0: output clock divided by 2
    RG_WF1_OUT_CLK_DIV_EN[9]     - (RW) 1: output clock divider enable 
                                     0: disable
    RG_WF1_AD_OUTPUT_EN[10]      - (RW) 1: output enable 
                                     0: output disable
    RG_WF1_AD_CK_OUT_RISE[11]    - (RW) 1: Output clock uses positive polarity
                                     0: Output clock uses negative polarity
    RG_WF1_AD_CH_DFF_RISE[12]    - (RW) 1: DFF sync clock uses positive polarity
                                     0: DFF sync clock uses negative polarity
    RG_WF1_AD_LDO_PUMP_EN[13]    - (RW) 1: LDO pump enable
                                     0: LDO pump disable
    RG_WF1_AD_COMP_TAIL_MSB[14]  - (RW) 1: enlarge comparator tail transistor size for first 3 MSBs
                                     0: default size
    RG_WF1_AD_COMP_TAIL[15]      - (RW) 1: enlarge comparator tail transistor size
                                     0: default size
    RG_WF1_AD_CK_DUTY[17..16]    - (RW) 11: - 600 ps
                                     10: - 450 ps
                                     01: - 400 ps
                                     00:  - 200 ps
    RG_WF1_AD_EXT_CLK_SEL[18]    - (RW) 1: External clock source
                                     0: Internal PLL as clock
    RG_WF1_AD_QCH_EN[19]         - (RW) 1: Q channel enable
                                     0: Q channel disable
    RG_WF1_AD_ICH_EN[20]         - (RW) 1: I channel enable
                                     0: I channel disable
    RG_WF1_AD_VAR_CLKS[21]       - (RW) 1: variable clks
                                     0: fixed clks
    RG_WF1_AD_LSB_EN[22]         - (RW) 1: 13bit cycles conversion
                                     0: 10 bit cycles conversion
    RG_WF1_AD_VGEN_PUMP_EN[23]   - (RW) 1: reference gen pump enable
                                     0: reference gen pump disable
    RG_WF1_AD_NS_EN[24]          - (RW) 1: noise shaping enable
                                     0: noise shaping disable
    RG_WF1_ADCKSEL[27..25]       - (RW) 100: div by 1 (320MHz)
                                     010: div by 2 (160MHz)
                                     001: div by 4 (80MHz)
    RG_WF1_CKO_EN[28]            - (RW) 1: Enable clock 
                                     0: Disable clock
    RG_WF1_AD_REF_EN[29]         - (RW) 1: Enable reference gen
                                     0: Disable referenc gen
    RG_WF1_AD_EN[30]             - (RW) 1: Enable ADC
                                     0: Disable ADC
    RG_WF1_RG_DA_Mode[31]        - (RW) 1: RG Mode
                                     0: DA Mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_RG_DA_Mode_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_RG_DA_Mode_MASK   0x80000000                // RG_WF1_RG_DA_Mode[31]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_RG_DA_Mode_SHFT   31
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_EN_ADDR        CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_EN_MASK        0x40000000                // RG_WF1_AD_EN[30]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_EN_SHFT        30
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_REF_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_REF_EN_MASK    0x20000000                // RG_WF1_AD_REF_EN[29]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_REF_EN_SHFT    29
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_CKO_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_CKO_EN_MASK       0x10000000                // RG_WF1_CKO_EN[28]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_CKO_EN_SHFT       28
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_ADCKSEL_ADDR      CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_ADCKSEL_MASK      0x0E000000                // RG_WF1_ADCKSEL[27..25]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_ADCKSEL_SHFT      25
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_NS_EN_ADDR     CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_NS_EN_MASK     0x01000000                // RG_WF1_AD_NS_EN[24]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_NS_EN_SHFT     24
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VGEN_PUMP_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VGEN_PUMP_EN_MASK 0x00800000                // RG_WF1_AD_VGEN_PUMP_EN[23]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VGEN_PUMP_EN_SHFT 23
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LSB_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LSB_EN_MASK    0x00400000                // RG_WF1_AD_LSB_EN[22]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LSB_EN_SHFT    22
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VAR_CLKS_ADDR  CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VAR_CLKS_MASK  0x00200000                // RG_WF1_AD_VAR_CLKS[21]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VAR_CLKS_SHFT  21
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_ICH_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_ICH_EN_MASK    0x00100000                // RG_WF1_AD_ICH_EN[20]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_ICH_EN_SHFT    20
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_QCH_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_QCH_EN_MASK    0x00080000                // RG_WF1_AD_QCH_EN[19]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_QCH_EN_SHFT    19
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_EXT_CLK_SEL_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_EXT_CLK_SEL_MASK 0x00040000                // RG_WF1_AD_EXT_CLK_SEL[18]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_EXT_CLK_SEL_SHFT 18
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CK_DUTY_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CK_DUTY_MASK   0x00030000                // RG_WF1_AD_CK_DUTY[17..16]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CK_DUTY_SHFT   16
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_COMP_TAIL_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_COMP_TAIL_MASK 0x00008000                // RG_WF1_AD_COMP_TAIL[15]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_COMP_TAIL_SHFT 15
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_COMP_TAIL_MSB_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_COMP_TAIL_MSB_MASK 0x00004000                // RG_WF1_AD_COMP_TAIL_MSB[14]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_COMP_TAIL_MSB_SHFT 14
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LDO_PUMP_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LDO_PUMP_EN_MASK 0x00002000                // RG_WF1_AD_LDO_PUMP_EN[13]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LDO_PUMP_EN_SHFT 13
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CH_DFF_RISE_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CH_DFF_RISE_MASK 0x00001000                // RG_WF1_AD_CH_DFF_RISE[12]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CH_DFF_RISE_SHFT 12
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CK_OUT_RISE_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CK_OUT_RISE_MASK 0x00000800                // RG_WF1_AD_CK_OUT_RISE[11]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_CK_OUT_RISE_SHFT 11
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_OUTPUT_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_OUTPUT_EN_MASK 0x00000400                // RG_WF1_AD_OUTPUT_EN[10]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_OUTPUT_EN_SHFT 10
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_OUT_CLK_DIV_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_OUT_CLK_DIV_EN_MASK 0x00000200                // RG_WF1_OUT_CLK_DIV_EN[9]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_OUT_CLK_DIV_EN_SHFT 9
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_OUT_CLK_DIV_H4_L2_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_OUT_CLK_DIV_H4_L2_MASK 0x00000100                // RG_WF1_OUT_CLK_DIV_H4_L2[8]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_OUT_CLK_DIV_H4_L2_SHFT 8
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_RAW_OUT_EN_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_RAW_OUT_EN_MASK   0x00000080                // RG_WF1_RAW_OUT_EN[7]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_RAW_OUT_EN_SHFT   7
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_DUODRI_ADDR       CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_DUODRI_MASK       0x00000040                // RG_WF1_DUODRI[6]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_DUODRI_SHFT       6
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VREF_SEL_ADDR  CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VREF_SEL_MASK  0x00000038                // RG_WF1_AD_VREF_SEL[5..3]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_VREF_SEL_SHFT  3
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LDO09_VSEL_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LDO09_VSEL_MASK 0x00000007                // RG_WF1_AD_LDO09_VSEL[2..0]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_01_RG_WF1_AD_LDO09_VSEL_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF1_RX_02 (0x18041000 + 0x088)---

    RG_WBG_WF1_CKO_INV_EN[0]     - (RW) inverse NS_CK_WFTX_SYNC phase of WFRX sync stage
                                     0: original phase
                                     1: inverse phase
    RG_WBG_WF1_RX_02_RSV0[5..1]  - (RW) to be updated
    RG_WF1_PREON_MODE[6]         - (RW) 0: normal 
                                     1: Ref pre-on mode
    RG_WF1_BUFF_DYM_BIAS[7]      - (RW) 0: normal 
                                     1: dynamic bias for buffer @ 160 MS/s
    RG_WF1_RX_TST_SEL[10..8]     - (RW) RX DC test
                                     000: MON_Buffer
                                     001: MON_AD
                                     Others: Not Used
    RG_WF1_RX_TST_EN[11]         - (RW) 1: for RX DC monitor enable
                                     0: disable
    RG_WF1_BUF_TSTSEL[13..12]    - (RW) ADBUF DC test
                                     00: LDO_0P98
                                     01: LDO_1P55
                                     10: VCMREF
                                     11: NO_USED
    RG_WF1_BUF_TST_EN[14]        - (RW) 1: for ADBUF DC monitor enable
                                     0: disable
    RG_WF1_AD_IN_SEL[15]         - (RW) 0: Buffer output as ADC input
                                     1: PAD input as ADC input
    RG_WF1_BUF_EN[16]            - (RW) ADBUF on/off manual control
                                     0: ADBUF manual off
                                     1: ADBUF manual on
    RG_WF1_BUFEN_MAN[17]         - (RW) ADBUF on/off manual mode enable
                                     0: normal mode, control by DA
                                     1: manual mode, control by RG
    RG_WF1_V155_LDO_VSEL[20..18] - (RW) 1.55V LDO tuning
                                     111: 1.63
                                     110: 1.6
                                     101: 1.58
                                     100: 1.55 (POR)
                                     011: 1.53
                                     010: 1.5 
                                     001: 1.48
                                     000: 1.45
    RG_WF1_V098_LDO_VSEL[23..21] - (RW) 0.98V LDO tuning
                                     111: 1.04
                                     110: 1.02
                                     101: 0.999
                                     100: 0.98  (POR)
                                     011: 0.958
                                     010: 0.941
                                     001: 0.92
                                     000: 0.9
    RG_WF1_ADBUF_VCM[25..24]     - (RW) ADBUF output VCM
                                     11: 0.5V
                                     10: 0.55V(POR)
                                     01: 0.6V
                                     00: 0.65V
    RG_WF1_IGEN_SEL[27..26]      - (RW) RX Top bias current tuning
                                     11:  I5u=4.06u (0.8X)
                                     10: I5u=5.07u (1X, POR)
                                     01: I5u=6.75u (1.33X)
                                     00: I5u=10.1u (2X)
    RG_WF1_AD_TST_EN[28]         - (RW) 1: AD DC monitor enable 
                                     0: AD DC monitor disable
    RG_WF1_AD_TST_SEL[31..29]    - (RW) AD DC monitored voltage selection
                                     000:VR branch 1 full reference
                                     001: VR branch 1 half reference
                                     010: VR branch 2 full reference
                                     011: VR branch 2  half reference   
                                     100: LDO_0P9V

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_TST_SEL_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_TST_SEL_MASK   0xE0000000                // RG_WF1_AD_TST_SEL[31..29]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_TST_SEL_SHFT   29
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_TST_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_TST_EN_MASK    0x10000000                // RG_WF1_AD_TST_EN[28]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_TST_EN_SHFT    28
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_IGEN_SEL_ADDR     CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_IGEN_SEL_MASK     0x0C000000                // RG_WF1_IGEN_SEL[27..26]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_IGEN_SEL_SHFT     26
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_ADBUF_VCM_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_ADBUF_VCM_MASK    0x03000000                // RG_WF1_ADBUF_VCM[25..24]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_ADBUF_VCM_SHFT    24
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_V098_LDO_VSEL_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_V098_LDO_VSEL_MASK 0x00E00000                // RG_WF1_V098_LDO_VSEL[23..21]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_V098_LDO_VSEL_SHFT 21
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_V155_LDO_VSEL_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_V155_LDO_VSEL_MASK 0x001C0000                // RG_WF1_V155_LDO_VSEL[20..18]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_V155_LDO_VSEL_SHFT 18
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUFEN_MAN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUFEN_MAN_MASK    0x00020000                // RG_WF1_BUFEN_MAN[17]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUFEN_MAN_SHFT    17
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_EN_MASK       0x00010000                // RG_WF1_BUF_EN[16]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_EN_SHFT       16
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_IN_SEL_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_IN_SEL_MASK    0x00008000                // RG_WF1_AD_IN_SEL[15]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_AD_IN_SEL_SHFT    15
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_TST_EN_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_TST_EN_MASK   0x00004000                // RG_WF1_BUF_TST_EN[14]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_TST_EN_SHFT   14
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_TSTSEL_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_TSTSEL_MASK   0x00003000                // RG_WF1_BUF_TSTSEL[13..12]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUF_TSTSEL_SHFT   12
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_RX_TST_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_RX_TST_EN_MASK    0x00000800                // RG_WF1_RX_TST_EN[11]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_RX_TST_EN_SHFT    11
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_RX_TST_SEL_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_RX_TST_SEL_MASK   0x00000700                // RG_WF1_RX_TST_SEL[10..8]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_RX_TST_SEL_SHFT   8
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUFF_DYM_BIAS_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUFF_DYM_BIAS_MASK 0x00000080                // RG_WF1_BUFF_DYM_BIAS[7]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_BUFF_DYM_BIAS_SHFT 7
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_PREON_MODE_ADDR   CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_PREON_MODE_MASK   0x00000040                // RG_WF1_PREON_MODE[6]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WF1_PREON_MODE_SHFT   6
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WBG_WF1_RX_02_RSV0_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WBG_WF1_RX_02_RSV0_MASK 0x0000003E                // RG_WBG_WF1_RX_02_RSV0[5..1]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WBG_WF1_RX_02_RSV0_SHFT 1
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WBG_WF1_CKO_INV_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WBG_WF1_CKO_INV_EN_MASK 0x00000001                // RG_WBG_WF1_CKO_INV_EN[0]
#define CONN_AFE_CTL_RG_WBG_WF1_RX_02_RG_WBG_WF1_CKO_INV_EN_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF1_TX_01 (0x18041000 + 0x08C)---

    RG_W1_WBG_TX_CKINV_EN[0]     - (RW) inverse NS_CK_WFTX_SYNC phase of WFTX sync stage
                                     0: original phase
                                     1: inverse phase
    RG_W1_EN_TEST[1]             - (RW) WFTX dc monitor switch enable
                                     0: disable
                                     1: enable
    RG_W1_Es_manu_data_Q[12..2]  - (RW) Selection for BBTX manully assigning calibration value:
    RG_W1_Es_manu_en_Q[13]       - (RW) BBTX Q channel manully assign calibration value mode:
                                     0: disable
                                     1: enable
    RG_W1_Es_manu_data_I[24..14] - (RW) Selection for BBTX manully assigning calibration value:
    RG_W1_Es_manu_en_I[25]       - (RW) BBTX I channel manully assign calibration value mode:
                                     0: disable
                                     1: enable
    RG_W1_Es_manu_sel_IQ[29..26] - (RW) Selection for BBTX manully assigning calibration value:
    RG_W1_BBTX_RSV00[31..30]     - (RW) CALC sel

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_BBTX_RSV00_ADDR    CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_BBTX_RSV00_MASK    0xC0000000                // RG_W1_BBTX_RSV00[31..30]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_BBTX_RSV00_SHFT    30
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_sel_IQ_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_sel_IQ_MASK 0x3C000000                // RG_W1_Es_manu_sel_IQ[29..26]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_sel_IQ_SHFT 26
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_en_I_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_en_I_MASK  0x02000000                // RG_W1_Es_manu_en_I[25]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_en_I_SHFT  25
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_data_I_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_data_I_MASK 0x01FFC000                // RG_W1_Es_manu_data_I[24..14]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_data_I_SHFT 14
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_en_Q_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_en_Q_MASK  0x00002000                // RG_W1_Es_manu_en_Q[13]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_en_Q_SHFT  13
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_data_Q_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_data_Q_MASK 0x00001FFC                // RG_W1_Es_manu_data_Q[12..2]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_Es_manu_data_Q_SHFT 2
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_EN_TEST_ADDR       CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_EN_TEST_MASK       0x00000002                // RG_W1_EN_TEST[1]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_EN_TEST_SHFT       1
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_WBG_TX_CKINV_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_WBG_TX_CKINV_EN_MASK 0x00000001                // RG_W1_WBG_TX_CKINV_EN[0]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_01_RG_W1_WBG_TX_CKINV_EN_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF1_TX_02 (0x18041000 + 0x090)---

    RG_W1_DATA_IQ[11..0]         - (RW) BBTX IQ DAC input DATA 12 bit
    RG_W1_OS_Q_EXTRA[13..12]     - (RW) EXTRA bit for DCOS                                                                    11:+20mV                                                                           
                                     10:0mV                                                                                
                                     00:-20mV
    RG_W1_OS_I_EXTRA[15..14]     - (RW) EXTRA bit for DCOS                                                                    11:+20mV                                                                
                                     10:0mV                                                                                
                                     00:-20mV
    RG_W1_CAL_CLK_EN[16]         - (RW) 1: manual enable CAL CLK for Es readout debug
                                     0: CAL clk is controlled by CAL_EN
    RG_W1_BBTX_RSV03[17]         - (RW) unused
    RG_W1_DACOS_EN[18]           - (RW) 1:Nbias_DCOS_EN 
                                     0:PDAC=Nbias current
    RG_W1_DATA_MAN[19]           - (RW) BBTX  DAC input manual mode
                                     0: RG_DATA manual mode disable.
                                         RG_DATA_IQ<11:5> are used as OS_ICH, 
                                         RG_OS_IQ<6:0> are used as OS_QCH    
                                        (OS_ICH/OS_QCH are spereated)
                                      
                                     1: RG_DATA manual mode enable:
                                         RG_DATA_IQ<11:0> are used as DATA bit manu
                                         (IQ share pin)
                                        RG_OS_IQ = OS_ICH = OS_QCH 
                                        (IQ share pin)
    RG_W1_WF480CK_EN[20]         - (RW) WBG 480 CLK for 2x2 4x4 enable
                                     0: 480MHz clk disable   
                                     1: 480MHz clk enable
    RG_W1_CAL_EN[21]             - (RW) BBTX digital calibration macro manual enable signal
    RG_W1_RSTB_CAL[22]           - (RW) BBTX digital calibration macro manual resetb signal
    RG_W1_CAL_MAN[23]            - (RW) BBTX IQ DAC manual mode 
                                     enable
    RG_W1_NP_SEL[26..24]         - (RW) BBTX DAC calibration point:
                                     000:64
                                     001:128
                                     010:256
                                     011:512
                                     100:1024
                                     101:2048
                                     else:512
    RG_W1_DIN_SIGNED_EN[27]      - (RW) BBTX input data format
                                     1: unsinged code
                                     0: 2's compliment code
    RG_W1_GAIN_CTRL[31..28]      - (RW) BBTX IQ DAC output swing adjustment
                                     00:0%
                                     01:0.65%
                                     10:0.91%
                                     11:1.52%

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_GAIN_CTRL_ADDR     CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_GAIN_CTRL_MASK     0xF0000000                // RG_W1_GAIN_CTRL[31..28]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_GAIN_CTRL_SHFT     28
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DIN_SIGNED_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DIN_SIGNED_EN_MASK 0x08000000                // RG_W1_DIN_SIGNED_EN[27]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DIN_SIGNED_EN_SHFT 27
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_NP_SEL_ADDR        CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_NP_SEL_MASK        0x07000000                // RG_W1_NP_SEL[26..24]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_NP_SEL_SHFT        24
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_MAN_ADDR       CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_MAN_MASK       0x00800000                // RG_W1_CAL_MAN[23]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_MAN_SHFT       23
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_RSTB_CAL_ADDR      CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_RSTB_CAL_MASK      0x00400000                // RG_W1_RSTB_CAL[22]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_RSTB_CAL_SHFT      22
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_EN_ADDR        CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_EN_MASK        0x00200000                // RG_W1_CAL_EN[21]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_EN_SHFT        21
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_WF480CK_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_WF480CK_EN_MASK    0x00100000                // RG_W1_WF480CK_EN[20]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_WF480CK_EN_SHFT    20
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DATA_MAN_ADDR      CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DATA_MAN_MASK      0x00080000                // RG_W1_DATA_MAN[19]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DATA_MAN_SHFT      19
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DACOS_EN_ADDR      CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DACOS_EN_MASK      0x00040000                // RG_W1_DACOS_EN[18]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DACOS_EN_SHFT      18
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_BBTX_RSV03_ADDR    CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_BBTX_RSV03_MASK    0x00020000                // RG_W1_BBTX_RSV03[17]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_BBTX_RSV03_SHFT    17
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_CLK_EN_ADDR    CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_CLK_EN_MASK    0x00010000                // RG_W1_CAL_CLK_EN[16]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_CAL_CLK_EN_SHFT    16
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_OS_I_EXTRA_ADDR    CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_OS_I_EXTRA_MASK    0x0000C000                // RG_W1_OS_I_EXTRA[15..14]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_OS_I_EXTRA_SHFT    14
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_OS_Q_EXTRA_ADDR    CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_OS_Q_EXTRA_MASK    0x00003000                // RG_W1_OS_Q_EXTRA[13..12]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_OS_Q_EXTRA_SHFT    12
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DATA_IQ_ADDR       CONN_AFE_CTL_RG_WBG_WF1_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DATA_IQ_MASK       0x00000FFF                // RG_W1_DATA_IQ[11..0]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_02_RG_W1_DATA_IQ_SHFT       0

/* =====================================================================================

  ---RG_WBG_WF1_TX_03 (0x18041000 + 0x094)---

    RG_W1_BBTX_OPIB_WIFI[3..0]   - (RW) WFTX output V2I current setting
    RG_W1_BBTX_OPIB_BT[7..4]     - (RW) WFTX output V2I current setting
    RG_W1_WBG_CKREV_EN[8]        - (RW) Reverse clk phase of clk receiver
    RG_W1_WBG_DA2XB[9]           - (RW) 1: P2S 2XB mode
                                     0: no P2S (single path DFF)
    RG_W1_QREV_I[10]             - (RW) Invert the ploarity of quantizer output in I channel
                                     0: non-inverted
                                     1: inverted
    RG_W1_QREV_Q[11]             - (RW) Invert the ploarity of quantizer output in Q channel
                                     0: non-inverted
                                     1: inverted
    RG_W1_SWPAD_IQ[12]           - (RW) enable TEST SW between input and output of V2I buffer in I channel  comnbine IQ
    RG_W1_RSV[13]                - (RW) reserve
    RG_W1_BBTX_LDOLV_VGER[15..14] - (RW) WFTX LDOLV voltage adjustment:
                                     00: 0.8V
                                     01: 0.75V
                                     10: 0.9V
                                     11: 0.85V
    RG_W1_BBTX_LDOLPF_VGER[17..16] - (RW) WFTX LDOLPF voltage adjustment:
                                     00: 1.5V
                                     01: 1.55V
                                     10: 1.6V
                                     11: 1.65V
    RG_W1_BBTX_LDODAC_VGER[19..18] - (RW) WFTX LDODAC voltage adjustment:
                                     00: 1.5V
                                     01: 1.55V
                                     10: 1.6V
                                     11: 1.65V
    RG_W1_BBTX_REF_VGER[21..20]  - (RW) WFTX V2I reference voltage
                                     00: 800mV
                                     01: 795mV
                                     10: 790mV
                                     11: 785mV
    RG_W1_BBTX_VCM_VGER[25..22]  - (RW) WFTX dc output common mode adjustment:
                                     0000: 600mV
                                     0001: 620mV
                                     0010: 630mV
                                     0011: 640mV
                                     0100: 650mV
                                     0101: 660mV
                                     0110: 670mV
                                     0111: 680mV 
                                     1000: 540mV
                                     1001: 560mV
                                     1010: 580mV
    RG_W1_CAL_FB_CMPEN[26]       - (RW) 1: Enable 8A/8B SDM feedback loop from analog comparator 
                                     0: 8A/8B controlled by digital macro
    RG_W1_BTMAP_INV_EN[27]       - (RW) BTMAP REVERSE in P2S macro
                                     0: use DA_WBG_WB_MODE
                                     1: reverse DA_WBG_WB_MODE
    RG_W1_DIV2_EN[28]            - (RW) P2S DIV2 EN
                                     1: ENABLE P2S local divider
                                     0: use clk_div2 clock from TOP 2x2 or 4x4 case
    RG_W1_BBTX_EXTCLK_EN[29]     - (RW) BBTX  external clock ENABLE:
                                     0: disable
                                     1: enable
    RG_W1_CKAC_EN[30]            - (RW) CK RCV AC couple enable:
                                     1: enable ac couple
                                     0: disable ac couple use dc path ( test mode only)
    RG_W1_COR_EN_WB_IQ[31]       - (RW) WFTX I/Q channel correction code enable:
                                     1: enable
                                     0: disable

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_COR_EN_WB_IQ_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_COR_EN_WB_IQ_MASK  0x80000000                // RG_W1_COR_EN_WB_IQ[31]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_COR_EN_WB_IQ_SHFT  31
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_CKAC_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_CKAC_EN_MASK       0x40000000                // RG_W1_CKAC_EN[30]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_CKAC_EN_SHFT       30
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_EXTCLK_EN_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_EXTCLK_EN_MASK 0x20000000                // RG_W1_BBTX_EXTCLK_EN[29]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_EXTCLK_EN_SHFT 29
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_DIV2_EN_ADDR       CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_DIV2_EN_MASK       0x10000000                // RG_W1_DIV2_EN[28]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_DIV2_EN_SHFT       28
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BTMAP_INV_EN_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BTMAP_INV_EN_MASK  0x08000000                // RG_W1_BTMAP_INV_EN[27]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BTMAP_INV_EN_SHFT  27
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_CAL_FB_CMPEN_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_CAL_FB_CMPEN_MASK  0x04000000                // RG_W1_CAL_FB_CMPEN[26]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_CAL_FB_CMPEN_SHFT  26
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_VCM_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_VCM_VGER_MASK 0x03C00000                // RG_W1_BBTX_VCM_VGER[25..22]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_VCM_VGER_SHFT 22
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_REF_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_REF_VGER_MASK 0x00300000                // RG_W1_BBTX_REF_VGER[21..20]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_REF_VGER_SHFT 20
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDODAC_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDODAC_VGER_MASK 0x000C0000                // RG_W1_BBTX_LDODAC_VGER[19..18]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDODAC_VGER_SHFT 18
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDOLPF_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDOLPF_VGER_MASK 0x00030000                // RG_W1_BBTX_LDOLPF_VGER[17..16]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDOLPF_VGER_SHFT 16
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDOLV_VGER_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDOLV_VGER_MASK 0x0000C000                // RG_W1_BBTX_LDOLV_VGER[15..14]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_LDOLV_VGER_SHFT 14
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_RSV_ADDR           CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_RSV_MASK           0x00002000                // RG_W1_RSV[13]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_RSV_SHFT           13
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_SWPAD_IQ_ADDR      CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_SWPAD_IQ_MASK      0x00001000                // RG_W1_SWPAD_IQ[12]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_SWPAD_IQ_SHFT      12
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_QREV_Q_ADDR        CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_QREV_Q_MASK        0x00000800                // RG_W1_QREV_Q[11]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_QREV_Q_SHFT        11
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_QREV_I_ADDR        CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_QREV_I_MASK        0x00000400                // RG_W1_QREV_I[10]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_QREV_I_SHFT        10
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_WBG_DA2XB_ADDR     CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_WBG_DA2XB_MASK     0x00000200                // RG_W1_WBG_DA2XB[9]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_WBG_DA2XB_SHFT     9
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_WBG_CKREV_EN_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_WBG_CKREV_EN_MASK  0x00000100                // RG_W1_WBG_CKREV_EN[8]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_WBG_CKREV_EN_SHFT  8
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_OPIB_BT_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_OPIB_BT_MASK  0x000000F0                // RG_W1_BBTX_OPIB_BT[7..4]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_OPIB_BT_SHFT  4
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_OPIB_WIFI_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_OPIB_WIFI_MASK 0x0000000F                // RG_W1_BBTX_OPIB_WIFI[3..0]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_03_RG_W1_BBTX_OPIB_WIFI_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF1_TX_04 (0x18041000 + 0x098)---

    RG_W1_BBTX_CLK_CAL_WF[1..0]  - (RW) WFTX calibration clock rate:
                                     00: 0
                                     01: 960M/4
                                     10: 960M/8
                                     11: 960M/16
    RG_W1_BBTX_CLK_CAL_BT[3..2]  - (RW) WFTX calibration clock rate:
                                     00: 0
                                     01: 832M/4
                                     10: 832M/8
                                     11: 832M/16
    RG_W1_BBTX_SEQ_RSV[15..4]    - (RW) WFTX power-on sequence manual mode control signal
                                     bit[0]: da_bbtx_LDO15_en_vk10
                                     bit[1]: da_bbtx_I_dac_en
                                     bit[2]: da_bbtx_Q_dac_en
                                     bit[3]: da_bbtx_I_lpf_en
                                     bit[4]: da_bbtx_Q_lpf_en
                                     bit[5]: da_bbtx_I_clk_en
                                     bit[6]: da_bbtx_Q_clk_en
                                     bit[7]: da_fast_charge_en
                                     bit[8]: da_bbtx_rst_b
                                     bit[9]: da_bbtx_seq_rsv
                                     bit[11:10]: no use
    RG_W1_FAST_EN_DELAY[17..16]  - (RW) config fast_charge_en delay time, default=16T, 1T=1/26MHz:
                                     00:8T
                                     01:16T
                                     10:24T
                                     11:32T
    RG_W1_CAL_EN_DELAY[19..18]   - (RW) config cal_en delay time, default=64T, 1T=1/26MHz:
                                     00:32T
                                     01:64T
                                     10:96T
                                     11:128T
    RG_W1_BBTX_TEST_SEL[23..20]  - (RW) BBTX monitor signal selection:
                                     0000: LDO_LPF_V15
                                     0001: AVDD09_CK
                                     0010: ITEST(8.2uA)
                                     0011: VCM(650mV)
                                     0100: PAD_WB_TXIP
                                     0101: PAD_WB_TXIN
                                     0110: PAD_WB_TXQP
                                     0111: PAD_WB_TXQN
                                     1000: LDO_DAC_V15
                                     1001: FB_res_msb
                                     1010: FB_res_lsb
                                     1011: test(unused)
                                     other:none
    RG_W1_BBTX_SEQ_CFG[31..24]   - (RW) WFTX power-on sequence control signal
                                     bit[4:3]=00: counter time unit=1T(1/26M)
                                     bit[4:3]=01: counter time unit=2T(2/26M)
                                     bit[4:3]=10: counter time unit=4T(4/26M)
                                     bit[4:3]=11: counter time unit=8T(8/26M)
                                     bit[5]=0: disable manual mode (contorlled by RG_BBTX_SEQ_RSV)
                                     bit[5]=1: enable manual mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_SEQ_CFG_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_SEQ_CFG_MASK  0xFF000000                // RG_W1_BBTX_SEQ_CFG[31..24]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_SEQ_CFG_SHFT  24
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_TEST_SEL_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_TEST_SEL_MASK 0x00F00000                // RG_W1_BBTX_TEST_SEL[23..20]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_TEST_SEL_SHFT 20
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_CAL_EN_DELAY_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_CAL_EN_DELAY_MASK  0x000C0000                // RG_W1_CAL_EN_DELAY[19..18]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_CAL_EN_DELAY_SHFT  18
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_FAST_EN_DELAY_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_FAST_EN_DELAY_MASK 0x00030000                // RG_W1_FAST_EN_DELAY[17..16]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_FAST_EN_DELAY_SHFT 16
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_SEQ_RSV_ADDR  CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_SEQ_RSV_MASK  0x0000FFF0                // RG_W1_BBTX_SEQ_RSV[15..4]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_SEQ_RSV_SHFT  4
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_CLK_CAL_BT_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_CLK_CAL_BT_MASK 0x0000000C                // RG_W1_BBTX_CLK_CAL_BT[3..2]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_CLK_CAL_BT_SHFT 2
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_CLK_CAL_WF_ADDR CONN_AFE_CTL_RG_WBG_WF1_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_CLK_CAL_WF_MASK 0x00000003                // RG_W1_BBTX_CLK_CAL_WF[1..0]
#define CONN_AFE_CTL_RG_WBG_WF1_TX_04_RG_W1_BBTX_CLK_CAL_WF_SHFT 0

/* =====================================================================================

  ---RGS_WBG_WF1_TXCAL (0x18041000 + 0x09C)---

    RGS_W1_Es_readout_I_RO[11..0] - (RO) WFTX I channel MSB error sorce readout bit
    RGS_W1_Es_overflow_I_RO[12]  - (RO) WFTX I channel overflow flag
    RGS_W1_cal_done_I_RO[13]     - (RO) WFTX I channel calibraton done flag
    RGS_W1_WBG_WF_TXCAL_I_RO[15..14] - (RO) None
    RGS_W1_Es_readout_Q_RO[27..16] - (RO) WFTX Q channel MSB error sorce readout bit
    RGS_W1_Es_overflow_Q_RO[28]  - (RO) WFTX Q channel overflow flag
    RGS_W1_cal_done_Q_RO[29]     - (RO) WFTX Q channel calibraton done flag
    RGS_W1_WBG_WF_TXCAL_Q_RO[31..30] - (RO) None

 =====================================================================================*/
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_WBG_WF_TXCAL_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_WBG_WF_TXCAL_Q_RO_MASK 0xC0000000                // RGS_W1_WBG_WF_TXCAL_Q_RO[31..30]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_WBG_WF_TXCAL_Q_RO_SHFT 30
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_cal_done_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_cal_done_Q_RO_MASK 0x20000000                // RGS_W1_cal_done_Q_RO[29]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_cal_done_Q_RO_SHFT 29
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_overflow_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_overflow_Q_RO_MASK 0x10000000                // RGS_W1_Es_overflow_Q_RO[28]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_overflow_Q_RO_SHFT 28
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_readout_Q_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_readout_Q_RO_MASK 0x0FFF0000                // RGS_W1_Es_readout_Q_RO[27..16]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_readout_Q_RO_SHFT 16
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_WBG_WF_TXCAL_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_WBG_WF_TXCAL_I_RO_MASK 0x0000C000                // RGS_W1_WBG_WF_TXCAL_I_RO[15..14]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_WBG_WF_TXCAL_I_RO_SHFT 14
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_cal_done_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_cal_done_I_RO_MASK 0x00002000                // RGS_W1_cal_done_I_RO[13]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_cal_done_I_RO_SHFT 13
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_overflow_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_overflow_I_RO_MASK 0x00001000                // RGS_W1_Es_overflow_I_RO[12]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_overflow_I_RO_SHFT 12
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_readout_I_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_readout_I_RO_MASK 0x00000FFF                // RGS_W1_Es_readout_I_RO[11..0]
#define CONN_AFE_CTL_RGS_WBG_WF1_TXCAL_RGS_W1_Es_readout_I_RO_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF2_RX_01 (0x18041000 + 0x0A0)---

    RG_WBG_WF2_RX_01[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF2_RX_01_RG_WBG_WF2_RX_01_ADDR    CONN_AFE_CTL_RG_WBG_WF2_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF2_RX_01_RG_WBG_WF2_RX_01_MASK    0xFFFFFFFF                // RG_WBG_WF2_RX_01[31..0]
#define CONN_AFE_CTL_RG_WBG_WF2_RX_01_RG_WBG_WF2_RX_01_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF2_RX_02 (0x18041000 + 0x0A4)---

    RG_WBG_WF2_RX_02[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF2_RX_02_RG_WBG_WF2_RX_02_ADDR    CONN_AFE_CTL_RG_WBG_WF2_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF2_RX_02_RG_WBG_WF2_RX_02_MASK    0xFFFFFFFF                // RG_WBG_WF2_RX_02[31..0]
#define CONN_AFE_CTL_RG_WBG_WF2_RX_02_RG_WBG_WF2_RX_02_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF2_TX_01 (0x18041000 + 0x0A8)---

    RG_WBG_WF2_TX_01[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF2_TX_01_RG_WBG_WF2_TX_01_ADDR    CONN_AFE_CTL_RG_WBG_WF2_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF2_TX_01_RG_WBG_WF2_TX_01_MASK    0xFFFFFFFF                // RG_WBG_WF2_TX_01[31..0]
#define CONN_AFE_CTL_RG_WBG_WF2_TX_01_RG_WBG_WF2_TX_01_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF2_TX_02 (0x18041000 + 0x0AC)---

    RG_WBG_WF2_TX_02[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF2_TX_02_RG_WBG_WF2_TX_02_ADDR    CONN_AFE_CTL_RG_WBG_WF2_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF2_TX_02_RG_WBG_WF2_TX_02_MASK    0xFFFFFFFF                // RG_WBG_WF2_TX_02[31..0]
#define CONN_AFE_CTL_RG_WBG_WF2_TX_02_RG_WBG_WF2_TX_02_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF2_TX_03 (0x18041000 + 0x0B0)---

    RG_WBG_WF2_TX_03[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF2_TX_03_RG_WBG_WF2_TX_03_ADDR    CONN_AFE_CTL_RG_WBG_WF2_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF2_TX_03_RG_WBG_WF2_TX_03_MASK    0xFFFFFFFF                // RG_WBG_WF2_TX_03[31..0]
#define CONN_AFE_CTL_RG_WBG_WF2_TX_03_RG_WBG_WF2_TX_03_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF2_TX_04 (0x18041000 + 0x0B4)---

    RG_WBG_WF2_TX_04[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF2_TX_04_RG_WBG_WF2_TX_04_ADDR    CONN_AFE_CTL_RG_WBG_WF2_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF2_TX_04_RG_WBG_WF2_TX_04_MASK    0xFFFFFFFF                // RG_WBG_WF2_TX_04[31..0]
#define CONN_AFE_CTL_RG_WBG_WF2_TX_04_RG_WBG_WF2_TX_04_SHFT    0

/* =====================================================================================

  ---RGS_WBG_WF2_TXCAL (0x18041000 + 0x0B8)---

    RGS_WBG_WF2_TXCAL_RO[31..0]  - (RO) None

 =====================================================================================*/
#define CONN_AFE_CTL_RGS_WBG_WF2_TXCAL_RGS_WBG_WF2_TXCAL_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF2_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF2_TXCAL_RGS_WBG_WF2_TXCAL_RO_MASK 0xFFFFFFFF                // RGS_WBG_WF2_TXCAL_RO[31..0]
#define CONN_AFE_CTL_RGS_WBG_WF2_TXCAL_RGS_WBG_WF2_TXCAL_RO_SHFT 0

/* =====================================================================================

  ---RG_WBG_WF3_RX_01 (0x18041000 + 0x0BC)---

    RG_WBG_WF3_RX_01[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF3_RX_01_RG_WBG_WF3_RX_01_ADDR    CONN_AFE_CTL_RG_WBG_WF3_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF3_RX_01_RG_WBG_WF3_RX_01_MASK    0xFFFFFFFF                // RG_WBG_WF3_RX_01[31..0]
#define CONN_AFE_CTL_RG_WBG_WF3_RX_01_RG_WBG_WF3_RX_01_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF3_RX_02 (0x18041000 + 0x0C0)---

    RG_WBG_WF3_RX_02[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF3_RX_02_RG_WBG_WF3_RX_02_ADDR    CONN_AFE_CTL_RG_WBG_WF3_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF3_RX_02_RG_WBG_WF3_RX_02_MASK    0xFFFFFFFF                // RG_WBG_WF3_RX_02[31..0]
#define CONN_AFE_CTL_RG_WBG_WF3_RX_02_RG_WBG_WF3_RX_02_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF3_TX_01 (0x18041000 + 0x0C4)---

    RG_WBG_WF3_TX_01[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF3_TX_01_RG_WBG_WF3_TX_01_ADDR    CONN_AFE_CTL_RG_WBG_WF3_TX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_WF3_TX_01_RG_WBG_WF3_TX_01_MASK    0xFFFFFFFF                // RG_WBG_WF3_TX_01[31..0]
#define CONN_AFE_CTL_RG_WBG_WF3_TX_01_RG_WBG_WF3_TX_01_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF3_TX_02 (0x18041000 + 0x0C8)---

    RG_WBG_WF3_TX_02[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF3_TX_02_RG_WBG_WF3_TX_02_ADDR    CONN_AFE_CTL_RG_WBG_WF3_TX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_WF3_TX_02_RG_WBG_WF3_TX_02_MASK    0xFFFFFFFF                // RG_WBG_WF3_TX_02[31..0]
#define CONN_AFE_CTL_RG_WBG_WF3_TX_02_RG_WBG_WF3_TX_02_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF3_TX_03 (0x18041000 + 0x0CC)---

    RG_WBG_WF3_TX_03[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF3_TX_03_RG_WBG_WF3_TX_03_ADDR    CONN_AFE_CTL_RG_WBG_WF3_TX_03_ADDR
#define CONN_AFE_CTL_RG_WBG_WF3_TX_03_RG_WBG_WF3_TX_03_MASK    0xFFFFFFFF                // RG_WBG_WF3_TX_03[31..0]
#define CONN_AFE_CTL_RG_WBG_WF3_TX_03_RG_WBG_WF3_TX_03_SHFT    0

/* =====================================================================================

  ---RG_WBG_WF3_TX_04 (0x18041000 + 0x0D0)---

    RG_WBG_WF3_TX_04[31..0]      - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_WF3_TX_04_RG_WBG_WF3_TX_04_ADDR    CONN_AFE_CTL_RG_WBG_WF3_TX_04_ADDR
#define CONN_AFE_CTL_RG_WBG_WF3_TX_04_RG_WBG_WF3_TX_04_MASK    0xFFFFFFFF                // RG_WBG_WF3_TX_04[31..0]
#define CONN_AFE_CTL_RG_WBG_WF3_TX_04_RG_WBG_WF3_TX_04_SHFT    0

/* =====================================================================================

  ---RGS_WBG_WF3_TXCAL (0x18041000 + 0x0D4)---

    RGS_WBG_WF3_TXCAL_RO[31..0]  - (RO) None

 =====================================================================================*/
#define CONN_AFE_CTL_RGS_WBG_WF3_TXCAL_RGS_WBG_WF3_TXCAL_RO_ADDR CONN_AFE_CTL_RGS_WBG_WF3_TXCAL_ADDR
#define CONN_AFE_CTL_RGS_WBG_WF3_TXCAL_RGS_WBG_WF3_TXCAL_RO_MASK 0xFFFFFFFF                // RGS_WBG_WF3_TXCAL_RO[31..0]
#define CONN_AFE_CTL_RGS_WBG_WF3_TXCAL_RGS_WBG_WF3_TXCAL_RO_SHFT 0

/* =====================================================================================

  ---RG_RXDS_FLT_01 (0x18041000 + 0x0D8)---

    RG_AFE_RXDS_AVG_DC_MANU_VALUE[11..0] - (RW) manual DC offset value
    RG_AFE_RXDS_AVG_DC_MANU_IQ_SEL[12] - (RW) set manual DC offset value of IQ select. 0: for Q; 1: for I
    RG_AFE_RXDS_AVG_DC_MANU_PATH_SEL[13] - (RW) set manual DC offset value of path select. 
                                     0: path 0 for BW20/40/80/160; 1: path1 for BW160
    RG_AFE_RXDS_AVG_DC_MANU[14]  - (RW) apply manual DC offset value
    RG_AFE_RXDS_AVG_DC_EN[15]    - (RW) enable dc offset calculation module
    RG_AFE_RXDS_AVG_DC_RST[16]   - (RW) reset dc offset calculation result and re-cal
    RG_AFE_RXDS_FLT_EN[17]       - (RW) enable data path of filter
    RG_AFE_RXDS_FLT_RST[18]      - (RW) reset date path of filter
    RG_AFE_RXDS_FLT_RSV0[22..19] - (RW) RSVD
    RG_AFE_RXDS_CKGEN_CONFG_EN[23] - (RW) set clock generate config
    RG_AFE_RXDS_CKGEN_CONFG_SEL[31..24] - (RW) [intlv_en,cic4_en,cic5_en]
                                     60978:  [1,0,0][1,1,0][1,0,1]@640MS/s     adcin->8'b00_01_01_00
                                             [0,1,0][0,0,1]       @320MS/s     adcin->8'b01_01_01_01  
                                             [0,1,0][0,0,1]       @160MS/s     adcin->8'b10_10_10_10
                                             [1,1,1]              @640MS/s     adcin->8'b00_01_01_01
                                             [0,1,1][0,1,0]       @320MS/s     adcin->8'b01_01_10_10
                                             [0,1,1][0,1,0]       @160MS/s     adcin->8'b10_10_11_11
                                     X19/P18:[0,0,1]              @320/160MS/s adcin->8'b00_00_00_00
                                             [0,1,0][0,0,1]       @160/80MS/s  adcin->8'b01_01_01_01  
                                             [0,1,0][0,0,1]       @80/40MS/s   adcin->8'b10_10_10_10
                                             [0,1,1]              @320/160MS/s adcin->8'b00_01_01_01
                                             [0,1,1][0,1,0]       @160/80MS/s  adcin->8'b01_01_10_10
                                             [0,1,1][0,1,0]       @80/40MS/s   adcin->8'b10_10_11_11

 =====================================================================================*/
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_CKGEN_CONFG_SEL_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_CKGEN_CONFG_SEL_MASK 0xFF000000                // RG_AFE_RXDS_CKGEN_CONFG_SEL[31..24]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_CKGEN_CONFG_SEL_SHFT 24
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_CKGEN_CONFG_EN_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_CKGEN_CONFG_EN_MASK 0x00800000                // RG_AFE_RXDS_CKGEN_CONFG_EN[23]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_CKGEN_CONFG_EN_SHFT 23
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_RSV0_ADDR  CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_RSV0_MASK  0x00780000                // RG_AFE_RXDS_FLT_RSV0[22..19]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_RSV0_SHFT  19
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_RST_ADDR   CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_RST_MASK   0x00040000                // RG_AFE_RXDS_FLT_RST[18]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_RST_SHFT   18
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_EN_ADDR    CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_EN_MASK    0x00020000                // RG_AFE_RXDS_FLT_EN[17]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_FLT_EN_SHFT    17
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_RST_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_RST_MASK 0x00010000                // RG_AFE_RXDS_AVG_DC_RST[16]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_RST_SHFT 16
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_EN_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_EN_MASK 0x00008000                // RG_AFE_RXDS_AVG_DC_EN[15]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_EN_SHFT 15
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_MASK 0x00004000                // RG_AFE_RXDS_AVG_DC_MANU[14]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_SHFT 14
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_PATH_SEL_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_PATH_SEL_MASK 0x00002000                // RG_AFE_RXDS_AVG_DC_MANU_PATH_SEL[13]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_PATH_SEL_SHFT 13
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_IQ_SEL_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_IQ_SEL_MASK 0x00001000                // RG_AFE_RXDS_AVG_DC_MANU_IQ_SEL[12]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_IQ_SEL_SHFT 12
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_VALUE_ADDR CONN_AFE_CTL_RG_RXDS_FLT_01_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_VALUE_MASK 0x00000FFF                // RG_AFE_RXDS_AVG_DC_MANU_VALUE[11..0]
#define CONN_AFE_CTL_RG_RXDS_FLT_01_RG_AFE_RXDS_AVG_DC_MANU_VALUE_SHFT 0

/* =====================================================================================

  ---RG_RXDS_FLT_02 (0x18041000 + 0x0DC)---

    RO_AFE_RXDS_AVG_DC_VALUE_RO[11..0] - (RO) read out calculation dc offset result
    RG_AFE_RXDS_AVG_DC_RO_IQ_SEL[12] - (RW) set read out avg dc IQ
    RG_AFE_RXDS_AVG_DC_RO_PATH_SEL[13] - (RW) set read out avg dc path
    RG_AFE_RXDS_RXADC_OUT_FORMAT[14] - (RW) 1: mapping to signed rxds_flt out formate
    RG_AFE_RXDS_RXADC_IN_FORMAT[15] - (RW) 1: mapping to signed adc formate
    RG_AFE_RXDS_RXADC_IQ_SWAP[16] - (RW) swap I/Q
    RG_AFE_RXDS_RXADC_CK_INV[17] - (RW) ck inveter
    RG_AFE_RXDS_FLT_INTLV_SWH[18] - (RW) switch p1/p0 interleaving path
    RG_AFE_RXDS_FLT_INTLV_EN[19] - (RW) dcod use 2 path for interleaving
    RG_AFE_RXDS_DCOCOM_EN[20]    - (RW) enable dc offset compensate
    RG_AFE_RXDS_FLT_CIC4_EN[21]  - (RW) 1'b1: use CIC4 filter; 1'b0: bypass CIC4 filter
    RG_AFE_RXDS_FLT_CIC5_EN[22]  - (RW) 1'b1: use CIC5 filter; 1'b0: bypass CIC5 filter
    RG_AFE_RXDS_FLT_RSV1[31..23] - (RW) RSVD

 =====================================================================================*/
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_RSV1_ADDR  CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_RSV1_MASK  0xFF800000                // RG_AFE_RXDS_FLT_RSV1[31..23]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_RSV1_SHFT  23
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_CIC5_EN_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_CIC5_EN_MASK 0x00400000                // RG_AFE_RXDS_FLT_CIC5_EN[22]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_CIC5_EN_SHFT 22
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_CIC4_EN_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_CIC4_EN_MASK 0x00200000                // RG_AFE_RXDS_FLT_CIC4_EN[21]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_CIC4_EN_SHFT 21
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_DCOCOM_EN_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_DCOCOM_EN_MASK 0x00100000                // RG_AFE_RXDS_DCOCOM_EN[20]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_DCOCOM_EN_SHFT 20
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_INTLV_EN_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_INTLV_EN_MASK 0x00080000                // RG_AFE_RXDS_FLT_INTLV_EN[19]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_INTLV_EN_SHFT 19
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_INTLV_SWH_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_INTLV_SWH_MASK 0x00040000                // RG_AFE_RXDS_FLT_INTLV_SWH[18]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_FLT_INTLV_SWH_SHFT 18
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_CK_INV_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_CK_INV_MASK 0x00020000                // RG_AFE_RXDS_RXADC_CK_INV[17]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_CK_INV_SHFT 17
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_IQ_SWAP_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_IQ_SWAP_MASK 0x00010000                // RG_AFE_RXDS_RXADC_IQ_SWAP[16]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_IQ_SWAP_SHFT 16
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_IN_FORMAT_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_IN_FORMAT_MASK 0x00008000                // RG_AFE_RXDS_RXADC_IN_FORMAT[15]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_IN_FORMAT_SHFT 15
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_OUT_FORMAT_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_OUT_FORMAT_MASK 0x00004000                // RG_AFE_RXDS_RXADC_OUT_FORMAT[14]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_RXADC_OUT_FORMAT_SHFT 14
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_AVG_DC_RO_PATH_SEL_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_AVG_DC_RO_PATH_SEL_MASK 0x00002000                // RG_AFE_RXDS_AVG_DC_RO_PATH_SEL[13]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_AVG_DC_RO_PATH_SEL_SHFT 13
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_AVG_DC_RO_IQ_SEL_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_AVG_DC_RO_IQ_SEL_MASK 0x00001000                // RG_AFE_RXDS_AVG_DC_RO_IQ_SEL[12]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RG_AFE_RXDS_AVG_DC_RO_IQ_SEL_SHFT 12
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RO_AFE_RXDS_AVG_DC_VALUE_RO_ADDR CONN_AFE_CTL_RG_RXDS_FLT_02_ADDR
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RO_AFE_RXDS_AVG_DC_VALUE_RO_MASK 0x00000FFF                // RO_AFE_RXDS_AVG_DC_VALUE_RO[11..0]
#define CONN_AFE_CTL_RG_RXDS_FLT_02_RO_AFE_RXDS_AVG_DC_VALUE_RO_SHFT 0

/* =====================================================================================

  ---RG_SIN_GEN_01 (0x18041000 + 0x0E0)---

    RG_AFE_TXPAT_GAIN_Q[2..0]    - (RW) Log:     0: 1    1: 1/2    2: 1/4    3: 1/8    4: 1/16   5: 1/32   6: 1/32   7: 1/32
                                     Linear: 0: 1    1: 7/8    2: 6/8    3: 5/8    4: 4/8     5: 3/8     6: 2/8     7: 1/8
    RESERVED3[3]                 - (RO) Reserved bits
    RG_AFE_TXPAT_GAIN_I[6..4]    - (RW) Log:     0: 1    1: 1/2    2: 1/4    3: 1/8    4: 1/16   5: 1/32   6: 1/32   7: 1/32
                                     Linear: 0: 1    1: 7/8    2: 6/8    3: 5/8    4: 4/8     5: 3/8     6: 2/8     7: 1/8
    RESERVED7[7]                 - (RO) Reserved bits
    RG_AFE_TXPAT_MODE_Q[11..8]   - (RW) Sine_gen mode for q
                                     0: single-tone
                                     1: two-tone
                                     2: ramp up
                                     3: ramp down
                                     4:  lfsr24
                                     5:  lfsr16
                                     6:  lfsr12
                                     7:  lfsr8
    RG_AFE_TXPAT_MODE_I[15..12]  - (RW) Sine_gen mode for i
                                     0: single-tone
                                     1: two-tone
                                     2: ramp up
                                     3: ramp down
                                     4:  lfsr24
                                     5:  lfsr16
                                     6:  lfsr12
                                     7:  lfsr8
    RG_AFE_TXPAT_GAIN_MODE[16]   - (RW) GAIN mode(Set 0 for ACD DAC test)
                                     0: Linear
                                     1: Log
    RG_AFE_TXPAT_S2P_EN[17]      - (RW) S2P mode enable
                                     0: 12 bit sine_gen
                                     1: 24 bit sine_gen
    RG_AFE_TXPAT_CK_SEL[19..18]  - (RW) SINGEN_CK_SEL
                                     2'b00: AD_WBG_WF_DA_CKO_TXSIN
                                     2'b01: AD_WBG_BT0_DA_CKO_TXSIN
                                     2'b10: AD_WBG_BT1_DA_CKO
                                     2'b11: 0
    RG_AFE_TXPAT_CLKDIV_N[21..20] - (RW) global freq div by 1024^n
    RESERVED22[23..22]           - (RO) Reserved bits
    RG_AFE_TXPAT_FIX_EN_Q[24]    - (RW) Output fix value singen_fix[9:0]
    RG_AFE_TXPAT_FIX_EN_I[25]    - (RW) Output fix value singen_fix[9:0]
    RG_AFE_TXPAT_EN[26]          - (RW) Sine_gen enable
    RG_SINGEN_EN_MUX_WF3[27]     - (RW) Sine_gen enable for WF3 mux
                                     0: from modem
                                     1: from AFE_TXPAT
    RG_SINGEN_EN_MUX_WF2[28]     - (RW) Sine_gen enable for WF2 mux
                                     0: from modem
                                     1: from AFE_TXPAT
    RG_SINGEN_EN_MUX_WF1[29]     - (RW) Sine_gen enable for WF1 mux
                                     0: from modem
                                     1: from AFE_TXPAT
    RG_SINGEN_EN_MUX_WF0[30]     - (RW) Sine_gen enable for WF0 mux
                                     0: from modem
                                     1: from AFE_TXPAT
    RG_SINGEN_EN_MUX_BT[31]      - (RW) Sine_gen enable for BT mux
                                     0: from modem
                                     1: from AFE_TXPAT

 =====================================================================================*/
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_BT_ADDR    CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_BT_MASK    0x80000000                // RG_SINGEN_EN_MUX_BT[31]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_BT_SHFT    31
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF0_ADDR   CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF0_MASK   0x40000000                // RG_SINGEN_EN_MUX_WF0[30]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF0_SHFT   30
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF1_ADDR   CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF1_MASK   0x20000000                // RG_SINGEN_EN_MUX_WF1[29]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF1_SHFT   29
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF2_ADDR   CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF2_MASK   0x10000000                // RG_SINGEN_EN_MUX_WF2[28]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF2_SHFT   28
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF3_ADDR   CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF3_MASK   0x08000000                // RG_SINGEN_EN_MUX_WF3[27]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_SINGEN_EN_MUX_WF3_SHFT   27
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_EN_ADDR        CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_EN_MASK        0x04000000                // RG_AFE_TXPAT_EN[26]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_EN_SHFT        26
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_FIX_EN_I_ADDR  CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_FIX_EN_I_MASK  0x02000000                // RG_AFE_TXPAT_FIX_EN_I[25]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_FIX_EN_I_SHFT  25
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_FIX_EN_Q_ADDR  CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_FIX_EN_Q_MASK  0x01000000                // RG_AFE_TXPAT_FIX_EN_Q[24]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_FIX_EN_Q_SHFT  24
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_CLKDIV_N_ADDR  CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_CLKDIV_N_MASK  0x00300000                // RG_AFE_TXPAT_CLKDIV_N[21..20]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_CLKDIV_N_SHFT  20
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_CK_SEL_ADDR    CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_CK_SEL_MASK    0x000C0000                // RG_AFE_TXPAT_CK_SEL[19..18]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_CK_SEL_SHFT    18
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_S2P_EN_ADDR    CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_S2P_EN_MASK    0x00020000                // RG_AFE_TXPAT_S2P_EN[17]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_S2P_EN_SHFT    17
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_MODE_ADDR CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_MODE_MASK 0x00010000                // RG_AFE_TXPAT_GAIN_MODE[16]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_MODE_SHFT 16
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_MODE_I_ADDR    CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_MODE_I_MASK    0x0000F000                // RG_AFE_TXPAT_MODE_I[15..12]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_MODE_I_SHFT    12
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_MODE_Q_ADDR    CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_MODE_Q_MASK    0x00000F00                // RG_AFE_TXPAT_MODE_Q[11..8]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_MODE_Q_SHFT    8
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_I_ADDR    CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_I_MASK    0x00000070                // RG_AFE_TXPAT_GAIN_I[6..4]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_I_SHFT    4
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_Q_ADDR    CONN_AFE_CTL_RG_SIN_GEN_01_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_Q_MASK    0x00000007                // RG_AFE_TXPAT_GAIN_Q[2..0]
#define CONN_AFE_CTL_RG_SIN_GEN_01_RG_AFE_TXPAT_GAIN_Q_SHFT    0

/* =====================================================================================

  ---RG_SIN_GEN_02 (0x18041000 + 0x0E4)---

    RG_AFE_TXPAT_FIX_Q[11..0]    - (RW) Output fix value
    RESERVED12[15..12]           - (RO) Reserved bits
    RG_AFE_TXPAT_FIX_I[27..16]   - (RW) Output fix value
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_AFE_CTL_RG_SIN_GEN_02_RG_AFE_TXPAT_FIX_I_ADDR     CONN_AFE_CTL_RG_SIN_GEN_02_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_02_RG_AFE_TXPAT_FIX_I_MASK     0x0FFF0000                // RG_AFE_TXPAT_FIX_I[27..16]
#define CONN_AFE_CTL_RG_SIN_GEN_02_RG_AFE_TXPAT_FIX_I_SHFT     16
#define CONN_AFE_CTL_RG_SIN_GEN_02_RG_AFE_TXPAT_FIX_Q_ADDR     CONN_AFE_CTL_RG_SIN_GEN_02_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_02_RG_AFE_TXPAT_FIX_Q_MASK     0x00000FFF                // RG_AFE_TXPAT_FIX_Q[11..0]
#define CONN_AFE_CTL_RG_SIN_GEN_02_RG_AFE_TXPAT_FIX_Q_SHFT     0

/* =====================================================================================

  ---RG_SIN_GEN_03 (0x18041000 + 0x0E8)---

    RG_AFE_TXPAT_CLKDIV_Q[9..0]  - (RW) Sine table data update freqency = WB_DAC_CK/clkdiv
    RESERVED10[15..10]           - (RO) Reserved bits
    RG_AFE_TXPAT_CLKDIV_I[25..16] - (RW) Sine table data update freqency = WB_DAC_CK/clkdiv
    RESERVED26[31..26]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_AFE_CTL_RG_SIN_GEN_03_RG_AFE_TXPAT_CLKDIV_I_ADDR  CONN_AFE_CTL_RG_SIN_GEN_03_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_03_RG_AFE_TXPAT_CLKDIV_I_MASK  0x03FF0000                // RG_AFE_TXPAT_CLKDIV_I[25..16]
#define CONN_AFE_CTL_RG_SIN_GEN_03_RG_AFE_TXPAT_CLKDIV_I_SHFT  16
#define CONN_AFE_CTL_RG_SIN_GEN_03_RG_AFE_TXPAT_CLKDIV_Q_ADDR  CONN_AFE_CTL_RG_SIN_GEN_03_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_03_RG_AFE_TXPAT_CLKDIV_Q_MASK  0x000003FF                // RG_AFE_TXPAT_CLKDIV_Q[9..0]
#define CONN_AFE_CTL_RG_SIN_GEN_03_RG_AFE_TXPAT_CLKDIV_Q_SHFT  0

/* =====================================================================================

  ---RG_SIN_GEN_04 (0x18041000 + 0x0EC)---

    RG_AFE_TXPAT_INC_STEP0_Q[11..0] - (RW) Sine Tone Freq = WB_DAC_CK*inc_step/clkdiv/4096
    RESERVED12[15..12]           - (RO) Reserved bits
    RG_AFE_TXPAT_INC_STEP0_I[27..16] - (RW) Sine Tone Freq = WB_DAC_CK*inc_step/clkdiv/4096
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_AFE_CTL_RG_SIN_GEN_04_RG_AFE_TXPAT_INC_STEP0_I_ADDR CONN_AFE_CTL_RG_SIN_GEN_04_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_04_RG_AFE_TXPAT_INC_STEP0_I_MASK 0x0FFF0000                // RG_AFE_TXPAT_INC_STEP0_I[27..16]
#define CONN_AFE_CTL_RG_SIN_GEN_04_RG_AFE_TXPAT_INC_STEP0_I_SHFT 16
#define CONN_AFE_CTL_RG_SIN_GEN_04_RG_AFE_TXPAT_INC_STEP0_Q_ADDR CONN_AFE_CTL_RG_SIN_GEN_04_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_04_RG_AFE_TXPAT_INC_STEP0_Q_MASK 0x00000FFF                // RG_AFE_TXPAT_INC_STEP0_Q[11..0]
#define CONN_AFE_CTL_RG_SIN_GEN_04_RG_AFE_TXPAT_INC_STEP0_Q_SHFT 0

/* =====================================================================================

  ---RG_SIN_GEN_05 (0x18041000 + 0x0F0)---

    RG_AFE_TXPAT_START_ADDR0_Q[11..0] - (RW) Tx sine wave auto generate start address for q
    RESERVED12[15..12]           - (RO) Reserved bits
    RG_AFE_TXPAT_START_ADDR0_I[27..16] - (RW) Tx sine wave auto generate start address for i
    RESERVED28[31..28]           - (RO) Reserved bits

 =====================================================================================*/
#define CONN_AFE_CTL_RG_SIN_GEN_05_RG_AFE_TXPAT_START_ADDR0_I_ADDR CONN_AFE_CTL_RG_SIN_GEN_05_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_05_RG_AFE_TXPAT_START_ADDR0_I_MASK 0x0FFF0000                // RG_AFE_TXPAT_START_ADDR0_I[27..16]
#define CONN_AFE_CTL_RG_SIN_GEN_05_RG_AFE_TXPAT_START_ADDR0_I_SHFT 16
#define CONN_AFE_CTL_RG_SIN_GEN_05_RG_AFE_TXPAT_START_ADDR0_Q_ADDR CONN_AFE_CTL_RG_SIN_GEN_05_ADDR
#define CONN_AFE_CTL_RG_SIN_GEN_05_RG_AFE_TXPAT_START_ADDR0_Q_MASK 0x00000FFF                // RG_AFE_TXPAT_START_ADDR0_Q[11..0]
#define CONN_AFE_CTL_RG_SIN_GEN_05_RG_AFE_TXPAT_START_ADDR0_Q_SHFT 0

/* =====================================================================================

  ---RG_PLL_STB_TIME (0x18041000 + 0x0F4)---

    RG_WBG_WPLL_STB_TIME[14..0]  - (RW) Default : 1313 osc_ck cycle
                                     (about 50us + 1 % margin)
    PLL_STB_RSV2[15]             - (RW) STB_reserved2
    RG_WBG_BPLL_STB_TIME[30..16] - (RW) Default : 788 osc_ck cycle
                                     (about 30us + 1 % margin)
    PLL_STB_RSV1[31]             - (RW) STB_reserved1

 =====================================================================================*/
#define CONN_AFE_CTL_RG_PLL_STB_TIME_PLL_STB_RSV1_ADDR         CONN_AFE_CTL_RG_PLL_STB_TIME_ADDR
#define CONN_AFE_CTL_RG_PLL_STB_TIME_PLL_STB_RSV1_MASK         0x80000000                // PLL_STB_RSV1[31]
#define CONN_AFE_CTL_RG_PLL_STB_TIME_PLL_STB_RSV1_SHFT         31
#define CONN_AFE_CTL_RG_PLL_STB_TIME_RG_WBG_BPLL_STB_TIME_ADDR CONN_AFE_CTL_RG_PLL_STB_TIME_ADDR
#define CONN_AFE_CTL_RG_PLL_STB_TIME_RG_WBG_BPLL_STB_TIME_MASK 0x7FFF0000                // RG_WBG_BPLL_STB_TIME[30..16]
#define CONN_AFE_CTL_RG_PLL_STB_TIME_RG_WBG_BPLL_STB_TIME_SHFT 16
#define CONN_AFE_CTL_RG_PLL_STB_TIME_PLL_STB_RSV2_ADDR         CONN_AFE_CTL_RG_PLL_STB_TIME_ADDR
#define CONN_AFE_CTL_RG_PLL_STB_TIME_PLL_STB_RSV2_MASK         0x00008000                // PLL_STB_RSV2[15]
#define CONN_AFE_CTL_RG_PLL_STB_TIME_PLL_STB_RSV2_SHFT         15
#define CONN_AFE_CTL_RG_PLL_STB_TIME_RG_WBG_WPLL_STB_TIME_ADDR CONN_AFE_CTL_RG_PLL_STB_TIME_ADDR
#define CONN_AFE_CTL_RG_PLL_STB_TIME_RG_WBG_WPLL_STB_TIME_MASK 0x00007FFF                // RG_WBG_WPLL_STB_TIME[14..0]
#define CONN_AFE_CTL_RG_PLL_STB_TIME_RG_WBG_WPLL_STB_TIME_SHFT 0

/* =====================================================================================

  ---RG_WBG_DFS_RX_01 (0x18041000 + 0x0F8)---

    RG_WBG_DFS_01[31..0]         - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_DFS_RX_01_RG_WBG_DFS_01_ADDR       CONN_AFE_CTL_RG_WBG_DFS_RX_01_ADDR
#define CONN_AFE_CTL_RG_WBG_DFS_RX_01_RG_WBG_DFS_01_MASK       0xFFFFFFFF                // RG_WBG_DFS_01[31..0]
#define CONN_AFE_CTL_RG_WBG_DFS_RX_01_RG_WBG_DFS_01_SHFT       0

/* =====================================================================================

  ---RG_WBG_DFS_RX_02 (0x18041000 + 0x0FC)---

    RG_WBG_DFS_02[31..0]         - (RW) to be update

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_DFS_RX_02_RG_WBG_DFS_02_ADDR       CONN_AFE_CTL_RG_WBG_DFS_RX_02_ADDR
#define CONN_AFE_CTL_RG_WBG_DFS_RX_02_RG_WBG_DFS_02_MASK       0xFFFFFFFF                // RG_WBG_DFS_02[31..0]
#define CONN_AFE_CTL_RG_WBG_DFS_RX_02_RG_WBG_DFS_02_SHFT       0

/* =====================================================================================

  ---RG_WBG_GL5_01 (0x18041000 + 0x100)---

    RG_GL5_AD_LDO09_VSEL[2..0]   - (RW) 0.95V LDO tuning
                                     111:0.903
                                     110: 0.882
                                     101: 0.860
                                     100: 0.840 
                                     011: 0.815 (POR)
                                     010: 0.794
                                     001: 0.772
                                     000: 0.752
    RG_GL5_AD_VREF_SEL[5..3]     - (RW) VREF selection
                                     111: 0.918
                                     110: 0.898
                                     101: 0.875
                                     100: 0.855
                                     011: 0.827
                                     010: 0.807 (POR)
                                     001: 0.784
                                     000: 0.764
    RG_GL5_DUODRI[6]             - (RW) 1: reference gen doubled current
                                     0: reference gen normal current
    RG_GL5_RAW_OUT_EN[7]         - (RW) 1: Raw data out
                                     0: Normal data out
    RG_GL5_OUT_CLK_DIV_H4_L2[8]  - (RW) 1: output clock divided by 4
                                     0: output clock divided by 2
    RG_GL5_OUT_CLK_DIV_EN[9]     - (RW) 1: output clock divider enable 
                                     0: disable
    RG_GL5_AD_OUTPUT_EN[10]      - (RW) 1: output enable 
                                     0: output disable
    RG_GL5_AD_CK_OUT_RISE[11]    - (RW) 1: Output clock uses positive polarity
                                     0: Output clock uses negative polarity
    RG_GL5_AD_CH_DFF_RISE[12]    - (RW) 1: DFF sync clock uses positive polarity
                                     0: DFF sync clock uses negative polarity
    RG_GL5_AD_LDO_PUMP_ENB[13]   - (RW) 1: LDO pump disable
                                     0: LDO pump enable
    RG_GL5_AD_COMP_TAIL_MSB[14]  - (RW) 1: enlarge comparator tail transistor size for first 3 MSBs
                                     0: default size
    RG_GL5_AD_COMP_TAIL[15]      - (RW) 1: enlarge comparator tail transistor size
                                     0: default size
    RG_GL5_MODE_L1L5_SYNC_CLK[16] - (RW) 1: L1 and L5 dual band use external post-divider clock
                                     0: Internal
    RG_GL5_MODE_BT_GPS[17]       - (RW) 1: BT Mode for CLK Selection
                                     0: GPS Mode for CLK Selection (always 0 for GPS RX)
    RG_GL5_AD_EXT_CLK_SEL[18]    - (RW) 1: External clock source
                                     0: Internal PLL as clock
    RG_GL5_AD_QCH_EN[19]         - (RW) 1: Q channel enable
                                     0: Q channel disable
    RG_GL5_AD_ICH_EN[20]         - (RW) 1: I channel enable
                                     0: I channel disable
    RG_GL5_AD_VAR_CLKS[21]       - (RW) 1: variable clks
                                     0: fixed clks
    RG_GL5_AD_LSB_EN[22]         - (RW) 1: 13bit cycles conversion
                                     0: 10 bit cycles conversion
    RG_GL5_AD_VGEN_PUMP_EN[23]   - (RW) 1: reference gen pump enable
                                     0: reference gen pump disable
    RG_GL5_AD_NS_EN[24]          - (RW) 1: noise shaping enable
                                     0: noise shaping disable
    RG_WBG_GL5_01_RSV0[27..25]   - (RW)  xxx 
    RG_GL5_ADCKSEL[28]           - (RW) ADC Clock Divider control
                                     0: GPSADC normal mode clock=16MHz
                                     1: GPSADC normal mode clock=64MHz
    RG_GL5_AD_REF_EN[29]         - (RW) 1: Enable reference gen
                                     0: Disable referenc gen
    RG_GL5_AD_EN[30]             - (RW) 1: Enable ADC
                                     0: Disable ADC
    RG_GL5_RG_DA_Mode[31]        - (RW) 1: RG Mode
                                     0: DA Mode

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_RG_DA_Mode_ADDR      CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_RG_DA_Mode_MASK      0x80000000                // RG_GL5_RG_DA_Mode[31]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_RG_DA_Mode_SHFT      31
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_EN_ADDR           CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_EN_MASK           0x40000000                // RG_GL5_AD_EN[30]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_EN_SHFT           30
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_REF_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_REF_EN_MASK       0x20000000                // RG_GL5_AD_REF_EN[29]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_REF_EN_SHFT       29
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_ADCKSEL_ADDR         CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_ADCKSEL_MASK         0x10000000                // RG_GL5_ADCKSEL[28]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_ADCKSEL_SHFT         28
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_WBG_GL5_01_RSV0_ADDR     CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_WBG_GL5_01_RSV0_MASK     0x0E000000                // RG_WBG_GL5_01_RSV0[27..25]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_WBG_GL5_01_RSV0_SHFT     25
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_NS_EN_ADDR        CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_NS_EN_MASK        0x01000000                // RG_GL5_AD_NS_EN[24]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_NS_EN_SHFT        24
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VGEN_PUMP_EN_ADDR CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VGEN_PUMP_EN_MASK 0x00800000                // RG_GL5_AD_VGEN_PUMP_EN[23]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VGEN_PUMP_EN_SHFT 23
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LSB_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LSB_EN_MASK       0x00400000                // RG_GL5_AD_LSB_EN[22]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LSB_EN_SHFT       22
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VAR_CLKS_ADDR     CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VAR_CLKS_MASK     0x00200000                // RG_GL5_AD_VAR_CLKS[21]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VAR_CLKS_SHFT     21
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_ICH_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_ICH_EN_MASK       0x00100000                // RG_GL5_AD_ICH_EN[20]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_ICH_EN_SHFT       20
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_QCH_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_QCH_EN_MASK       0x00080000                // RG_GL5_AD_QCH_EN[19]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_QCH_EN_SHFT       19
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_EXT_CLK_SEL_ADDR  CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_EXT_CLK_SEL_MASK  0x00040000                // RG_GL5_AD_EXT_CLK_SEL[18]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_EXT_CLK_SEL_SHFT  18
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_MODE_BT_GPS_ADDR     CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_MODE_BT_GPS_MASK     0x00020000                // RG_GL5_MODE_BT_GPS[17]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_MODE_BT_GPS_SHFT     17
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_MODE_L1L5_SYNC_CLK_ADDR CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_MODE_L1L5_SYNC_CLK_MASK 0x00010000                // RG_GL5_MODE_L1L5_SYNC_CLK[16]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_MODE_L1L5_SYNC_CLK_SHFT 16
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_COMP_TAIL_ADDR    CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_COMP_TAIL_MASK    0x00008000                // RG_GL5_AD_COMP_TAIL[15]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_COMP_TAIL_SHFT    15
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_COMP_TAIL_MSB_ADDR CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_COMP_TAIL_MSB_MASK 0x00004000                // RG_GL5_AD_COMP_TAIL_MSB[14]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_COMP_TAIL_MSB_SHFT 14
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LDO_PUMP_ENB_ADDR CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LDO_PUMP_ENB_MASK 0x00002000                // RG_GL5_AD_LDO_PUMP_ENB[13]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LDO_PUMP_ENB_SHFT 13
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_CH_DFF_RISE_ADDR  CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_CH_DFF_RISE_MASK  0x00001000                // RG_GL5_AD_CH_DFF_RISE[12]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_CH_DFF_RISE_SHFT  12
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_CK_OUT_RISE_ADDR  CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_CK_OUT_RISE_MASK  0x00000800                // RG_GL5_AD_CK_OUT_RISE[11]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_CK_OUT_RISE_SHFT  11
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_OUTPUT_EN_ADDR    CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_OUTPUT_EN_MASK    0x00000400                // RG_GL5_AD_OUTPUT_EN[10]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_OUTPUT_EN_SHFT    10
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_OUT_CLK_DIV_EN_ADDR  CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_OUT_CLK_DIV_EN_MASK  0x00000200                // RG_GL5_OUT_CLK_DIV_EN[9]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_OUT_CLK_DIV_EN_SHFT  9
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_OUT_CLK_DIV_H4_L2_ADDR CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_OUT_CLK_DIV_H4_L2_MASK 0x00000100                // RG_GL5_OUT_CLK_DIV_H4_L2[8]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_OUT_CLK_DIV_H4_L2_SHFT 8
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_RAW_OUT_EN_ADDR      CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_RAW_OUT_EN_MASK      0x00000080                // RG_GL5_RAW_OUT_EN[7]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_RAW_OUT_EN_SHFT      7
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_DUODRI_ADDR          CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_DUODRI_MASK          0x00000040                // RG_GL5_DUODRI[6]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_DUODRI_SHFT          6
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VREF_SEL_ADDR     CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VREF_SEL_MASK     0x00000038                // RG_GL5_AD_VREF_SEL[5..3]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_VREF_SEL_SHFT     3
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LDO09_VSEL_ADDR   CONN_AFE_CTL_RG_WBG_GL5_01_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LDO09_VSEL_MASK   0x00000007                // RG_GL5_AD_LDO09_VSEL[2..0]
#define CONN_AFE_CTL_RG_WBG_GL5_01_RG_GL5_AD_LDO09_VSEL_SHFT   0

/* =====================================================================================

  ---RG_WBG_GL5_02 (0x18041000 + 0x104)---

    RG_WBG_GL5_02_RSV2[6..0]     - (RW)  xxx 
    RG_GL5_PREON_MODE[7]         - (RW) 0: normal 
                                     1: Ref pre-on mode
    RG_GL5_RX_TST_SEL[10..8]     - (RW) RX DC test
                                     000: MON_Buffer
                                     001: MON_AD
                                     Others: Not Used
    RG_GL5_RX_TST_EN[11]         - (RW) 1: for RX DC monitor enable
                                     0: disable
    RG_GL5_BUF_TSTSEL[13..12]    - (RW) ADBUF DC test
                                     00: LDO_0P98
                                     01: VICM
                                     10: VCMREF
                                     11: NO_USED
    RG_GL5_BUF_TST_EN[14]        - (RW) 1: for ADBUF DC monitor enable
                                     0: disable
    RG_WBG_GL5_02_RSV1[15]       - (RW)  xxx 
    RG_GL5_BUF_EN[16]            - (RW) ADBUF on/off manual control
                                     0: ADBUF manual off
                                     1: ADBUF manual on
    RG_GL5_BUFEN_MAN[17]         - (RW) ADBUF on/off manual mode enable
                                     0: normal mode, control by DA
                                     1: manual mode, control by RG
    RG_WBG_GL5_02_RSV0[20..18]   - (RW)  xxx 
    RG_GL5_V098_LDO_VSEL[23..21] - (RW) 0.98V LDO tuning
                                     111: 1.04
                                     110: 1.02
                                     101: 0.999
                                     100: 0.98  (POR)
                                     011: 0.958
                                     010: 0.941
                                     001: 0.92
                                     000: 0.9
    RG_GL5_ADBUF_VCM[25..24]     - (RW) ADBUF output VCM
                                     11: 0.5V
                                     10: 0.55V
                                     01: 0.6V(POR)
                                     00: 0.65V
    RG_GL5_BUF_IGEN_SEL[27..26]  - (RW) RX Top bias current tuning
                                     11:  I5u=4.06u (0.8X)
                                     10: I5u=5.07u (1X, POR)
                                     01: I5u=6.75u (1.33X)
                                     00: I5u=10.1u (2X)
    RG_GL5_AD_TST_EN[28]         - (RW) 1: AD DC monitor enable 
                                     0: AD DC monitor disable
    RG_GL5_AD_TST_SEL[31..29]    - (RW) AD DC monitored voltage selection
                                     000:VR branch 1 full reference
                                     001: VR branch 1 half reference
                                     010: VR branch 2 full reference
                                     011: VR branch 2  half reference   
                                     100: LDO_0P9V

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_AD_TST_SEL_ADDR      CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_AD_TST_SEL_MASK      0xE0000000                // RG_GL5_AD_TST_SEL[31..29]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_AD_TST_SEL_SHFT      29
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_AD_TST_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_AD_TST_EN_MASK       0x10000000                // RG_GL5_AD_TST_EN[28]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_AD_TST_EN_SHFT       28
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_IGEN_SEL_ADDR    CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_IGEN_SEL_MASK    0x0C000000                // RG_GL5_BUF_IGEN_SEL[27..26]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_IGEN_SEL_SHFT    26
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_ADBUF_VCM_ADDR       CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_ADBUF_VCM_MASK       0x03000000                // RG_GL5_ADBUF_VCM[25..24]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_ADBUF_VCM_SHFT       24
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_V098_LDO_VSEL_ADDR   CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_V098_LDO_VSEL_MASK   0x00E00000                // RG_GL5_V098_LDO_VSEL[23..21]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_V098_LDO_VSEL_SHFT   21
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV0_ADDR     CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV0_MASK     0x001C0000                // RG_WBG_GL5_02_RSV0[20..18]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV0_SHFT     18
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUFEN_MAN_ADDR       CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUFEN_MAN_MASK       0x00020000                // RG_GL5_BUFEN_MAN[17]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUFEN_MAN_SHFT       17
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_EN_ADDR          CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_EN_MASK          0x00010000                // RG_GL5_BUF_EN[16]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_EN_SHFT          16
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV1_ADDR     CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV1_MASK     0x00008000                // RG_WBG_GL5_02_RSV1[15]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV1_SHFT     15
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_TST_EN_ADDR      CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_TST_EN_MASK      0x00004000                // RG_GL5_BUF_TST_EN[14]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_TST_EN_SHFT      14
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_TSTSEL_ADDR      CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_TSTSEL_MASK      0x00003000                // RG_GL5_BUF_TSTSEL[13..12]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_BUF_TSTSEL_SHFT      12
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_RX_TST_EN_ADDR       CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_RX_TST_EN_MASK       0x00000800                // RG_GL5_RX_TST_EN[11]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_RX_TST_EN_SHFT       11
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_RX_TST_SEL_ADDR      CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_RX_TST_SEL_MASK      0x00000700                // RG_GL5_RX_TST_SEL[10..8]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_RX_TST_SEL_SHFT      8
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_PREON_MODE_ADDR      CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_PREON_MODE_MASK      0x00000080                // RG_GL5_PREON_MODE[7]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_GL5_PREON_MODE_SHFT      7
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV2_ADDR     CONN_AFE_CTL_RG_WBG_GL5_02_ADDR
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV2_MASK     0x0000007F                // RG_WBG_GL5_02_RSV2[6..0]
#define CONN_AFE_CTL_RG_WBG_GL5_02_RG_WBG_GL5_02_RSV2_SHFT     0

/* =====================================================================================

  ---RG_WBG_CTL_OCC (0x18041000 + 0x124)---

    RG_WBG_EN_WPLL_OCC[0]        - (RW) Directly trigger WPLL in OCC mode (when RG_OCC_PLL_SW = 1'b1)
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BPLL_OCC[1]        - (RW) Directly trigger BPLL in OCC mode  (when RG_OCC_PLL_SW = 1'b1)
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_XBUF_OCC[2]        - (RW) Directly trigger XBUF in OCC mode (when RG_OCC_PLL_SW = 1'b1)
                                     0: Disable
                                     1: Enable
    RG_WBG_EN_BG_OCC[3]          - (RW) Directly trigger BG in OCC mode  (when RG_OCC_PLL_SW = 1'b1)
                                     0: Disable
                                     1: Enable
    RG_WBG_CTL_OCC_RSV1[11..4]   - (RW) Reserved bits
    RG_WBG_CG_EN_AD_WF0TSSI[12]  - (RW) Source clock enable - WF0TSSI AD
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_AD_DFS[13]      - (RW) Source clock enable - DFS AD
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_DA_WF[14]       - (RW) Source clock enable - WF DA
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_AD_WF[15]       - (RW) Source clock enable - WF AD
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_DA_BT1[16]      - (RW) Source clock enable - BT1 DA
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_AD_BT1[17]      - (RW) Source clock enable - BT1 AD
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_DA_BT0[18]      - (RW) Source clock enable - BT0 DA
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_AD_BT0[19]      - (RW) Source clock enable - BT0 AD
                                     0: Disable
                                     1: Enable
    RG_WBG_CTL_OCC_RSV2[21..20]  - (RW) Reserved bits
    RG_WBG_CG_EN_AD_GL5[22]      - (RW) Source clock enable - GL5 AD
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_AD_GL1[23]      - (RW) Source clock enable - GL1 AD
                                     0: Disable
                                     1: Enable
    RG_WBG_CTL_OCC_RSV3[24]      - (RW) Reserved bits
    RG_WBG_CG_EN_WPLL960[25]     - (RW) Source clock enable - WPLL960
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_WPLL640[26]     - (RW) Source clock enable - WPLL640
                                     0: Disable
                                     1: Enable
    RG_WBG_CG_EN_BPLL[27]        - (RW) Source clock enable - BPLL
                                     0: Disable
                                     1: Enable
    RG_WBG_AFE_XTAL_CFG_OCC[30..28] - (RW) XTAL Input Configuration for OCC mode (when RG_OCC_PLL_SW = 1'b1)
                                     000: 26MHz
                                     001: 25MHz
                                     010: 40MHz
                                     011: 24MHz
                                     1XX: NA
    CR_OCC_PLL_SW[31]            - (RW) BG/XBUF/XTAL_CFG/BPLL/WPLL source switch
                                     0: Source comes from normal path
                                     1: Source comes from reserved path (as shown below)

 =====================================================================================*/
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_CR_OCC_PLL_SW_ADDR         CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_CR_OCC_PLL_SW_MASK         0x80000000                // CR_OCC_PLL_SW[31]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_CR_OCC_PLL_SW_SHFT         31
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_AFE_XTAL_CFG_OCC_ADDR CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_AFE_XTAL_CFG_OCC_MASK 0x70000000                // RG_WBG_AFE_XTAL_CFG_OCC[30..28]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_AFE_XTAL_CFG_OCC_SHFT 28
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_BPLL_ADDR     CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_BPLL_MASK     0x08000000                // RG_WBG_CG_EN_BPLL[27]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_BPLL_SHFT     27
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_WPLL640_ADDR  CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_WPLL640_MASK  0x04000000                // RG_WBG_CG_EN_WPLL640[26]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_WPLL640_SHFT  26
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_WPLL960_ADDR  CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_WPLL960_MASK  0x02000000                // RG_WBG_CG_EN_WPLL960[25]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_WPLL960_SHFT  25
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV3_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV3_MASK   0x01000000                // RG_WBG_CTL_OCC_RSV3[24]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV3_SHFT   24
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_GL1_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_GL1_MASK   0x00800000                // RG_WBG_CG_EN_AD_GL1[23]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_GL1_SHFT   23
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_GL5_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_GL5_MASK   0x00400000                // RG_WBG_CG_EN_AD_GL5[22]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_GL5_SHFT   22
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV2_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV2_MASK   0x00300000                // RG_WBG_CTL_OCC_RSV2[21..20]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV2_SHFT   20
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_BT0_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_BT0_MASK   0x00080000                // RG_WBG_CG_EN_AD_BT0[19]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_BT0_SHFT   19
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_BT0_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_BT0_MASK   0x00040000                // RG_WBG_CG_EN_DA_BT0[18]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_BT0_SHFT   18
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_BT1_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_BT1_MASK   0x00020000                // RG_WBG_CG_EN_AD_BT1[17]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_BT1_SHFT   17
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_BT1_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_BT1_MASK   0x00010000                // RG_WBG_CG_EN_DA_BT1[16]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_BT1_SHFT   16
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_WF_ADDR    CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_WF_MASK    0x00008000                // RG_WBG_CG_EN_AD_WF[15]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_WF_SHFT    15
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_WF_ADDR    CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_WF_MASK    0x00004000                // RG_WBG_CG_EN_DA_WF[14]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_DA_WF_SHFT    14
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_DFS_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_DFS_MASK   0x00002000                // RG_WBG_CG_EN_AD_DFS[13]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_DFS_SHFT   13
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_WF0TSSI_ADDR CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_WF0TSSI_MASK 0x00001000                // RG_WBG_CG_EN_AD_WF0TSSI[12]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CG_EN_AD_WF0TSSI_SHFT 12
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV1_ADDR   CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV1_MASK   0x00000FF0                // RG_WBG_CTL_OCC_RSV1[11..4]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_CTL_OCC_RSV1_SHFT   4
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_BG_OCC_ADDR      CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_BG_OCC_MASK      0x00000008                // RG_WBG_EN_BG_OCC[3]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_BG_OCC_SHFT      3
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_XBUF_OCC_ADDR    CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_XBUF_OCC_MASK    0x00000004                // RG_WBG_EN_XBUF_OCC[2]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_XBUF_OCC_SHFT    2
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_BPLL_OCC_ADDR    CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_BPLL_OCC_MASK    0x00000002                // RG_WBG_EN_BPLL_OCC[1]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_BPLL_OCC_SHFT    1
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_WPLL_OCC_ADDR    CONN_AFE_CTL_RG_WBG_CTL_OCC_ADDR
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_WPLL_OCC_MASK    0x00000001                // RG_WBG_EN_WPLL_OCC[0]
#define CONN_AFE_CTL_RG_WBG_CTL_OCC_RG_WBG_EN_WPLL_OCC_SHFT    0


#endif // __CONN_AFE_CTL_REGS_H__
